# generated by datamodel-codegen:
#   filename:  conference.json
#   timestamp: 2025-02-28T21:36:21+00:00

import datetime
from typing import Annotated, List, Optional

from pydantic import BaseModel, BeforeValidator, Field


class Content(BaseModel):
    about: str
    about_psf: str = Field(alias="about-psf")
    social_media: str = Field(alias="social-media")


class SponsorItem(BaseModel):
    name: str
    level: str
    level_order: int
    mobile_banner: bool
    logo_url: str
    description: str
    booth_number: Optional[str]
    job_fair_table_number: Optional[str]


class Sponsors(BaseModel):
    Visionary: Optional[List[SponsorItem]]
    Sustainability: Optional[List[SponsorItem]]
    Maintaining: Optional[List[SponsorItem]]
    Contributing: Optional[List[SponsorItem]]
    Supporting: Optional[List[SponsorItem]]
    Partner: Optional[List[SponsorItem]]
    Government_Participant: Optional[List[SponsorItem]] = Field(
        default=None, alias="Government Participant"
    )
    Participating: Optional[List[SponsorItem]]
    Associate: Optional[List[SponsorItem]]
    PyCon_US_Startup_Row: Optional[List[SponsorItem]] = Field(
        default=None, alias="PyCon US Startup Row"
    )
    Community: Optional[List[SponsorItem]] = Field(default=None)
    Standalone_Only: Optional[List[SponsorItem]] = Field(default=None, alias="Standalone Only")
    A_la_carte: Optional[List[SponsorItem]] = Field(default=None, alias="A la carte")
    Media: Optional[List[SponsorItem]]


class Conference(BaseModel):
    sponsors: Sponsors
    content: Annotated[
        Optional[Content], Field(default=None), BeforeValidator(lambda x: x if x else None)
    ]


class Speaker(BaseModel):
    id: int
    name: str
    photo: Optional[str]
    bio: str


class Session(BaseModel):
    name: str
    authors: List[str]
    contact: List[str]
    speakers: List[Speaker]
    description: str
    conf_key: int
    conf_url: str
    cancelled: bool


class ScheduleItem(BaseModel):
    room: str
    rooms: List[str]
    start: datetime.datetime
    end: datetime.datetime
    duration: int
    kind: str
    section: str
    conf_key: int
    list_render: bool
    license: str
    tags: str
    released: bool
    contact: List[str]
    name: str
    description: str
    authors: Optional[List[str]] = None
    speakers: Optional[List[Speaker]] = None
    conf_url: Optional[str] = None
    cancelled: Optional[bool] = None
    sessions: Optional[List[Session]] = None


class Schedule(BaseModel):
    conference: Conference
    schedule: List[ScheduleItem]
