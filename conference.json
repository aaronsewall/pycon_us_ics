{
  "conference": {
    "content": {},
    "sponsors": {
      "Visionary": [
        {
          "name": "Bloomberg",
          "level": "Visionary",
          "level_order": 0,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/BBGEngineering_black_ft6YuBD.png",
          "description": "Bloomberg is building the world's most trusted information network for financial professionals. Our 7,000+ engineers are dedicated to advancing and building new systems for the Bloomberg Terminal to solve complex, real-world problems. ​We trust our teams to choose the right technologies for the job, and, at Bloomberg, the answer is often Python. We employ an active community of 2,000+ Python developers who have their hands in everything from financial analytics and data science to contributing to open source technologies like Project Jupyter. Bloomberg is proud to be a Visionary Sponsor of the Python Software Foundation and host of many Python community events around the world. Learn more at TechAtBloomberg.com/python.",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "Google",
          "level": "Visionary",
          "level_order": 0,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/Google_2015_logo.png",
          "description": "Google believes that open source is good for everyone. By being open and freely available, it enables and encourages collaboration and the development of technology.",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "NVIDIA",
          "level": "Visionary",
          "level_order": 0,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/NVIDIA_Logo_V_ForScreen_ForLightBG_gSYoEsz.png",
          "description": "Since its founding in 1993, NVIDIA has been a pioneer in accelerated computing. The company’s invention of the GPU in 1999 sparked the growth of the PC gaming market, redefined computer graphics, ignited the era of modern AI and is fueling industrial digitalization across markets. NVIDIA is now a full-stack computing company with data-center-scale offerings that are reshaping industry.",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "Meta",
          "level": "Visionary",
          "level_order": 0,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/Meta_lockup_positive_primary_RGB_copy_hTkI52G.png",
          "description": "Meta, a social technology company",
          "booth_number": null,
          "job_fair_table_number": null
        }
      ],
      "Sustainability": [
        {
          "name": "Microsoft",
          "level": "Sustainability",
          "level_order": 1,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/Microsoft-logo_rgb_c-gray_2_WZVBa17.png",
          "description": "Open Source enables Microsoft products and services to bring choice, technology and community to our customers.",
          "booth_number": null,
          "job_fair_table_number": null
        }
      ],
      "Maintaining": [
        {
          "name": "Snowflake",
          "level": "Maintaining",
          "level_order": 2,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/Copy_of_bug-sno-R-blue.png",
          "description": "Snowflake enables organizations to learn, build, and connect with their data-driven peers. Collaborate, build data apps & power diverse workloads in the AI",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "Capital One",
          "level": "Maintaining",
          "level_order": 2,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/_Web-C1_Core_302_186.png",
          "description": "At Capital One, we use real-time data at scale, AI and machine learning, and the power of the cloud to solve challenging industry problems and build products, services, and experiences that can make a real difference in millions of peoples’ lives.",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "Qube Research & Technologies Limited",
          "level": "Maintaining",
          "level_order": 2,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/qrt_logo-optimized-light-bg.png",
          "description": "Qube Research & Technologies (QRT) is a global quantitative and systematic investment manager, operating in all liquid asset classes across the world. We are a technology and data driven group implementing a scientific approach to investing. Combining data, research, technology and trading expertise has shaped QRT’s collaborative mindset which enables us to solve the most complex challenges. QRT’s culture of innovation continuously drives our ambition to deliver high quality returns for our investors",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "American Express",
          "level": "Maintaining",
          "level_order": 2,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/AXP_BlueBoxLogoR.png",
          "description": "American Express is a globally integrated payments company, providing customers with access to products, insights and experiences that enrich lives and build business success.",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "Qube Research & Technologies",
          "level": "Maintaining",
          "level_order": 2,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/QRT-Brand-Master-BO-HR.png",
          "description": "Qube Research & Technologies (QRT) is a global quantitative and systematic investment manager, operating in all liquid asset classes across the world. We are a technology and data driven group implementing a scientific approach to investing. Combining data, research, technology and trading expertise has shaped QRT’s collaborative mindset which enables us to solve the most complex challenges. QRT’s culture of innovation continuously drives our ambition to deliver high quality returns for our investors",
          "booth_number": null,
          "job_fair_table_number": null
        }
      ],
      "Contributing": [
        {
          "name": "Western Governors University (WGU)",
          "level": "Contributing",
          "level_order": 3,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/WGU-Logo_RGB_04-2024_Color_WGU_Owl.png",
          "description": "Online University",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "Cubist Systematic Strategies",
          "level": "Contributing",
          "level_order": 3,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/Cubist.jpeg",
          "description": "Cubist Systematic Strategies is the systematic investing business of Point72. We deploy systematic, computer-driven trading strategies across multiple liquid asset classes. The core of our effort is rigorous research into a wide range of market anomalies, driven by our passion to understand the world around us and fueled by unparalleled access to a wide range of publicly available data sources.",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "OpenEDG Python Institute",
          "level": "Contributing",
          "level_order": 3,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/python-institute-regular_Zs9cpIT.png",
          "description": "An OpenEDG non-profit project to promote the Python programming language, train Python programmers, and support professional careers in Python and related technologies.",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "Indeed",
          "level": "Contributing",
          "level_order": 3,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/Indeed_Logo_RGB_q0kmZNH.png",
          "description": "Indeed is a global employment website that connects job seekers with employers. Founded in 2004, it serves as a job search engine, aggregating listings from company websites, job boards, staffing agencies, and more. It also provides tools for resume posting, company reviews, salary comparisons, and hiring solutions for employers. Indeed operates in over 60 countries and is one of the largest job-related platforms globally.",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "Anaconda, Inc",
          "level": "Contributing",
          "level_order": 3,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/2020_Anaconda_Logo_RGB_Corporate.png",
          "description": "With more than 45 million users, Anaconda is the most popular operating system for AI providing access to the foundational open-source Python packages used in modern AI, data science and machine learning through a seamless platform. We pioneered the use of Python for data science, championed its vibrant community, and continue to steward open-source projects that make tomorrow’s innovations possible. Our enterprise-grade solutions enable corporate, research, and academic institutions around the world to harness the power of open-source for competitive advantage, groundbreaking research, and a better world. To learn more visit https://www.anaconda.com.",
          "booth_number": null,
          "job_fair_table_number": null
        }
      ],
      "Supporting": [
        {
          "name": "Algorand",
          "level": "Supporting",
          "level_order": 4,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/algorand_full_logo_black.png",
          "description": "Designed by MIT professor and Turing Award-winning cryptographer Silvio Micali, Algorand is an enterprise-grade, programmable, layer-1 blockchain. The network's elegant Pure Proof-of-Stake consensus mechanism enables true scalability, handling over 10,000 transactions per second. With instant finality and a block time under three seconds, users can be certain any completed transactions stand as an unalterable truth. An ongoing drive towards decentralization, and continued R&D to build on early post-quantum security innovations, continue to make Algorand one of the most reliable and resilient blockchain platforms in the world.\r\n \r\nAlgorand is the first layer-1 blockchain to integrate pure, semantically normal Python as a native programming language, making the protocol instantly accessible to the millions of Python developers across the globe.\r\n \r\nAlgorand developer documentation, tutorials, and more can be found at https://developer.algorand.org/",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "Jane Street",
          "level": "Supporting",
          "level_order": 4,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/logo_horizontal_black-01.png",
          "description": "Jane Street is a quantitative trading firm with offices worldwide. We hire smart, humble people who love to solve problems, build systems, and test theories. Will our next great idea come from you?",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "Ansys",
          "level": "Supporting",
          "level_order": 4,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/Ansys_Logo_WhiteBackground_PNG.png",
          "description": "Ansys is the global leader in engineering simulation. Ansys simulation gives engineers the ability to explore and predict how products will work — or won’t work — in the real world. If you've ever seen a rocket launch, flown on an airplane, driven a car, used a computer, touched a mobile device, crossed a bridge or put on wearable technology, chances are you've used a product where Ansys software played a critical role in its creation.",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "Sentry",
          "level": "Supporting",
          "level_order": 4,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/image_processing20210621-1638-1g8u105.png",
          "description": "Take action on broken lines of code, crashes, and busted API calls with the only developer-first app monitoring platform built to give you answers - not clues.",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "Pydantic Logfire",
          "level": "Supporting",
          "level_order": 4,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/Pydantic_Logfire_logo_endorsed_tar_rgb.png",
          "description": "From the team behind Pydantic, Logfire is a new type of observability platform built on the same belief as our open source library — that the most powerful tools can be easy to use.",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "Salesforce Heroku",
          "level": "Supporting",
          "level_order": 4,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/Logo_dark__CMYK_heroku.png",
          "description": "Cloud Application Platform",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "AutoKitteh",
          "level": "Supporting",
          "level_order": 4,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/Group-238479.png",
          "description": "Build Durable Workflows with Just a Few Lines of Code",
          "booth_number": null,
          "job_fair_table_number": null
        }
      ],
      "Partner": [
        {
          "name": "Duolingo",
          "level": "Partner",
          "level_order": 5,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/Duolingo_landscape-lockup_RGB.png",
          "description": "Our mission is to develop the best education in the world and make it universally available.",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "Reuven Lerner — Python training",
          "level": "Partner",
          "level_order": 5,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/LERNER-Logo-Simple_Dark.png",
          "description": "Whether you're using Python at work or for fun, Reuven Lerner's courses will help you use it smarter, better, and more efficiently. Reuven is a full-time Python instructor, teaching Python to companies around the world since 1995. He offers multi-day courses, 90-minute \"microcourses,\" and recorded video courses. No matter your Python level, Reuven has a course that'll help you to accomplish more in less time.",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "AlphaSense",
          "level": "Partner",
          "level_order": 5,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/AlphaSenseLogo.png",
          "description": "The Leading Financial Research Platform",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "Codeflash",
          "level": "Partner",
          "level_order": 5,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/65c4218ed1f4702114c270d5_Favicon2.png",
          "description": "Codeflash is a general-purpose performance optimizer for Python code. It automatically identifies performance bottlenecks, uses LLMs to generate multiple optimization strategies, and rigorously verifies their correctness—ensuring your code runs at peak efficiency. Trusted by leading engineering teams like Pydantic and Langflow, Codeflash has delivered remarkable speed improvements in real-world codebases. Codeflash can optimize entire repositories, and when installed as a GitHub Action, it can optimize all future code you write. This lets Python developers focus on writing correct implementations while Codeflash automatically finds the most performant version of their code.",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "ReversingLabs",
          "level": "Partner",
          "level_order": 5,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/RL-Logo-Primary-Color.png",
          "description": "ReversingLabs is the trusted name in file and software security, to verify and deliver safe binaries. With the largest Threat Repository in the industry with over 40 billion searchable files, the Fortune 500 trusts their software supply chain security and malware analysis with ReversingLabs.",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "Kensho",
          "level": "Partner",
          "level_order": 5,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/Kensho-logo_Skywalker_2000.png",
          "description": "Kensho is an Artificial Intelligence company that builds solutions to uncover insights in messy and unstructured data that enable critical workflows and empower businesses to make decisions with conviction. Our products are powered by state-of-the-art Machine Learning techniques that allow customers to unlock insights faster using Artificial Intelligence, including voice-to-text transcription, data extraction from documents and natural language processing that gives computers the ability to comprehend and analyze human language.",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "Prefect",
          "level": "Partner",
          "level_order": 5,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/prefect-wordmark-black.png",
          "description": "Prefect is a workflow orchestration platform that empowers teams to build resilient, failure-tolerant workflows with the flexibility to adapt to any data challenge, ensuring reliable, on-time results even in the face of unexpected issues.",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "Datadog",
          "level": "Partner",
          "level_order": 5,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/datadog_logo_h_rgb.jpg",
          "description": "Modern monitoring & security.\r\n\r\nSee inside any stack, any app, at any scale, anywhere.",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "Temporal",
          "level": "Partner",
          "level_order": 5,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/Temporal_LogoLockup_Horizontal_dark_1_2x.png",
          "description": "Temporal delivers an open source durable execution solution that abstracts away the complexity of building scalable distributed systems. It presents a development abstraction that preserves complete application state so that in the case of a host or software failure it can seamlessly migrate execution to another machine. This eliminates complex failure and retry logic from applications, so developers can focus on what matters – delivering reliable systems, faster. Temporal Cloud provides a managed service backed by the originators of the project. It's adopted by thousands for mission-critical applications, including Stripe, Netflix, AlaskaAir, Snap, Datadog, and Hashicorp. Learn more at temporal.io.",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "Anvil",
          "level": "Partner",
          "level_order": 5,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/ANVIL-Logo-black-with-padding.png",
          "description": "Build web apps with nothing but Python - no Javascript required!",
          "booth_number": null,
          "job_fair_table_number": null
        }
      ],
      "Participating": [
        {
          "name": "Netflix",
          "level": "Participating",
          "level_order": 6,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/Netflix_Logo_RGB_d468dMp.png",
          "description": "",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "Six Feet Up",
          "level": "Participating",
          "level_order": 6,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/SFU-Logo-python__ai_for_good_FINAL-square-full_color.png",
          "description": "Six Feet Up accelerates IMPACTFUL Projects™ by crafting superior and lasting software solutions. As a consultancy with a core focus on Python and AI for the greater good, we bring unparalleled expertise in application development, AI and big data to launch game-changing ideas faster. Driven by the EOS Process™ and home to an AWS Hero, Six Feet Up is a woman-owned software company that values a blend of emotional and intellectual intelligence. Our dedication to excellence is showcased by our 5-star referral rating on Clutch.co. Trusted by leading organizations such as Capital One, NASA, Purdue University, and UNEP since 1999, we are eager to help our clients make an impact.",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "Astral",
          "level": "Participating",
          "level_order": 6,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/astral-logo-formation-1.png",
          "description": "Astral’s mission is to make the Python ecosystem more productive by building high-performance developer tools, starting with Ruff.",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "Commonwealth Bank of Australia",
          "level": "Participating",
          "level_order": 6,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/CBA_CommBankAust_Horizontal_Wordmark_sRGB3x-100.jpg",
          "description": "Australia's leading provider of integrated financial services, including retail, premium, business and institutional banking, superannuation, insurance and share-broking products and services.",
          "booth_number": null,
          "job_fair_table_number": null
        }
      ],
      "Associate": [
        {
          "name": "Feedzai",
          "level": "Associate",
          "level_order": 7,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/FeedzaiBlue.png",
          "description": "Feedzai - The leading Financial Crime Prevention platform, that  uses purpose-built AI to stop fraud and lower compliance costs covers the entire fincrime lifecycle - from account opening, to fraud prevention, to AML compliance.",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "Quansight",
          "level": "Associate",
          "level_order": 7,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/Quansight-02_AaxJQVd.png",
          "description": "We're a PyData consulting firm rooted in the scientific Python community.",
          "booth_number": null,
          "job_fair_table_number": null
        }
      ],
      "Media": [
        {
          "name": "Open Source JobHub",
          "level": "Media",
          "level_order": 12,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/OSJH_Logo_400x180_Stacked_transparent.png",
          "description": "Open Source JobHub aims to help everyone find a place in the open source ecosystem by connecting job seekers with employers looking for top talent. Let us help you turn down the noise and find the perfect job fit.",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "DevITjobs",
          "level": "Media",
          "level_order": 12,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/devitus-rectangle.png",
          "description": "",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "Linux Magazine",
          "level": "Media",
          "level_order": 12,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/LMI_Logo_Transparent.png",
          "description": "Linux Magazine is your guide to the world of Linux and open source. Each monthly issue includes advanced technical information you won't find anywhere else including tutorials, in-depth articles on trending topics, troubleshooting and optimization tips, and more! Subscribe to our free newsletters and get news and articles in your inbox https://bit.ly/Linux-Update",
          "booth_number": null,
          "job_fair_table_number": null
        },
        {
          "name": "LWN.net",
          "level": "Media",
          "level_order": 12,
          "mobile_banner": false,
          "logo_url": "https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/sponsor_web_logos/12x12logo.png",
          "description": "LWN.net is the premier source for news from the Linux and free software worlds. Each week, LWN provides in-depth coverage of a wide range of free software topics from kernel development through programming languages (Python included!), security, distributions, applications, and more.",
          "booth_number": null,
          "job_fair_table_number": null
        }
      ]
    }
  },
  "schedule": [
    {
      "room": "Outside of Hall B",
      "rooms": [
        "Outside of Hall B"
      ],
      "start": "2025-05-17T07:30:00-04:00",
      "end": "2025-05-17T09:00:00-04:00",
      "duration": 90,
      "kind": "break",
      "section": "talks",
      "conf_key": 98,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Breakfast",
      "description": "<p>Breakfast</p>"
    },
    {
      "room": "Outside of Hall B",
      "rooms": [
        "Outside of Hall B"
      ],
      "start": "2025-05-16T07:30:00-04:00",
      "end": "2025-05-16T09:00:00-04:00",
      "duration": 90,
      "kind": "break",
      "section": "talks",
      "conf_key": 46,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Breakfast",
      "description": "<p>Breakfast</p>"
    },
    {
      "room": "Hall B",
      "rooms": [
        "Hall B"
      ],
      "start": "2025-05-18T08:00:00-04:00",
      "end": "2025-05-18T09:00:00-04:00",
      "duration": 60,
      "kind": "plenary",
      "section": "talks",
      "conf_key": 150,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Lightning Talks",
      "description": "<p>Lightning Talks</p>"
    },
    {
      "room": "Outside of Hall B",
      "rooms": [
        "Outside of Hall B"
      ],
      "start": "2025-05-18T08:00:00-04:00",
      "end": "2025-05-18T09:00:00-04:00",
      "duration": 60,
      "kind": "break",
      "section": "talks",
      "conf_key": 149,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Breakfast",
      "description": "<p>Breakfast</p>"
    },
    {
      "room": "Hall B",
      "rooms": [
        "Hall B"
      ],
      "start": "2025-05-17T08:00:00-04:00",
      "end": "2025-05-17T09:00:00-04:00",
      "duration": 60,
      "kind": "plenary",
      "section": "talks",
      "conf_key": 99,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Lightning Talks",
      "description": "<p>Lightning Talks</p>"
    },
    {
      "room": "Room 317",
      "rooms": [
        "Room 317"
      ],
      "start": "2025-05-14T09:00:00-04:00",
      "end": "2025-05-14T12:30:00-04:00",
      "duration": 210,
      "kind": "tutorial",
      "section": "tutorials",
      "conf_key": 2,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Back to foundations: Automated testing with Python",
      "description": "<p>In the era of A.I., automatic testing is often tedious, time-consuming, and rarely given the attention it deserves. But is there a more engaging way to prove that your code works as expected?</p>\n<p>This tutorial will showcase how to harness Python tools to write automated tests, ranging from fundamental techniques to advanced approaches that make testing truly effective.\nThrough a hands-on live-coding session, we will follow a top-down approach: starting with principles, we will begin by testing simple functions. From there, we will move on to mocking external dependencies we can control and measuring the effectiveness of those tests. Finally, we will integrate everything tested so far, unveiling a complete testing strategy. The workshop will conclude with a recap and a brief handbook full of tips and more topics to explore.</p>\n<p>Throughout the session, we will embrace the entire philosophy of testing: beyond merely spotting bugs, we will see how testing is a powerful tool for designing, understanding, and uncovering hidden issues in our implementation. We will introduce and practice test-driven development (TDD) while also exploring alternative approaches.</p>\n<p>Neither extensive knowledge of Python (just some familiarity with classes and basic functions and ability to run Python scripts) nor special tools are required to attend the workshop: a little confidence with the basics is enough to participate, and a working Python environment is all we will need. Instructions will be provided throughout the workshop.</p>\n<p>Let's make testing engaging and impactful together. Long live testing!</p>",
      "authors": [
        "Francesco Bruni"
      ],
      "speakers": [
        {
          "id": 149,
          "name": "Francesco Bruni",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/149.jpg.256x256_q85.jpg",
          "bio": "<p>Software engineers for a few years, working with geospatial data now.\nIn love with Python, even if I feel comfortable with other languages as well. \nI strongly believe that the approach to the problem is much more relevant than being very tool-oriented.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/132/",
      "cancelled": false
    },
    {
      "room": "Room 320",
      "rooms": [
        "Room 320"
      ],
      "start": "2025-05-14T09:00:00-04:00",
      "end": "2025-05-14T12:30:00-04:00",
      "duration": 210,
      "kind": "tutorial",
      "section": "tutorials",
      "conf_key": 5,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "AI crash course for Python developers",
      "description": "<p>This crash-course tutorial is for Python developers that want to get up to speed with AI development quickly. \nWe will cover the what and how of language models, learn about concepts like tokens, markov chains, and vector similarity with games and exercises. Each introduction to a concept will be explained by your experienced instructor in terms that don’t assume formal CS education. We’ll build demos, apps and discuss pitfalls and challenges with AI development in 2025.</p>",
      "authors": [
        "Anthony Shaw"
      ],
      "speakers": [
        {
          "id": 89,
          "name": "Anthony Shaw",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/89.jpg.256x256_q85.jpg",
          "bio": "<p>-</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/77/",
      "cancelled": false
    },
    {
      "room": "Room 321",
      "rooms": [
        "Room 321"
      ],
      "start": "2025-05-15T09:00:00-04:00",
      "end": "2025-05-15T12:30:00-04:00",
      "duration": 210,
      "kind": "tutorial",
      "section": "tutorials",
      "conf_key": 19,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "The A-B-Cs of Regression Analysis",
      "description": "<p>We all want to do great work with real data, determine causality and generate predictions, but determining the appropriate methods for a situation, and doing estimation on the relationships between variables is hard. In this tutorial, we’ll take a deep dive into regression analysis, which is a set of statistical methods for estimating relationships between dependent (or outcome) variables and independent variables (or covariates or regressors or predictors). </p>\n<p>We’ll start with the method of linear regression (finding a best-fit line for a data), then move to regressions more appropriate for settings where the dependent variable takes a particular given set of values, such as binary outcomes and logistic regressions. Along the way, we’ll pay close attention to statistical definitions that teach us what we can and can’t infer from our data regarding real world causality. We’ll also talk about scientific writing, and how to accurately document and communicate our results. The tutorial will feature a mix of instruction and discussing the mathematical background of each regression model, and hands-on exploration of real datasets and real world data questions using Jupyter notebooks.</p>",
      "authors": [
        "Neha"
      ],
      "speakers": [
        {
          "id": 108,
          "name": "Neha",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/108.jpg.256x256_q85.jpg",
          "bio": "<p>I’m a PhD student at Carnegie Mellon University in Statistics, Data Science, and Public Policy. My research interests include machine learning policy and causal inference, and I’m the primary owner and maintainer of dame-flame, a Python package for matching in causal inference. In the past, I’ve worked for the United Nations as an AI and Data Science Research Fellow, and briefly as a software engineer. My Python teaching experience includes TAing introductory programming classes in Python, and Girls Who Code clubs for middle school students. </p>\n<p>I have a large variety of hobbies, including swimming, playing music, and arts.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/95/",
      "cancelled": false
    },
    {
      "room": "Room 318",
      "rooms": [
        "Room 318"
      ],
      "start": "2025-05-14T09:00:00-04:00",
      "end": "2025-05-14T12:30:00-04:00",
      "duration": 210,
      "kind": "tutorial",
      "section": "tutorials",
      "conf_key": 3,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Building machine learning pipelines that scale: a case study using Ibis and IbisML",
      "description": "<p>Tabular data is everywhere. As Python has become the language of choice for data science, pandas and scikit-learn have become staples in the machine learning (ML) toolkit for processing and modeling this data. However, when data size scales up, these tools become unwieldy (slow) or altogether untenable (running out of memory). Ibis provides a unified, Pythonic, dataframe interface to 20+ execution backends, including dataframe libraries, databases, and analytics engines. Local backends, such as Polars, DuckDB, and DataFusion, perform orders of magnitude faster than pandas while using less memory. Ibis further enables users to scale using distributed backends like Spark or cloud data warehouses like Snowflake and BigQuery without changing their code, giving them the power to choose the right engine for any scale.</p>\n<p>IbisML extends the intrinsic benefits of using Ibis to the ML workflow. It lets users preprocess their data at scale on any Ibis-supported backend—users create IbisML recipes defining sequences of last-mile preprocessing steps to get their data ready for modeling. A recipe and any scikit-learn estimator can be chained together into a pipeline, so IbisML seamlessly integrates with scikit-learn, XGBoost (using the scikit-learn estimator interface), and PyTorch (using skorch) models. At inference time, Ibis/IbisML once again takes the feature preprocessing to the efficient backend, and user-defined functions (UDFs) enable prediction while minimizing data transfer. This completes an end-to-end ML workflow that scales with data size.</p>\n<p>In this tutorial, you'll build an end-to-end ML project to predict the live win probability at any given move during a chess game. You’ll be using actual, recent games from the largest free chess server (Lichess). We’ll be using GitHub Codespaces, so you don’t need to download or configure anything; however, please bring a laptop!</p>",
      "authors": [
        "Anjali Datta",
        "Deepyaman Datta"
      ],
      "speakers": [
        {
          "id": 137,
          "name": "Anjali Datta",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/137.jpg.256x256_q85.jpg",
          "bio": "<p>Anjali is a postdoc at Stanford Medicine working on MRI processing to identify neurosurgical targets. She also has a PhD in Electrical Engineering from Stanford, during which she developed MRI acquisition and reconstruction methods. Medical imaging is of course a field where ML is taking over, and Anjali is now interested in the applications of deep learning to MRI and other signal processing.</p>"
        },
        {
          "id": 138,
          "name": "Deepyaman Datta",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/138.jpeg.256x256_q85.jpg",
          "bio": "<p>Deepyaman is a software engineer at <a href=\"https://dagster.io/\">Dagster Labs</a>. He joined from Voltron Data, where he was a Senior Staff Software Engineer on the <a href=\"https://ibis-project.org/\">Ibis</a> team. Before their acquisition by Voltron Data, he was a Founding Machine Learning Engineer at Claypot AI, working on their real-time feature engineering platform. Prior to that, he led data engineering teams and asset development across a range of industries at QuantumBlack, AI by McKinsey.</p>\n<p>Deepyaman is passionate about building and contributing to the broader open-source data ecosystem. Outside of his day job, he helps maintain <a href=\"https://kedro.org/\">Kedro</a>, an open-source Python framework for building production-ready data science pipelines.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/121/",
      "cancelled": false
    },
    {
      "room": "Room 317",
      "rooms": [
        "Room 317"
      ],
      "start": "2025-05-15T09:00:00-04:00",
      "end": "2025-05-15T12:30:00-04:00",
      "duration": 210,
      "kind": "tutorial",
      "section": "tutorials",
      "conf_key": 15,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Reproducible Dependency Management with pixi",
      "description": "<p>Learn how to manage your conda- and pip-based Python dependencies with pixi.\nWith its declarative approach, pixi provides a reliable way for reproducible\nPython environments.\nIts design is based on experiences drawn from tools such as <code>pip</code>,\n<code>conda</code> and <code>mamba</code> as well as Rust's <code>cargo</code>.</p>\n<p>Managing dependencies can be a complex task,\nespecially when it comes to multi-platform support and extensions written in\ncompiled languages, such as C/C++ or Rust, are involved.\nThere are many tools for Python that can help to take care of different aspects\nof this problem.\nThese tools are external Python packages that are not distributed with Python\nitself.\nOnly <code>pip</code> is installed by default.\nOther, more recent languages such as Rust, include the tooling for dependency\nmanagement as part of the core language.\nOn the other hand, the Python ecosystem for dependency management is very\nfragmented.\nIn general, there are two main approaches\n(a) based on pip packages and\n(b) based on conda packages.\nPixi offers an approach that can work with both package types.\nIts design is inspired by Rust's cargo.\nIn addition to Python packages, pixi can also manage software written in other\nlanguages.\nFor example, using conda-forge as the default conda repository,\npixi can install tools such as <code>gcc</code>, <code>pandoc</code>, or <code>git</code>.\nPixi can work tother with existing tools such as <code>setuptools</code> or <code>poetry</code>.\nIn fact, it uses <code>uv</code> internally to install pip packages.</p>",
      "authors": [
        "Mike Müller"
      ],
      "speakers": [
        {
          "id": 148,
          "name": "Mike Müller",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/148.jpg.256x256_q85.jpg",
          "bio": "<p>I've been a Python user since 1999, teaching Python professionally since 2004.\nI am also active in the community, organizing Python conferences such as\nPyCon DE, EuroSciPy, and BarCamps.\nI am a PSF Fellow, PSF Community Service Award winner,\nand chair of the German Python Software Verband.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/131/",
      "cancelled": false
    },
    {
      "room": "Hall B",
      "rooms": [
        "Hall B"
      ],
      "start": "2025-05-18T09:00:00-04:00",
      "end": "2025-05-18T09:45:00-04:00",
      "duration": 45,
      "kind": "plenary",
      "section": "talks",
      "conf_key": 151,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Keynote - The Marshall Project",
      "description": "<p><a href=\"/2025/about/keynote-speakers#the-marshall-project\">The Marshall Project</a>\n<br><span style=\"font-size: smaller; font-weight: normal;\">Keynote</span></p>"
    },
    {
      "room": "Room 320",
      "rooms": [
        "Room 320"
      ],
      "start": "2025-05-15T09:00:00-04:00",
      "end": "2025-05-15T12:30:00-04:00",
      "duration": 210,
      "kind": "tutorial",
      "section": "tutorials",
      "conf_key": 18,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Discover 3D graphics with WebGL and PyScript",
      "description": "<p>WebGL is a wonderful set of APIs inside every modern Web browser that allow us to generate interactive 3D scenes. Thanks to PyScript, we can explore WebGL without writing JavaScript. This tutorial will be a deep dive into a single topic: how to use PyScript with WebGL to harness the graphical power of the Web browser. By the end of the tutorial, I expect you to gain confidence that you can do it, too, and be inspired to try!</p>\n<p>The tutorial assumes familiarity with Python and high-school math. PyScript experience helpful but not required.</p>",
      "authors": [
        "Łukasz Langa"
      ],
      "speakers": [
        {
          "id": 27,
          "name": "Łukasz Langa",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/27.jpg.256x256_q85.jpg",
          "bio": "<p>Failed comedian. CPython Developer in Residence. Wannabe musician. Python 3.8 &amp; 3.9 release manager. Co-host of the core.py podcast. Original creator of Black. Dad.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/24/",
      "cancelled": false
    },
    {
      "room": "Hall B",
      "rooms": [
        "Hall B"
      ],
      "start": "2025-05-17T09:00:00-04:00",
      "end": "2025-05-17T09:25:00-04:00",
      "duration": 25,
      "kind": "plenary",
      "section": "talks",
      "conf_key": 100,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Diversity & Inclusion Panel",
      "description": "<p>Diversity &amp; Inclusion Panel</p>"
    },
    {
      "room": "Room 321",
      "rooms": [
        "Room 321"
      ],
      "start": "2025-05-14T09:00:00-04:00",
      "end": "2025-05-14T12:30:00-04:00",
      "duration": 210,
      "kind": "tutorial",
      "section": "tutorials",
      "conf_key": 6,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Speed Up Your Code by 50x: A Guide to Moving from NumPy to JAX",
      "description": "<p>JAX is more than just \"NumPy for the GPU\"—it offers advanced features but also presents unique challenges. This hands-on tutorial provides a practical introduction to JAX through interactive exercises covering key concepts such as:</p>\n<ul>\n<li><code>jit</code> compilation for performance optimization</li>\n<li>Native control flow using loop primitives</li>\n<li>Efficient function mapping with vmap</li>\n<li>Performance profiling techniques</li>\n<li><code>jax</code> random number generation design and usage</li>\n</ul>\n<p>Participants will then deepen their understanding by iteratively migrating a <strong>Gaussian Mixture Model</strong> from a pure <code>numpy</code> implementation to an optimized <code>jax</code> version, highlighting a real-world use-case.</p>\n<p>This tutorial distills lessons the authors found invaluable during their own migration from <code>numpy</code> to <code>jax</code>, achieving over an order-of-magnitude speedup in real-world applications. Designed to provide attendees with a jumpstart on adopting <code>jax</code>, this session—along with its comprehensive set of notebooks—aims to be a one-stop resource for anyone looking to leverage <code>jax</code> for numerical computing and machine learning.</p>",
      "authors": [
        "Ian Quah",
        "Bryan Quah"
      ],
      "speakers": [
        {
          "id": 62,
          "name": "Ian Quah",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/62.jpg.256x256_q85.jpg",
          "bio": "<p>I am a second-year Ph.D. student in the Neural Systems and Behavior program at the University of Washington. My research integrates Neuroscience, Psychology, and Machine Learning, aiming to use machine learning techniques to gain insights into biological processes and leverage those insights to refine and enhance model performance.</p>\n<p>In addition, I work on privacy-preserving machine learning, specializing in homomorphic encryption for secure computations. I contribute to the OpenFHE lattice-cryptography library, where I serve as the Head of Technical Outreach.</p>"
        },
        {
          "id": 63,
          "name": "Bryan Quah",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/63.jpeg.256x256_q85.jpg",
          "bio": "<p>Bryan works as researcher at Cedars Sinai Medical Center in Los Angeles where he develops machine learning methods for neuroimaging.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/54/",
      "cancelled": false
    },
    {
      "room": "Room 310/311",
      "rooms": [
        "Room 310/311"
      ],
      "start": "2025-05-14T09:00:00-04:00",
      "end": "2025-05-14T12:30:00-04:00",
      "duration": 210,
      "kind": "tutorial",
      "section": "tutorials",
      "conf_key": 1,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Comprehending comprehensions",
      "description": "<p>Comprehensions are one of the most important — and misunderstood — parts of Python. In this tutorial, I'll walk you through comprehensions, including how to write them, and why you would want to do so. By the time you finish this tutorial, you'll fully understand list, set and dict comprehensions, as well as nested comprehensions and generator expressions. You'll understand the differences between regular \"for\" loops and comprehensions, and where to use them.</p>",
      "authors": [
        "Reuven M. Lerner"
      ],
      "speakers": [
        {
          "id": 81,
          "name": "Reuven M. Lerner",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/81.jpg.256x256_q85.jpg",
          "bio": "<p>Reuven is a full-time instructor in Python and Pandas, in business since 1995. He teaches at companies around the world, offers video courses, and writes books — most recently, Python Workout and Pandas Workout, both published by Manning. He writes about Python for his \"Better Developers\" newsletter, and poses Pandas puzzles based on current events in \"Bamboo Weekly.\" Reuven lives with his wife and three children in Modi'in, Israel.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/106/",
      "cancelled": false
    },
    {
      "room": "Room 319",
      "rooms": [
        "Room 319"
      ],
      "start": "2025-05-14T09:00:00-04:00",
      "end": "2025-05-14T12:30:00-04:00",
      "duration": 210,
      "kind": "tutorial",
      "section": "tutorials",
      "conf_key": 4,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Python project packaging: from zero to hero",
      "description": "<p>Packaging your code is an essential skill that empowers you to share your Python projects with the world. However, the packaging process can appear complex and overwhelming, and it can be difficult to know where to begin.</p>\n<p>This hands-on tutorial will demystify packaging and get you started with the fundamentals of Python packaging. We’ll cover how to structure projects and follow best practices for project layouts, specify project metadata, make your package installable, and publish it to PyPI. We’ll use the modern and easy-to-use packaging tool <em>uv</em>, but most of the topics covered will also apply to any modern packaging tool (like PDM, Hatch or Poetry). </p>\n<p>Every new concept will be introduced as a group, practised individually through practical exercises and then reflected on together as a group. The materials will be available on GitHub, and a compressed packaging cheat sheet will be provided as assistance for the exercises and future reference. </p>\n<p>By the end of this tutorial, participants will have created a properly structured Python package, and learned how to manage dependencies effectively with packaging tools such as uv, publish a package to PyPI, and set up basic CI/CD for the project on GitHub.</p>\n<p><strong>Audience:</strong><br />\nThis tutorial assumes you are familiar with basic Python syntax, have some experience creating (smaller or larger) Python programs, and want to learn how to package and share your code. Whether you’re a beginner Pythonista eager to start sharing your code or an experienced developer who wants to be brought up to speed with the current state of packaging, this is the tutorial for you. </p>\n<p><strong>Prerequisites:</strong><br />\nFor this tutorial, you will need a laptop with Python installed.</p>",
      "authors": [
        "Marie Roald",
        "Yngve Mardal Moe"
      ],
      "speakers": [
        {
          "id": 29,
          "name": "Marie Roald",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/29.png.256x256_q85.jpg",
          "bio": "<p>Marie Roald is a researcher, data scientist and educator. For the past years, she has developed and taught programming courses with the goal of empowering teachers to apply programming in their classrooms and has taught courses both digitally and physically at major cities all across Norway. Marie also has experience with academic conferences and science communication.</p>"
        },
        {
          "id": 30,
          "name": "Yngve Mardal Moe",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/30.jpg.256x256_q85.jpg",
          "bio": "<p>Yngve is an experienced Python educator, Python developer open source enthusiast. He is a co-creator of TurtleThread and has taught Python to professionals, university students and academics. He is currently tech lead working on safely automating the Norwegian power grid. While working at the Norwegian University of Life Sciences, Yngve headed a project transforming introduction to Python into a tutorial-based course focusing on active learning.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/72/",
      "cancelled": false
    },
    {
      "room": "Room 310/311",
      "rooms": [
        "Room 310/311"
      ],
      "start": "2025-05-15T09:00:00-04:00",
      "end": "2025-05-15T12:30:00-04:00",
      "duration": 210,
      "kind": "tutorial",
      "section": "tutorials",
      "conf_key": 14,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "What is the magic of magic methods in the Python language?",
      "description": "<p>Welcome to this tutorial on Python's magic methods, often underestimated or overlooked in programming practice. And yet, magic methods make it easy to write code that implements often very complex algorithms in a readable way.</p>\n<p>Python allows you to equip created classes with special methods, also known as magic methods or dunder methods. To recognize a special method, you should know that it is a method whose name begins and ends with a double underscore. But it's not the name that their magic lies in, because these methods have a special meaning for Python.</p>\n<p>Python calls magic methods in response to fundamental operations, such as creating class instances, indexing sequences, comparing objects, managing attribute access, and more, so knowing how to create them is fundamental for any Pythonista.</p>\n<p>During this tutorial, you’ll:\n* Find out what Python magic methods are,\n* Understand the magic behind Python magic methods,\n* Learn how to create and use magic methods,\n* Customize various behaviors of classes using magic method.\n* Talk about some interesting non-trivial magic methods.</p>\n<p>To fully benefit from this tutorial, you should be familiar with object-oriented programming in Python.</p>\n<p>This tutorial will have classroom exercises, post class homeworks as well as complimentary readings. All the presentation, code, exercises will be shared in advance and the solutions of the exercise will be shared after the tutorial is completed.</p>",
      "authors": [
        "Paweł Żal"
      ],
      "speakers": [
        {
          "id": 7,
          "name": "Paweł Żal",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/7.png.256x256_q85.png",
          "bio": "<p>Paweł Żal - software developer, system architect with 20 years of experience in IT. A proponent of distributed solutions, recently fascinated by time series databases. An avid kayaker and tinkerer.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/6/",
      "cancelled": false
    },
    {
      "room": "Hall B",
      "rooms": [
        "Hall B"
      ],
      "start": "2025-05-16T09:00:00-04:00",
      "end": "2025-05-16T09:25:00-04:00",
      "duration": 25,
      "kind": "plenary",
      "section": "talks",
      "conf_key": 47,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Welcome",
      "description": "<p>Welcome</p>"
    },
    {
      "room": "Room 318",
      "rooms": [
        "Room 318"
      ],
      "start": "2025-05-15T09:00:00-04:00",
      "end": "2025-05-15T12:30:00-04:00",
      "duration": 210,
      "kind": "tutorial",
      "section": "tutorials",
      "conf_key": 16,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Polars: Faster, Simpler, Smarter Python Analytics",
      "description": "<p>Designed for Python users familiar with pandas, this session will bridge the gap between what you know and what’s possible with Polars’ power-packed features.</p>\n<p>We’ll begin by understanding the fundamentals of Polars: its lazy execution engine, multi-threading capabilities, and how it leverages Apache Arrow for performance. You’ll learn how to convert existing pandas workflows to Polars and write concise, blazing-fast queries that process large datasets effortlessly. From there, we’ll dive into real-world examples and unlock advanced features, including expressions, group-by operations, and streaming data pipelines.</p>",
      "authors": [
        "Matt Harrison"
      ],
      "speakers": [
        {
          "id": 121,
          "name": "Matt Harrison",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/121.png.256x256_q85.png",
          "bio": "<p>Matt Harrison helps the largest companies in the world to leverage Python and apply data science. When he is not providing corporate training, he can be found writing books or out in the mountains. He is the author of the best-selling books Effective Pandas, Effective XGBoost, and more.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/107/",
      "cancelled": false
    },
    {
      "room": "Room 319",
      "rooms": [
        "Room 319"
      ],
      "start": "2025-05-15T09:00:00-04:00",
      "end": "2025-05-15T12:30:00-04:00",
      "duration": 210,
      "kind": "tutorial",
      "section": "tutorials",
      "conf_key": 17,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Event Sourcing From The Ground Up",
      "description": "<p>We often think about data in terms of storing the current state of our models. If a chess player moves a piece, we update the state of the board and persist it. This makes it easy to query the current state of the game, but also poses some challenges: How do we know which moves led up to the current state? And how do we ensure that the state remains consistent, even in a distributed system?</p>\n<p><strong>Event Sourcing</strong> takes a different approach to storing state. Instead of storing the current state as-is, we store the <em>sequence of events</em> that led to the current state. If we need to know the current state, we can replay this immutable record of events to reconstruct it. Not only does this give us an immutable audit log, this also promotes loose coupling and enables optimistic concurrency.</p>\n<p>In this tutorial, we are going to build an “Event Sourcing”-based backend for a game of Connect Four from the ground up. Rather than using a framework that abstracts away some of the core principles, we are going to implement the mechanisms ourselves to help us understand the core principles.</p>\n<h3>Audience &amp; Preparation</h3>\n<p>This tutorial is for you if you’re interested in Event Sourcing but don’t have any real experience with it yet. We do expect you to have at least an intermediate level in Python, with some experience in writing (simple) classes.</p>\n<p>Do make sure to bring your laptop, with the following tools installed:\n- Python 3.12 or 3.13\n- Docker, podman, or another container runtime\n- Git\n- Your favorite editor</p>\n<p><em><strong>Caution:</strong> This tutorial is a well-balanced combination of theory and hands-on exercises. You will have to write some actual code!</em></p>",
      "authors": [
        "Sebastiaan Zeeff"
      ],
      "speakers": [
        {
          "id": 70,
          "name": "Sebastiaan Zeeff",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/70.jpg.256x256_q85.jpg",
          "bio": "<p>Sebastiaan is a Python enthusiast who likes to think about good software design and engineering. He is a fellow of the EuroPython Society and the Python Software Foundation, works as a Principal Expert for the Pythoneers at Sopra Steria Netherlands, and frequently speaks at conferences around the world.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/60/",
      "cancelled": false
    },
    {
      "room": "Hall B",
      "rooms": [
        "Hall B"
      ],
      "start": "2025-05-16T09:25:00-04:00",
      "end": "2025-05-16T09:45:00-04:00",
      "duration": 20,
      "kind": "plenary",
      "section": "talks",
      "conf_key": 48,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "PSF Welcome",
      "description": "<p>PSF Welcome</p>"
    },
    {
      "room": "Hall B",
      "rooms": [
        "Hall B"
      ],
      "start": "2025-05-17T09:25:00-04:00",
      "end": "2025-05-17T10:05:00-04:00",
      "duration": 40,
      "kind": "plenary",
      "section": "talks",
      "conf_key": 101,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Keynote - Lynn Root",
      "description": "<p><a href=\"/2025/about/keynote-speakers#lynn-root\">Lynn Root</a>\n<br><span style=\"font-size: smaller; font-weight: normal;\">Keynote</span></p>"
    },
    {
      "room": "Room 315",
      "rooms": [
        "Room 315"
      ],
      "start": "2025-05-15T09:30:00-04:00",
      "end": "2025-05-15T10:30:00-04:00",
      "duration": 60,
      "kind": "sponsor-workshop",
      "section": "sponsor-presentations",
      "conf_key": 30,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Slot",
      "description": ""
    },
    {
      "room": "Room 309",
      "rooms": [
        "Room 309"
      ],
      "start": "2025-05-15T09:30:00-04:00",
      "end": "2025-05-15T10:30:00-04:00",
      "duration": 60,
      "kind": "sponsor-workshop",
      "section": "sponsor-presentations",
      "conf_key": 29,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Slot",
      "description": ""
    },
    {
      "room": "Room 308",
      "rooms": [
        "Room 308"
      ],
      "start": "2025-05-15T09:30:00-04:00",
      "end": "2025-05-15T10:30:00-04:00",
      "duration": 60,
      "kind": "sponsor-workshop",
      "section": "sponsor-presentations",
      "conf_key": 28,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Slot",
      "description": ""
    },
    {
      "room": "Room 316",
      "rooms": [
        "Room 316"
      ],
      "start": "2025-05-15T09:30:00-04:00",
      "end": "2025-05-15T10:30:00-04:00",
      "duration": 60,
      "kind": "sponsor-workshop",
      "section": "sponsor-presentations",
      "conf_key": 31,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Slot",
      "description": ""
    },
    {
      "room": "Hall B",
      "rooms": [
        "Hall B"
      ],
      "start": "2025-05-18T09:45:00-04:00",
      "end": "2025-05-18T10:00:00-04:00",
      "duration": 15,
      "kind": "plenary",
      "section": "talks",
      "conf_key": 152,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "PSF - Update from our Security Engineers",
      "description": "<p>PSF - Update from our Security Engineers</p>"
    },
    {
      "room": "Hall B",
      "rooms": [
        "Hall B"
      ],
      "start": "2025-05-16T09:45:00-04:00",
      "end": "2025-05-16T10:30:00-04:00",
      "duration": 45,
      "kind": "plenary",
      "section": "talks",
      "conf_key": 49,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Keynote - Cory Doctorow",
      "description": "<p><a href=\"/2025/about/keynote-speakers#cory-doctorow\">Cory Doctorow</a>\n<br><span style=\"font-size: smaller; font-weight: normal;\">Keynote</span></p>"
    },
    {
      "room": "Hall A",
      "rooms": [
        "Hall A"
      ],
      "start": "2025-05-18T10:00:00-04:00",
      "end": "2025-05-18T13:00:00-04:00",
      "duration": 180,
      "kind": "plenary",
      "section": "talks",
      "conf_key": 154,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Posters Session",
      "description": "<p><a href=\"https://us.pycon.org/2025/schedule/posters/list/\">Posters</a></p>"
    },
    {
      "room": "Hall A",
      "rooms": [
        "Hall A"
      ],
      "start": "2025-05-18T10:00:00-04:00",
      "end": "2025-05-18T13:00:00-04:00",
      "duration": 180,
      "kind": "plenary",
      "section": "talks",
      "conf_key": 153,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Job Fair",
      "description": "<p>Job Fair</p>"
    },
    {
      "room": "Hall C, Ballroom A, Ballroom BC, Room 301-305, Room 310/311",
      "rooms": [
        "Hall C",
        "Ballroom A",
        "Ballroom BC",
        "Room 301-305",
        "Room 310/311"
      ],
      "start": "2025-05-17T10:05:00-04:00",
      "end": "2025-05-17T10:30:00-04:00",
      "duration": 25,
      "kind": "break",
      "section": "talks",
      "conf_key": 102,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Break",
      "description": "<p>Break</p>"
    },
    {
      "room": "Hall C",
      "rooms": [
        "Hall C"
      ],
      "start": "2025-05-17T10:30:00-04:00",
      "end": "2025-05-17T11:00:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 103,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "PyXL: A Chip That Runs Python ByteCode at Turbo Speeds",
      "description": "<p>I built a custom chip that executes Python ByteCode. PyXL potentially speeds up pure Python code execution by 4x compared to an M1 Pro MacBook Pro.\nPyXL has diverse use cases, ranging from speed improvements on traditional hosts to enabling Python as a viable option for real-time systems where deterministic performance is crucial.</p>",
      "authors": [
        "Ron Livne"
      ],
      "speakers": [
        {
          "id": 42,
          "name": "Ron Livne",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/42.jpeg.256x256_q85.jpg",
          "bio": "<p>Ron Livne is a seasoned software engineer with 17 years of experience specializing in performance optimization, hardware acceleration, and system design. His work spans diverse domains, including scientific computing, communication systems, machine learning infrastructure, and high-frequency trading. Ron has a passion for bridging the gap between innovation and efficiency, consistently delivering solutions that push the boundaries of performance through advanced networking equipment, code optimization, GPUs and custom hardware.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/40/",
      "cancelled": false
    },
    {
      "room": "Room 310/311",
      "rooms": [
        "Room 310/311"
      ],
      "start": "2025-05-17T10:30:00-04:00",
      "end": "2025-05-17T11:00:00-04:00",
      "duration": 30,
      "kind": "charla",
      "section": "talks",
      "conf_key": 107,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Honrando las Narrativas de Braceros: Un Enfoque Pythonico para Minería de Textos de Historias de Trabajo Arduo, Migración y Resiliencia",
      "description": "<p>Entre 1942 y 1964, el Programa Bracero llevó a más de 4.5 millones de trabajadores mexicanos a los Estados Unidos para hacer frente a la escasez de mano de obra. Sin embargo, las experiencias personales de estos trabajadores a menudo permanecen en la sombra, aunque sus relatos capturan historias de trabajo incansable, migración, discriminación y resiliencia. Honrar estas narrativas requiere no solo un reconocimiento histórico, sino también un método para descubrir y analizar sistemáticamente sus relatos matizados. Aprovechando la minería de texto y el procesamiento de lenguaje natural mediante bibliotecas de Python como <em>beautiful soup</em>, <em>Sentence Transformers</em> y <em>BERTopic</em>, esta charla tiene como objetivo destacar los temas, luchas y resiliencia que definen las experiencias de braceros.</p>\n<p>Esta sesión explorará cómo estas bibliotecas de Python pueden utilizarse para realizar un análisis sistemático de grandes cuerpos de texto, revelando temas recurrentes y el sentimiento en historias orales y entrevistas. Profundizaremos en técnicas basadas en código para el modelado de temas, la extracción de palabras clave y el análisis de sentimiento que dan vida a las historias de los Braceros. Al examinar cómo Python puede facilitar la comprensión del lenguaje del trabajo, la migración y las dificultades, esta charla demostrará cómo la ciencia de datos puede desempeñar un papel en la valoración de narrativas culturales e históricas. Al hacerlo, esta presentación también busca mostrar el potencial de Python para unir los campos de las humanidades digitales, la etnografía y la tecnología, allanando el camino hacia una mayor comprensión y reconocimiento de las voces subrepresentadas en la historia compartida de trabajo y migración entre México y Estados Unidos.</p>",
      "authors": [
        "Rodrigo Silva Ferreira"
      ],
      "speakers": [
        {
          "id": 17,
          "name": "Rodrigo Silva Ferreira",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/17.png.256x256_q85.png",
          "bio": "<p>Rodrigo Silva Ferreira was born and raised in Salvador, Brazil. He obtained a BSc. in Chemistry with minors in Applied Math and Arabic from NYU Abu Dhabi, and a MSc. in Analytical Chemistry from the University of Pittsburgh. Rodrigo currently works as a software quality engineer at a statistical software company in central Pennsylvania. When he is not busy testing statistical products, Rodrigo enjoys learning about how statistics and data can be used to develop a deeper understanding of topics at the intersection of STEM, society, and public policy. He is passionate about using statistics and data to understand and improve the world.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/15/",
      "cancelled": false
    },
    {
      "room": "Room 301-305",
      "rooms": [
        "Room 301-305"
      ],
      "start": "2025-05-17T10:30:00-04:00",
      "end": "2025-05-17T11:00:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 106,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Writing Extension Modules To Be Interruptible",
      "description": "<p>Have you ever told Python to crunch some numbers, realized right after\npressing RETURN that you made a mistake setting up the problem, hit\ncontrol-C to stop it again...and then sat there twiddling your thumbs\nfor a surprisingly long time as nothing seemed to happen?</p>\n<p>The short version of what's going on when this happens is, the\nPython interpreter is notified of your having hit control-C almost\nimmediately, but it has to wait to throw <code>KeyboardInterrupt</code> until\nthe extension module that's doing the number crunching finishes\nits calculation and returns control to the interpreter.</p>\n<p>In this talk we will discuss why the interpreter works that way (and\nwhy it <em>has</em> to work that way), what extension module authors can do\ntoday to make their extensions notice control-C promptly, and how we\ncan all work toward a future where it's easy and natural for extension\nmodule authors to write extensions that don't make you wait for them\nto stop.</p>",
      "authors": [
        "Zack Weinberg"
      ],
      "speakers": [
        {
          "id": 41,
          "name": "Zack Weinberg",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/41.png.256x256_q85.png",
          "bio": "<p>Zack is a Research Software Engineer at Million Concepts LLC (https://millionconcepts.com/) where he works on tools for analyzing and cataloguing data collected from probes and telescopes over the past half-century and more of space exploration. These projects sometimes require him to delve deeper into the innards of the Python interpreter than one might expect.</p>\n<p>He holds a Ph.D. in Electrical and Computer Engineering from Carnegie Mellon University, where his academic research focused on machine learning and statistical approaches to investigating internet censorship at global scale. He co-taught CMU's \"Introduction to Computer Systems\" course from 2020 through 2023. Zack's other interests include cognitive science, systems theory, candlemaking, pottery, and game design. He is re-learning to play the piano.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/39/",
      "cancelled": false
    },
    {
      "room": "Ballroom BC",
      "rooms": [
        "Ballroom BC"
      ],
      "start": "2025-05-17T10:30:00-04:00",
      "end": "2025-05-17T11:00:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 105,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Scale Smarter, Not Harder, with cuPyNumeric.",
      "description": "<p>Many data and simulation scientists use NumPy for its ease of use and good performance on CPU.  This approach works well for single-node tasks, but scaling to handle larger datasets or more resource-intensive computations introduces significant challenges. Not to mention, using GPUs requires another level of complexity. We present the cuPyNumeric library.  cuPyNumeric gives developers the same familiar NumPy interface, but seamlessly distributes work across CPUs and GPUs.</p>\n<p>A compelling example when scaling is necessary is when scientists at the  SLAC National Accelerator Laboratory need to process a large amount of data within a fixed time window, called beam time.  The full dataset generated during experiments is too large to be processed on a single CPU. Additionally, the code often must be modified during the beam time to adapt to changing experimental needs. Being able to use NumPy syntax rather than lower level distributed computing libraries makes these changes quick and easy, allowing researchers to focus on conducting more experiments rather than debugging or optimizing code.</p>\n<p>cuPyNumeric is designed to be a drop-in replacement to NumPy. Built on top of task-based distributed runtime from Stanford University, it automatically parallelizes NumPy APIs across all available resources, taking care of data distribution, communication, asynchronous and accelerated execution of compute kernels on both GPUs or multi-core CPUs.  In addition, cuPyNumeric can be integrated with other popular Python libraries like SciPy, matplotlib, Jax.  With cuPyNumeric, SLAC scientists successfully ran their data processing code distributed across multiple nodes and GPUs, processing the full dataset with a 6x speed-up compared to the original single-node implementation.</p>\n<p>In this talk we showcase the productivity and performance of cuPyNumeric library covering some detail on its implementation.</p>",
      "authors": [
        "Irina Demeshko",
        "Quynh L. Nguyen"
      ],
      "speakers": [
        {
          "id": 73,
          "name": "Irina Demeshko",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/73.jpg.256x256_q85.jpg",
          "bio": "<p>Irina Demeshko is a senior software engineer at NVIDIA working on cuNumeric and Legate projects. Before NVIDIA, Irina was a research scientist and team leader of the Co-Design team at the Los Alamos National Laboratory. Her work and research interests are in the area of new HPC technologies and programming models. Irina received her Ph.D. in mathematical and computer science from the Tokyo Institute of Technology in 2013.</p>"
        },
        {
          "id": 74,
          "name": "Quynh L. Nguyen",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/74.png.256x256_q85.jpg",
          "bio": "<p>Quynh L. Nguyen is an Associate Scientist at SLAC National Accelerator Laboratory. She completed her PhD in Physics at JILA-University of Colorado Boulder (2020) and postdoctoral work at SLAC National Accelerator Laboratory and Stanford University as a Q-FARM Bloch Fellow. Her research interests include nonequilibrium dynamics of materials and high performance computing with applications towards quantum information science.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/63/",
      "cancelled": false
    },
    {
      "room": "Hall C, Ballroom A, Ballroom BC, Room 301-305, Room 310/311",
      "rooms": [
        "Hall C",
        "Ballroom A",
        "Ballroom BC",
        "Room 301-305",
        "Room 310/311"
      ],
      "start": "2025-05-16T10:30:00-04:00",
      "end": "2025-05-16T11:00:00-04:00",
      "duration": 30,
      "kind": "break",
      "section": "talks",
      "conf_key": 50,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Break",
      "description": "<p>Break</p>"
    },
    {
      "room": "Ballroom A",
      "rooms": [
        "Ballroom A"
      ],
      "start": "2025-05-17T10:30:00-04:00",
      "end": "2025-05-17T11:00:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 104,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Python for Dark Sky Conservation in National Parks",
      "description": "<p>Starry night skies are among the most awe-inspiring sceneries connecting us to the natural wonders and cultural histories. However, increasing light pollution is diminishing our view of the night skies. More than 99% of the U.S. population lives under light-polluted skies, and nearly 80% of North Americans can no longer see the Milky Way.</p>\n<p>The U.S. National Park Service (NPS) was established by the 1916 Organic Act with the mission to preserve and protect the natural and cultural resources and values of the National Park System. Our NPS Natural Sounds and Night Skies Division provides all 400+ national park units with scientific, technical, and management support in outdoor lighting, night sky quality assessment, and night sky interpretive programs.</p>\n<p>To uphold this mission, I led a team to develop the NPS Fisheye Night Sky Imager: a lightweight camera system capable of rapidly assessing the brightness of the entire night sky in a single snapshot. </p>\n<p>Python is our language of choice for processing all data. We have created this open-source pipeline that transforms raw images into positionally and brightness-calibrated fisheye views of the night sky. With the new cameras and the Python pipeline, we can now quickly measure sky brightness and deliver the best scientific information for the national park management.  </p>\n<p>We now have five camera systems distributed across the United States, and numerous park staff have been trained in using the Python pipeline. The users of this pipeline come from diverse backgrounds, including astronomy, biology, ecology, engineering, and geography.</p>\n<p>This talk will showcase how Python plays a crucial role in conserving natural dark skies across the U.S. National Parks and will highlight the language as a friendly tool that empowers users from various backgrounds.</p>",
      "authors": [
        "Li-Wei Hung"
      ],
      "speakers": [
        {
          "id": 75,
          "name": "Li-Wei Hung",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/75.jpg.256x256_q85.jpg",
          "bio": "<p>Dr. Li-Wei Hung leads the National Park Service (NPS) night sky monitoring team, which serves all 433 national park units in the United States. Her role involves providing scientific support to superintendents and resource managers, with a focus on protecting natural night skies for the management of both natural and cultural resources, facilities, wildlife, and visitor experiences across the NPS.</p>\n<p>Dr. Hung, an astrophysicist by training, earned her Ph.D. degree in astronomy from the University of California, Los Angeles. She also holds a B.S. degree in Physics and Astronomy from The Ohio State University.</p>\n<p>Dr. Hung was born and raised in Taipei, Taiwan, a sweet potato-shaped island in Southeast Asia full of tropical fruits and fresh seafood. She is fluent in Mandarin, Taiwanese, English, and has a basic understanding of Spanish. Outside of work, she finds joy in outdoor activities such as backpacking, camping, hiking, biking, running, and swimming. At home, her playful two-year-old boy keeps her delightfully busy beyond her work commitments.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/64/",
      "cancelled": false
    },
    {
      "room": "Hall C",
      "rooms": [
        "Hall C"
      ],
      "start": "2025-05-16T11:00:00-04:00",
      "end": "2025-05-16T11:30:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 51,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Building a NoGIL Load Balancer in 30 minutes",
      "description": "<p>Load balancers are widespread nowadays because most software systems are web-centric and service oriented. However, they’re extremely complex to build, because they must be very performant and use sophisticated algorithms to route traffic. Until recently, you couldn’t use Python to build one, because even though it would make the code simpler, the GIL prevented multiple threads from executing Python at the same time.\nNow that you can, what are the practical implications in your day to day work?\nIn this talk, we’re going to live code a load balancer in Python. This will help us understand the pros and cons of using modules such as asyncio, threading and concurrent.futures, and what changes when we remove the GIL from the way.\nWhether you’re building systems that demand concurrency (such as AI models or DevOps pipelines), or you’re just curious about how tools like gUnicorn or Starlette work under the hood, you’ll come away with practical insights on how to start off the NoGIL era on the right foot.</p>",
      "authors": [
        "Alvaro Duran"
      ],
      "speakers": [
        {
          "id": 128,
          "name": "Alvaro Duran",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/128.jpg.256x256_q85.jpg",
          "bio": "<p>I write software that moves money around—in Python. It’s software that must be highly available, performant and correct every single time. Building this kind of system has made me deeply familiar with the design patterns, libraries and frameworks needed for reliability at scale. I am obsessed with high quality testing and fast product validation cycles.\nI also author <em>The Payments Engineer Playbook</em>, a newsletter read by over 1,500 fintech engineers, where I explore the technical challenges of building money software.\nI use Vim, I like pineapple in my pizza—and I won't apologize for either.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/113/",
      "cancelled": false
    },
    {
      "room": "Ballroom A",
      "rooms": [
        "Ballroom A"
      ],
      "start": "2025-05-16T11:00:00-04:00",
      "end": "2025-05-16T11:30:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 52,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Bridging Python and Apache Iceberg™: The Power of PyIceberg",
      "description": "<p>Using tools like PyArrow, Pandas, or Polars makes it easy to work with dataframes. However, as datasets scale to terabytes, managing tables, evolving schemas, and ensuring consistency across tools becomes increasingly complex. <a href=\"https://iceberg.apache.org\">Apache Iceberg™</a>, an open table format, addresses these challenges, and, with <a href=\"https://py.iceberg.apache.org/\">PyIceberg</a>, seamlessly integrates with your favorite Python-based tools.</p>\n<p>We will start with an introduction to Iceberg and PyIceberg, focusing on the features PyIceberg brings to the Python ecosystem such as schema evolution and transactional guarantees. We will demonstrate how PyIceberg supports interoperability between Iceberg tables and Python-native dataframes like PyArrow and Pandas, using practical examples of creating, querying, and writing to Iceberg tables.</p>\n<p>From these practical examples, we will dive deeper to explore how Iceberg tables evolve during these operations. This includes an in-depth look at Iceberg's file structure—metadata files, manifest lists, and manifests—and how PyIceberg leverages this structure to perform transactional table updates and optimize query planning, ensuring reliable performance at scale.</p>\n<p>Finally, we will discuss PyIceberg’s advanced features, including schema evolution, hidden partitioning, and time travel, which make table management efficient and flexible.</p>",
      "authors": [
        "Rushan Jiang"
      ],
      "speakers": [
        {
          "id": 141,
          "name": "Rushan Jiang",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/141.jpeg.256x256_q85.jpg",
          "bio": "<p>I am also known as Jonas and Honah. I am a software engineer at Snowflake and a committer and PMC member of Apache Iceberg.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/124/",
      "cancelled": false
    },
    {
      "room": "Room 301-305",
      "rooms": [
        "Room 301-305"
      ],
      "start": "2025-05-16T11:00:00-04:00",
      "end": "2025-05-16T11:30:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 54,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Diving into the Deep End: A Python Journey in Water Management",
      "description": "<p>Six years ago, I was asked to create a better Excel spreadsheet to track water requests for a small irrigation district. That request sparked an unexpected journey: from knowing only basic Python syntax to building a SaaS platform that models physical water delivery systems. This platform now handles water accounting, delivery tracking, scheduling, reporting, and even simulation for real-world use.</p>\n<p>In this talk, I’ll share how I tackled challenges like:\n- Transitioning from spreadsheets to a Python-powered solution.\n- Modeling physical systems without a background in discrete mathematics, graph theory, or simulation.\n- Scaling a personal learning project into a production-ready SaaS application.</p>\n<p>I’ll also explore the tools and techniques that made it possible, the lessons I learned along the way, and the moments of failure and success that shaped my journey. Whether new to Python, considering tackling a big project, or just curious about real-world applications of Python, this talk will inspire attendees to dive in and solve problems beyond their comfort zone.</p>",
      "authors": [
        "Jack Linke"
      ],
      "speakers": [
        {
          "id": 119,
          "name": "Jack Linke",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/119.jpeg.256x256_q85.jpg",
          "bio": "<p>Jack Linke tends to learn the hard way - and shares the lessons from those experiences with others through blogging, tweets, and speaking engagements. He has been developing software and hardware projects off-and-on for most of his life, but much of his relevant Python development experience has been hard-earned over the past five years during development of Watervize - a B2B2B SaaS web application (written in Django) to help irrigation water utility companies improve efficiency, analysis, and communication with staff and agriculture customers.</p>\n<p>Jack’s technology interests include Python, the Django project, simulation, GIS, graph theory, data storytelling, and visualization. He is a frequent contributor to the open source community, an Individual Member of the Django Software Foundation, and a contributing member of the Python Software Foundation.</p>\n<p>His speaking experience includes briefing Generals on topics ranging from budgets to technical concepts, instructing at formal training centers, providing software demonstrations and feature walk-throughs, and he was certified as a Weapons and Tactics Instructor (WTI) while serving as a Marine Corps Officer.</p>\n<p>Outside of coding, Jack takes his Husky (Lady Duchess) on adventures, solves unusual math and logic problems, and makes a mess in the kitchen (and life).</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/104/",
      "cancelled": false
    },
    {
      "room": "Room 310/311",
      "rooms": [
        "Room 310/311"
      ],
      "start": "2025-05-16T11:00:00-04:00",
      "end": "2025-05-16T11:30:00-04:00",
      "duration": 30,
      "kind": "charla",
      "section": "talks",
      "conf_key": 55,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "\"GeoMonitoreo con Python: Soluciones Innovadoras para los Desafíos de Latinoamérica\"",
      "description": "<p>En esta charla, contaremos la experiencia de subirse al ‘tren Python’ que prometía ser una tecnología en expansión allá por el 2015, cuando comenzamos a utilizar este lenguaje para la implementación de soluciones basadas en procesamiento de imágenes de video y satelitales para aplicaciones científicas en casos reales. Desde ese entonces, junto con su ecosistema compuesto por bibliotecas en constante actualización, Python continúa revolucionando el monitoreo ambiental en Latinoamérica. \nCon aplicaciones como el análisis de imágenes satelitales para evaluar los cambios de uso y cobertura de suelo hasta la detección de aumento o disminución de humedales o la presencia de cianobacterias en lagos, ríos o embalses, esta herramienta ha permitido implementar soluciones accesibles y escalables frente a desafíos como el cambio climático, la gestión de recursos hídricos y la conservación de ecosistemas. Compartiremos casos de estudio exitosos y herramientas clave, mostrando cómo la comunidad puede contribuir al cuidado ambiental y la sostenibilidad ambiental en la región. Python es más que un lenguaje de programación, es una interacción continua entre documentación, desarrolladores y la comunidad que pone a disposición infinidad de herramientas para que cualquier persona con una idea para cuidar el planeta pueda generar su aporte y divulgarlo globalmente, algo que resultaba difícil de imaginar en nuestros comienzos.</p>",
      "authors": [
        "Natalia V. Revollo",
        "Carlos E. Berger"
      ],
      "speakers": [
        {
          "id": 78,
          "name": "Natalia V. Revollo",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/78.png.256x256_q85.png",
          "bio": "<p>Doctor en Ingeniería por la Universidad Nacional del Sur e Ingeniera en Informática por la UNJU, Argentina. Actualmente es profesora  e investigadora del Instituto de Ciencias e Ingeniería de la Computación (ICIC-UNS-CONICET) en el área de proyectos de desarrollo tecnológico y social. Es especialista en el desarrollo de algoritmos y software basados ​​en el procesamiento digital de imágenes y el estudio de sistemas inteligentes. Ha realizado cursos de especialización en diferentes universidades de la Argentina y del exterior, y ha presentado publicaciones en el ámbito de la automatización de sistemas de clasificación y medición no supervisada de imágenes satelitales y videos de características relacionadas con la superficie terrestre. Ha participado en proyectos de transferencia tecnológica aplicada en áreas ambientales y geociencias como analista y desarrollador de algoritmos y modelos de aprendizaje automático. Fue autora del primer estudio sobre Capacidad de Carga de Playa utilizando algoritmos basados ​​en visión por computadora realizado en Argentina. Su trabajo más reciente aborda temas relacionados con el monitoreo no invasivo de los Recursos Hídricos y su interacción con el medio ambiente, desde el monitoreo de playas en zonas costeras, la teledetección de cuencas hídricas y la clasificación de humedales.</p>"
        },
        {
          "id": 79,
          "name": "Carlos E. Berger",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/79.jpg.256x256_q85.jpg",
          "bio": "<p>I am an Electronic Engineer and Ph.D. in Control of Systems, deeply engaged in research and education, particularly in the application of programming languages to scientific and multidisciplinary fields. I am a full professor at two universities in Argentina, and I also work as an independent developer, actively seeking new opportunities and positions.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/67/",
      "cancelled": false
    },
    {
      "room": "Ballroom BC",
      "rooms": [
        "Ballroom BC"
      ],
      "start": "2025-05-16T11:00:00-04:00",
      "end": "2025-05-16T11:30:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 53,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "World's First Undoable Notebook",
      "description": "<h2>Description</h2>\n<p>Interactive Notebooks (e.g., Jupyter, Colab) are widely used for data science tasks such as data analysis, data visualization, and model training. A fundamental limitation of vanilla notebook frameworks is the inability to undo the effect of cell executions on the session state, e.g., users cannot ‘un-drop’ dataframe columns. In this talk, I will describe our ongoing work on adding automated, lightweight checkpointing in notebook sessions to address this issue.</p>\n<h2>Audience</h2>\n<p>This talk should be interesting for an intermediate-level audience who have some experience with using Python-based notebooks and common data science libraries (e.g., Pandas, Matplotlib) and have experienced first-hand the various issues of existing notebook frameworks (e.g., no undos, non-persistent state). This talk will assume prior knowledge of notebook basics and terminology (e.g., cell executions, session state).</p>\n<h2>Objectives</h2>\n<p>Attendees will learn about how incremental checkpointing and versioning techniques commonly utilized in databases can be adapted to work well with interactive notebooks. At a more detailed level, they will learn about the characteristics of typical notebook workloads and how information (e.g., dependencies between variables) required for incremental checkpointing can be profiled from cell executions.</p>",
      "authors": [
        "RWGK"
      ],
      "speakers": [
        {
          "id": 105,
          "name": "RWGK",
          "photo": null,
          "bio": "<p>-</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/92/",
      "cancelled": false
    },
    {
      "room": "Hall C",
      "rooms": [
        "Hall C"
      ],
      "start": "2025-05-17T11:15:00-04:00",
      "end": "2025-05-17T11:45:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 108,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "What's New in the Linux Kernel... from Python",
      "description": "<p>Every new version of the Linux kernel comes with new features, many of which can be easily used in Python. In this introduction to the world of systems programming in Python, we'll use our favorite language to try out a couple of new features added to the Linux kernel over the past year. Along the way, we'll learn about tools in the Python standard library for interfacing with the operating system and working with C-style data structures.</p>",
      "authors": [
        "Geoffrey Thomas"
      ],
      "speakers": [
        {
          "id": 14,
          "name": "Geoffrey Thomas",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/14.jpg.256x256_q85.jpg",
          "bio": "<p>Geoffrey Thomas is a software engineer with interests in operating systems infrastructure, security, and packaging. In his day job he has built countless Python packages from source in the course of importing them into internal build systems. He may be best known to the Python community indirectly as one of the authors of PEP 668, which broke <code>sudo pip install</code> (for good reasons, he promises). Geoffrey was also the co-creator of the initial support for writing Linux kernel modules in Rust and worked to get Rust support accepted in the mainline Linux kernel. Outside of software, he is active in his church choir and in local activism for streets and housing.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/12/",
      "cancelled": false
    },
    {
      "room": "Ballroom BC",
      "rooms": [
        "Ballroom BC"
      ],
      "start": "2025-05-17T11:15:00-04:00",
      "end": "2025-05-17T11:45:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 110,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "When GPUs Make Python Slower: Patterns and Pitfalls",
      "description": "<p>When does GPU acceleration slow down your Python code? More often than you might think! Join me to explore the world of GPU acceleration, in which I will walk through some use cases where it makes your code faster and slower, and sometimes much slower. I’ll explain what GPU accelerated libraries like Numba, CuPy, cuDF and cuGraph really do, and we’ll dive into string processing, memory transfer overhead, and real-world case studies in processing time-series data. Whether you’re new to GPU acceleration or already using it in production, you’ll better understand when using GPUs help, when it doesn’t, and when you should reach for other ways to make your Python code faster.</p>",
      "authors": [
        "Kaashif Hymabaccus"
      ],
      "speakers": [
        {
          "id": 155,
          "name": "Kaashif Hymabaccus",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/155.jpg.256x256_q85.jpg",
          "bio": "<p>Kaashif Hymabaccus is a senior software engineer at Bloomberg. His team, which builds distributed systems to compute and store portfolio analytics, are heavy users of Python, Pandas, and PySpark.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/138/",
      "cancelled": false
    },
    {
      "room": "Room 301-305",
      "rooms": [
        "Room 301-305"
      ],
      "start": "2025-05-17T11:15:00-04:00",
      "end": "2025-05-17T11:45:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 111,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Scaling the Mountain: A Framework for Tackling Large-Scale Tech Debt",
      "description": "<p>Managing tech debt in large legacy codebases isn’t just a challenge—it’s an ongoing battle that can drain developer productivity and morale. In this talk, I’ll introduce a Python-powered <strong>Tech Debt Framework bar-raiser</strong> designed to help teams tackle even the most daunting tech debt problems with 100,000+ violations.\nThis open-source framework empowers developers and engineering leaders by:\n - <strong>Tracking Progress:</strong> Measure and visualize the state of tech debt and trends over time.\n - <strong>Recognizing Contributions:</strong> Celebrate developer efforts and foster accountability with contribution leaderboards and automated shoutouts.\n - <strong>Automating Fixes:</strong> Save countless hours with codemods that address repetitive debt patterns, allowing developers to focus on higher-priority work.</p>\n<p>Through real-world case studies, I’ll showcase how we:\n - Reduced <strong>70,000+</strong> pyright-ignore annotations to boost type-checking coverage from 60% to 99.5%.\n - Converted a monolithic <strong>sync codebase to async</strong>, addressing blocking IO issues and adopting asyncio effectively.</p>\n<p>Attendees will gain actionable strategies for scaling Python automation, fostering team buy-in, and systematically reducing tech debt across massive codebases. Whether you’re dealing with type errors, legacy dependencies, or async transitions, this talk provides a roadmap for creating cleaner, more maintainable code at scale.</p>",
      "authors": [
        "Jimmy Lai"
      ],
      "speakers": [
        {
          "id": 2,
          "name": "Jimmy Lai",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/2.jpg.256x256_q85.jpg",
          "bio": "<p>Jimmy Lai is a Software Engineer on the Infrastructure team at ZipHQ, with a passion for Python and sharing knowledge through engaging tech talks. His recent appearances at PyCon US, EuroPython, and PyCon JP covered topics such as linting, profiling and optimization, asyncio, type annotations, automated refactoring, and practical testing.</p>\n<p>Jimmy is also an active open-source contributor, having worked on tools like LibCST, Fixit, and bar-raiser, empowering developers to write cleaner, more maintainable code. When he’s not coding or presenting, he’s exploring ways to make large-scale systems more efficient and developer-friendly.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/2/",
      "cancelled": false
    },
    {
      "room": "Ballroom A",
      "rooms": [
        "Ballroom A"
      ],
      "start": "2025-05-17T11:15:00-04:00",
      "end": "2025-05-17T11:45:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 109,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Missing the Apex: Predicting F1 Races with Python",
      "description": "<p>Inspired by, and iterates upon, a paper published in an academic journal, this talk walks throughs through how I used Python to predict Fomula 1 (F1) races. Specifically we talk about the specific challenges related to web scraper, data wrangling, and statistical analysis to try and predict the outcome of F1 races by the evolution of track data over the weekend. Whether beginner or intermediate, or have no familiarity with F1 there's something in here for everyone to learn how to apply Python to their projects.</p>",
      "authors": [
        "Josh Weissbock"
      ],
      "speakers": [
        {
          "id": 135,
          "name": "Josh Weissbock",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/135.jpeg.256x256_q85.jpg",
          "bio": "<p>-</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/119/",
      "cancelled": false
    },
    {
      "room": "Room 310/311",
      "rooms": [
        "Room 310/311"
      ],
      "start": "2025-05-17T11:15:00-04:00",
      "end": "2025-05-17T11:45:00-04:00",
      "duration": 30,
      "kind": "charla",
      "section": "talks",
      "conf_key": 112,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Más allá de Try-Except: La frontera de Python en el manejo de errores con Monadas y Railway Magic",
      "description": "<p>Quiero que lleves tus habilidades de manejo de errores en Python a un nivel superior, haciendo que tu código sea más limpio, mantenible y menos propenso a fallos, incluso a medida que crezca en complejidad.</p>\n<p>Las estrategias tradicionales de manejo de excepciones en Python, como LBYL (\"Look Before You Leap\") y EAFP (\"Easier to Ask for Forgiveness than Permission\"), funcionan bien en contextos simples, pero rápidamente se vuelven difíciles de manejar a medida que las bases de código crecen. Esto resulta en problemas de legibilidad, complejidad innecesaria y riesgo de errores no manejados adecuadamente, lo cual puede llevar a fallos inesperados.</p>\n<p>En mi charla, \"Más allá de Try-Except: La frontera de Python en el manejo de errores con Monads y Railway Magic\", exploraremos un enfoque innovador para la gestión de errores en Python. Utilizaremos los monads, específicamente con la Results Library, y el método Railway-Driven Development, que nos permitirá adoptar conceptos de programación funcional para construir una estructura sólida y predecible para el manejo de errores.</p>\n<p>A través de ejemplos prácticos, demostraré cómo este enfoque facilita la integración de características avanzadas de Python, como pattern matching, haciendo que la gestión de errores sea más clara y eficiente. Al final de la charla, tendrás las herramientas necesarias para implementar un sistema de manejo de errores más robusto y mantenible en tus propios proyectos, superando las limitaciones de las prácticas tradicionales y mejorando significativamente la calidad de tu código.</p>",
      "authors": [
        "Sebastian Arias"
      ],
      "speakers": [
        {
          "id": 103,
          "name": "Sebastian Arias",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/103.png.256x256_q85.jpg",
          "bio": "<p>I am Sebastian Arias, an Ecuadorian Software Engineer with 7 years of experience in Python web development, TDD, and Functional Programming and IA enthusiast. As a Senior Developer and Consultant for a US based consultancy, I have worked extensively with US-based companies, and my passion lies in helping people explore new ideas and adopt code best practices. When I'm not coding, you can often find me blending my own coffee mix. As a coffee enthusiast, I take the 'bean to cup' journey quite seriously!</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/90/",
      "cancelled": false
    },
    {
      "room": "Room 316",
      "rooms": [
        "Room 316"
      ],
      "start": "2025-05-15T11:30:00-04:00",
      "end": "2025-05-15T12:30:00-04:00",
      "duration": 60,
      "kind": "sponsor-workshop",
      "section": "sponsor-presentations",
      "conf_key": 35,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Slot",
      "description": ""
    },
    {
      "room": "Room 309",
      "rooms": [
        "Room 309"
      ],
      "start": "2025-05-15T11:30:00-04:00",
      "end": "2025-05-15T12:30:00-04:00",
      "duration": 60,
      "kind": "sponsor-workshop",
      "section": "sponsor-presentations",
      "conf_key": 33,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Slot",
      "description": ""
    },
    {
      "room": "Room 308",
      "rooms": [
        "Room 308"
      ],
      "start": "2025-05-15T11:30:00-04:00",
      "end": "2025-05-15T12:30:00-04:00",
      "duration": 60,
      "kind": "sponsor-workshop",
      "section": "sponsor-presentations",
      "conf_key": 32,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Slot",
      "description": ""
    },
    {
      "room": "Room 315",
      "rooms": [
        "Room 315"
      ],
      "start": "2025-05-15T11:30:00-04:00",
      "end": "2025-05-15T12:30:00-04:00",
      "duration": 60,
      "kind": "sponsor-workshop",
      "section": "sponsor-presentations",
      "conf_key": 34,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "What good is an AI coding assistant to a professional? (Sponsor: Google)",
      "description": "<p>You're a professional, using Python for real, serious work. Why would you even consider using an AI coding assistant? Even suggesting it sounds kind of fishy. Maybe even insulting.</p>\n<p>But there are good times and places for an AI coding assistant - <em>perhaps even for you!</em> Are you:</p>\n<ul>\n<li>tossing together a web experiment that could stand to look a little nicer than your CSS and JavaScript skills usually allow?</li>\n<li>exploring a new library or platform that could have better documentation and examples?</li>\n<li>tired of going back and forth from your IDE to searching for needed details like function signatures and argument types?</li>\n</ul>\n<p>These are all great times for even expert Python programmers to leverage an AI coding assistant. And the assistants are improving at a fast clip.</p>\n<p>This talk will show you how to get started with an AI assistant and go through examples of scenarios where it can help. You'll leave the session knowing whether one can be valuable to you, and if so, where and when it's worth trying.</p>",
      "authors": [
        "Charlie Engelke"
      ],
      "speakers": [
        {
          "id": 68,
          "name": "Charlie Engelke",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/68.jpg.256x256_q85.jpg",
          "bio": "<p>Charlie Engelke is a developer relations engineer at Google Cloud. His focus is in helping Python developers build, deploy, and run cloud applications and using the ever-increasing number of tools and APIs available there.</p>\n<p>Before Google, Charlie was CTO at Infotech, Inc., a midsized software and Saas provider.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/58/",
      "cancelled": false
    },
    {
      "room": "Ballroom BC",
      "rooms": [
        "Ballroom BC"
      ],
      "start": "2025-05-16T11:45:00-04:00",
      "end": "2025-05-16T12:15:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 58,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Going From Notebooks to Scalable Systems",
      "description": "<p>Jupyter Notebooks are a fantastic tool that make it very easy to get started on a project. But often, you’ll reach a point where you want to make your code part of a larger system, and you’ll need to change your way of working. You’ll need to go from code that gives you some insights or results to robust, reproducible code that runs automatically. In this talk, I’ll explain strategies that will help you smoothly refactor your code. I’ll introduce tools that will help you, and discuss the skills that you’ll need. Whether you're a data scientist looking to productionize your models or a developer working with data-heavy applications, you'll gain practical knowledge to help you move from exploratory notebooks to robust, scalable systems.</p>",
      "authors": [
        "Catherine Nelson"
      ],
      "speakers": [
        {
          "id": 59,
          "name": "Catherine Nelson",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/59.jpg.256x256_q85.jpg",
          "bio": "<p>Catherine Nelson is a freelance data scientist and the author of two O'Reilly books, this year’s Software Engineering for Data Scientists, and her 2020 book Building Machine Learning Pipelines. Previously, she was a Principal Data Scientist at SAP Concur where she worked on production NLP systems. Catherine has a PhD in geophysics from Durham University and a Masters of Earth Sciences from Oxford University. She is currently consulting for startups in the Generative AI space.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/51/",
      "cancelled": false
    },
    {
      "room": "Room 301-305",
      "rooms": [
        "Room 301-305"
      ],
      "start": "2025-05-16T11:45:00-04:00",
      "end": "2025-05-16T12:15:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 59,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "How to learn Japanese with Python",
      "description": "<p>Japanese is reportedly one of the most difficult languages for English speakers to learn.\n(FSI language difficulty: https://www.fsi-language-courses.org/blog/fsi-language-difficulty/)\nThere are many reasons for this, including the fact that there are three types of characters: hiragana, katakana, and kanji, and that words are not separated by spaces.\nIn this talk, I will first introduce what makes Japanese different from many European languages.\nThen I will show how Python and natural language processing libraries can be used to support Japanese language learning.</p>",
      "authors": [
        "Takanori Suzuki"
      ],
      "speakers": [
        {
          "id": 139,
          "name": "Takanori Suzuki",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/139.jpg.256x256_q85.jpg",
          "bio": "<p>Takanori is a Chairperson of <a href=\"https://www.pycon.jp\">PyCon JP Association</a>.\nWorked as a PyCon JP organizer since PyCon mini JP in January 2011 and has been the Co-Chair of PyCon JP 2024.\nHe is also a director of <a href=\"https://www.beproud.jp\">BeProud Inc.</a>, and his title is \"Python Climber\".\nCurrently he teaches Python to beginners as a lecturer at <a href=\"https://pycamp.pycon.jp\">Python Boot Camp</a> all over Japan.\nIn addition, he published several Python books.</p>\n<p>He plays trumpet, climbs boulder, loves Lego, ferrets and craft beer.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/122/",
      "cancelled": false
    },
    {
      "room": "Ballroom A",
      "rooms": [
        "Ballroom A"
      ],
      "start": "2025-05-16T11:45:00-04:00",
      "end": "2025-05-16T12:15:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 57,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "The PyArrow revolution in Pandas",
      "description": "<p>Pandas has long used NumPy for its back-end storage. But things are changing, and the future of Pandas will likely be tied closely with PyArrow. What are Arrow and PyArrow? How do they affect Pandas users today, and how will they affect us in the future? Is PyArrow always faster than the current Pandas backend? In this talk, I introduce PyArrow, tell you what it does, how we can already use it in our Pandas work, and when it's appropriate for you to use it.</p>",
      "authors": [
        "Reuven M. Lerner"
      ],
      "speakers": [
        {
          "id": 81,
          "name": "Reuven M. Lerner",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/81.jpg.256x256_q85.jpg",
          "bio": "<p>Reuven is a full-time instructor in Python and Pandas, in business since 1995. He teaches at companies around the world, offers video courses, and writes books — most recently, Python Workout and Pandas Workout, both published by Manning. He writes about Python for his \"Better Developers\" newsletter, and poses Pandas puzzles based on current events in \"Bamboo Weekly.\" Reuven lives with his wife and three children in Modi'in, Israel.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/69/",
      "cancelled": false
    },
    {
      "room": "Room 310/311",
      "rooms": [
        "Room 310/311"
      ],
      "start": "2025-05-16T11:45:00-04:00",
      "end": "2025-05-16T12:15:00-04:00",
      "duration": 30,
      "kind": "charla",
      "section": "talks",
      "conf_key": 60,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Automatizando el Rendimiento de Código Python",
      "description": "<p>Optimizar el código para mejorar el rendimiento requiere experiencia y un esfuerzo manual considerable. Debido a esta barrera, la mayoría del software permanece sin optimizar, lo que da lugar a las aplicaciones lentas que comúnmente experimentamos. En esta charla, veremos cómo las herramientas modernas impulsadas por IA pueden ahora optimizar continuamente el código Python de formas que antes estaban limitadas a programadores expertos.</p>\n<p>En esta charla, exploraremos los pasos que los desarrolladores de aplicaciones siguen al optimizar su código y analizaremos cómo cada uno de estos pasos puede ser automatizado. En particular:\n    •   Cómo los Modelos de Lenguaje de Gran Escala pueden generar optimizaciones efectivas para el código.\n    •   Cómo el nuevo código generado se verifica exhaustivamente para garantizar que sea funcionalmente correcto.\n    •   Cómo automatizar las pruebas de rendimiento para asegurarse de que las optimizaciones realmente mejoren el rendimiento.</p>\n<p>A través de demostraciones en vivo de optimización de código con Codeflash, mostraremos las capacidades de este enfoque. Presentaremos varias categorías de optimizaciones posibles analizando código integrado en proyectos populares de código abierto, como Pydantic. Finalmente, veremos cómo podemos comenzar a optimizar automáticamente nuestro código Python existente y futuro con estas herramientas. Esto permite a los desarrolladores centrarse en escribir nuevas funcionalidades, mientras que los optimizadores impulsados por IA determinan la implementación más eficiente en Python.</p>",
      "authors": [
        "Kevin Rodriguez"
      ],
      "speakers": [
        {
          "id": 77,
          "name": "Kevin Rodriguez",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/77.jpeg.256x256_q85.jpg",
          "bio": "<p>passionate software engineer with a strong focus on open-source contributions and performance optimization in Python. \ndedicated to helping Spanish-speaking programming communities grow by sharing knowledge and providing support.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/66/",
      "cancelled": false
    },
    {
      "room": "Hall C",
      "rooms": [
        "Hall C"
      ],
      "start": "2025-05-16T11:45:00-04:00",
      "end": "2025-05-16T12:15:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 56,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Using Rust in Free-Threaded vs Regular Python 3.13",
      "description": "<p>Python 3.13's <a href=\"https://peps.python.org/pep-0703/\">new free-threaded build</a> brings the possibility of true parallel execution into Python code for the first time.</p>\n<p>This brings promise of significant performance opportunity, but not without cost. Parallel execution is notorious for being challenging due to the additional complexity. This implies bugs, and the risk is particularly high for the compiled code powering Python - including the CPython interpreter itself (it's written in C). The main risk comes from <strong>data races</strong>, which can cause unpredictable and potentially dangerous crashes.</p>\n<p>The Rust programming language is designed to prevent data races by construction; if your code runs, it <em>should</em> be data race free (unless you misuse <code>unsafe</code> Rust).</p>\n<p>We'll explore the way that Rust does this, both from the rules of the language, and by the data structures it offers to complement those rules. We'll showcase this with examples of Rust (<a href=\"https://pyo3.rs/v0.23.3/\">PyO3</a>) code designed for \"regular\" Python 3.13 and how it changes to become compatible with the free-threaded build.</p>\n<p>This will lead onto ideas which we can carry across languages to influence how we write Python (and maybe C/C++) to be correct in a free-threaded world, before closing with some tantalizing examples of software architectures made possible by free-threaded Python.</p>\n<p>No prior Rust knowledge necessary.</p>\n<p>What you should hope to take away from this talk:\n- a basic understanding of how the free-threaded build of Python is different to the regular one,\n- an appreciation for the complexity of free-threading for compiled code,\n- how Rust helps you reason about this complexity, and\n- excitement for the future of free-threaded Python!</p>",
      "authors": [
        "David Hewitt"
      ],
      "speakers": [
        {
          "id": 124,
          "name": "David Hewitt",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/124.jpg.256x256_q85.jpg",
          "bio": "<p>-</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/110/",
      "cancelled": false
    },
    {
      "room": "Hall A",
      "rooms": [
        "Hall A"
      ],
      "start": "2025-05-18T12:00:00-04:00",
      "end": "2025-05-18T13:00:00-04:00",
      "duration": 60,
      "kind": "break",
      "section": "talks",
      "conf_key": 155,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Lunch",
      "description": "<p>Lunch</p>"
    },
    {
      "room": "Room 310/311",
      "rooms": [
        "Room 310/311"
      ],
      "start": "2025-05-17T12:00:00-04:00",
      "end": "2025-05-17T12:30:00-04:00",
      "duration": 30,
      "kind": "charla",
      "section": "talks",
      "conf_key": 117,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "NLP para la preservación del lenguaje indígena Quechua",
      "description": "<h3><em>NLP para la preservación del lenguaje indígena Quechua en Bolivia</em></h3>\n<p>El quechua, hablado por más de 2.8 millones de personas en Bolivia, es uno de los idiomas indígenas más importantes del país. Sin embargo, enfrenta serias amenazas debido a la modernización y la globalización. Esta charla explora cómo las técnicas de Procesamiento de Lenguaje Natural (NLP) pueden ser una herramienta crucial para la revitalización y preservación del quechua, asegurando su uso en el ámbito digital y su transmisión a futuras generaciones.</p>\n<h4>Contenido principal:</h4>\n<ul>\n<li><strong>Contexto y relevancia:</strong> En Bolivia, el 21% de la población habla quechua, lo que lo convierte en un idioma vital para la cultura del país. Sin embargo, el uso del quechua está en declive, especialmente entre los jóvenes.</li>\n<li>\n<p><strong>Datos lingüísticos en quechua:</strong> Existen pocos recursos digitales y corpus disponibles en quechua, lo que dificulta la creación de tecnologías lingüísticas. Sin embargo, algunos esfuerzos están comenzando a surgir en la comunidad.</p>\n</li>\n<li>\n<p><strong>Desafíos técnicos:</strong> Los modelos preentrenados para lenguas de bajo recurso como el quechua siguen siendo un reto debido a la falta de datos estructurados y herramientas de procesamiento.</p>\n</li>\n<li><strong>Impacto social y cultural:</strong> La preservación del quechua a través de tecnologías NLP puede tener un impacto significativo en comunidades bolivianas, promoviendo el acceso a la información en su lengua materna y mejorando la visibilidad de su cultura.</li>\n</ul>\n<h4>Objetivo:</h4>\n<p>Inspirar a la comunidad de Python y NLP a participar en proyectos que utilicen la tecnología para revitalizar el quechua en Bolivia, un idioma con una rica herencia cultural que necesita urgentemente soluciones digitales para su preservación y expansión.</p>",
      "authors": [
        "Carla Marcela Florida Román"
      ],
      "speakers": [
        {
          "id": 69,
          "name": "Carla Marcela Florida Román",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/69.JPG.256x256_q85.jpg",
          "bio": "<p><em>Carla</em> es una apasionada de la Inteligencia Artificial con una destacada participación en comunidades locales e internacionales de Machine Learning y Data Science. Su trayectoria incluye su labor como investigadora en el Instituto de Inteligencia Artificial de la Universidad Privada Boliviana y su rol como Head of AI en Dapta. Actualmente, Carla es profesora en Platzi, donde cuenta con cursos de Python e inteligencia artificial. Carla también es cofundadora de Menti Academy, una academia de enseñanza online para niños. Además, Women Techmaker Ambassador y creadora de contenido en redes sociales como TikTok e Instagram a través de su comunidad CarliCode, donde ayuda a las personas a iniciarse en la programación, especialmente en Python y en inteligencia artificial.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/59/",
      "cancelled": false
    },
    {
      "room": "Room 301-305",
      "rooms": [
        "Room 301-305"
      ],
      "start": "2025-05-17T12:00:00-04:00",
      "end": "2025-05-17T12:30:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 116,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Reduce the environmental footprint of your Python programs",
      "description": "<p>As we witness the cutting-edge developments in Artificial Intelligence, the carbon footprint of our code base can no longer be brushed off as insignificant. In every respect, as developers, we have a responsibility to take the lead in implementing sustainable coding practices. This presentation explores Python techniques that can be embedded in one’s code that will help reduce cycles, lower resource dependencies, and decrease energy usage without degrading performance.</p>\n<p>More than just tech tips, this talk is going to focus on the why—looking into the expanding CO2 of the AI and tech space, what it means for our planet, and how it points to the importance of responsible development. The audience will discover that simple but conscious changes in one’s handy work, such writing better algorithms, datamodelling, and using greener tools can somehow make a positive impact to the environment.</p>\n<p>This talk is not only about utilizing new technologies correctly, it is also about changing the perception of our field. Let’s be responsible — let’s develop projects that will not harm the environment. Together, we can progress and adapt our development processes to the current climate change crisis – the one in which development and innovative efforts go hand in hand with taking care of the environment. So let’s code with purpose.</p>",
      "authors": [
        "Apoorv Garg"
      ],
      "speakers": [
        {
          "id": 92,
          "name": "Apoorv Garg",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/92.jpeg.256x256_q85.jpg",
          "bio": "<p>Software Developer at <strong>Wells Fargo</strong> with a passion for open-source and impactful projects. A <strong>Google Summer of Code (GSoC '22, '23, '24)</strong> participant and Mentor, I’ve contributed to organizations like Hugging Face, JdeRobot, and C4GT. Previously, I worked with <strong>Resilient AI Solution, Talkdoc,</strong> and interned as an SDE at <strong>Deloitte</strong>. I’m an alumnus of <strong>Amazon ML Summer School 2022</strong> and a 2023 graduate of NSUT, with a strong focus on building scalable, efficient, and maintainable software solutions.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/80/",
      "cancelled": false
    },
    {
      "room": "Ballroom BC",
      "rooms": [
        "Ballroom BC"
      ],
      "start": "2025-05-17T12:00:00-04:00",
      "end": "2025-05-17T12:45:00-04:00",
      "duration": 45,
      "kind": "talk",
      "section": "talks",
      "conf_key": 115,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "GPU Programming in Pure Python",
      "description": "<p>GPU programming can be scary but doesn’t need to be. With the CUDA Core Libraries and CUDA Python object model, you have a friendly interface to get you started with GPU acceleration.</p>\n<p>In this example-driven talk, we'll begin with a general discussion of the CUDA model and how to manage accelerator devices in Python with cuda.core. Next, we'll teach you how to launch work and manage memory. Then, you'll learn how to use parallel algorithms with cuda.parallel, write your own kernels that leverage cooperative algorithms with cuda.cooperative, and integrate seamlessly with accelerated libraries such as cuDNN and cuBLAS.</p>\n<p>We'll look at a variety of parallel examples, from counting words, to implementing softmax, to a full blown machine learning demo.</p>\n<p>By the time the talk is over, you'll be ready to start accelerating your Python code with GPUs!</p>",
      "authors": [
        "Andy Terrel",
        "Bryce Adelstein Lelbach"
      ],
      "speakers": [
        {
          "id": 125,
          "name": "Andy Terrel",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/125.png.256x256_q85.png",
          "bio": "<p>I am a technical executive / product leader / ML Engineer with experience in several industries and an thought leader in the Python open data science community (PyData) with over 1000 citations of my academic articles. My work specializes in developing new technology from the ground up, scaling to large systems, and building a support team to operationalize products. I am a co-creator of the popular Dask distributed computing framework, the Conda package manager, and the SymPy symbolic computing library.</p>"
        },
        {
          "id": 126,
          "name": "Bryce Adelstein Lelbach",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/126.jpg.256x256_q85.jpg",
          "bio": "<p>Bryce Adelstein Lelbach has spent over a decade developing programming languages, compilers, and software libraries. He is a Principal Architect at NVIDIA, where he leads programming language efforts and drives the technical roadmap for NVIDIA's compute compilers and libraries. Bryce is passionate about C++ and is one of the leaders of the C++ community. He has served as chair of INCITS/PL22, the US standards committee for programming languages and the Standard C++ Library Evolution group. Bryce served as the program chair for the C++Now and CppCon conferences for many years. On the C++ Committee, he has personally worked on concurrency primitives, parallel algorithms, executors, and multidimensional arrays. He is one of the founding developers of the HPX parallel runtime system. Outside of work, Bryce is passionate about airplanes and watches.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/111/",
      "cancelled": false
    },
    {
      "room": "Ballroom A",
      "rooms": [
        "Ballroom A"
      ],
      "start": "2025-05-17T12:00:00-04:00",
      "end": "2025-05-17T12:30:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 114,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "How to build a cross-platform graphical user interface with Python",
      "description": "<p>If you need to build a user interface for your Python code, many guides will tell you that your only options are to use the command line, or wrap your code in a web interface. However, there is another option - building a native GUI interface. In fact for some use cases, a GUI app may be your <em>only</em> option. </p>\n<p>In this talk, you'll learn how to build and run a graphical user interface (GUI) that can run on your desktop, on your phone, or in a browser. You'll learn how you can use the BeeWare suite of tools to bootstrap a new GUI project, develop a GUI interface, and deploy that app to multiple desktop and mobile platforms, without making any code changes. You'll learn how to access device hardware like GPS and cameras; and you'll learn how to distribute your application - including all runtimes and third-party libraries - to others. Lastly, you'll get a brief introduction to how you can access native platform APIs that don't have a Python API.</p>",
      "authors": [
        "Russell Keith-Magee"
      ],
      "speakers": [
        {
          "id": 90,
          "name": "Russell Keith-Magee",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/90.jpg.256x256_q85.jpg",
          "bio": "<p>Dr Russell Keith-Magee is the founder of the BeeWare project, a project developing GUI tools and libraries to support the development of Python software on desktop and mobile platforms. He joined the Django core team in 2006, and was the President of the Django Software Foundation for 5 years. He joined the CPython core team in 2024. He is a frequent speaker at Python and Django conferences around the globe, sharing his experience as a FLOSS developer, community maintainer, and (unsuccessful) startup founder. In his day job, he is a Principal Engineer at Anaconda, working on BeeWare in the OSS team.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/78/",
      "cancelled": false
    },
    {
      "room": "Hall C",
      "rooms": [
        "Hall C"
      ],
      "start": "2025-05-17T12:00:00-04:00",
      "end": "2025-05-17T12:45:00-04:00",
      "duration": 45,
      "kind": "talk",
      "section": "talks",
      "conf_key": 113,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Program Your Own Computer in Python",
      "description": "<p>Using Python to write code for web applications, scientific applications, and data analysis is extremely popular. Those of us who write that sort of code are typically sitting in front of desktop or laptop computers for 6-10 hours a day.  And yet, while we may want those machines to do certain tasks for us, for some reason it rarely occurs to many of us to use Python to solve problems on <em>those</em> computers rather than the ones in the cloud.</p>\n<p>Perhaps it's just because the APIs for controlling them are so different, and it seems difficult to get started.</p>\n<p>In this talk I will explain how to use Python to integrate with your desktop environment; how to schedule tasks, schedule notifications, and script the applications you already use. We'll have a focus on macOS for demonstration purposes, but will also including pointers to similar tools for desktop Linux and Windows.</p>",
      "authors": [
        "Glyph"
      ],
      "speakers": [
        {
          "id": 153,
          "name": "Glyph",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/153.jpg.256x256_q85.jpg",
          "bio": "<p>Although most well-known for being the founder of the Twisted project, Glyph has also worked on massively multiplayer online games, dynamic web applications, enterprise information management software, and created or contributed to dozens of open source projects, mostly related to infrastructure. He is currently an independent open source maintainer, doing weird and fun stuff with Python.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/136/",
      "cancelled": false
    },
    {
      "room": "Ballroom A",
      "rooms": [
        "Ballroom A"
      ],
      "start": "2025-05-14T12:30:00-04:00",
      "end": "2025-05-14T13:30:00-04:00",
      "duration": 60,
      "kind": "break",
      "section": "tutorials",
      "conf_key": 7,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Lunch",
      "description": "<p>Lunch</p>"
    },
    {
      "room": "Ballroom BC",
      "rooms": [
        "Ballroom BC"
      ],
      "start": "2025-05-16T12:30:00-04:00",
      "end": "2025-05-16T13:15:00-04:00",
      "duration": 45,
      "kind": "talk",
      "section": "talks",
      "conf_key": 63,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Marimo: A Notebook that \"Compiles\" Python for Reproducibility and Reusability",
      "description": "<p>This talk explores the following question: What would it take to create a new kind of Python notebook that, unlike a REPL, knew the order in which to run cells? What if the notebook could also update automatically or lazily when a variable was updated? And what if we could add UI elements, like sliders and dropdowns, to all this? Would this change how you worked with notebooks?</p>\n<p>But most of all: how would you build such a thing? In this talk, we propose that you would need a kind of \"compiler\" on top of Python.</p>\n<p>This talk focuses on how to create such a notebook by using marimo — an open-source reactive notebook for Python that's executable as scripts and shareable as apps — as a case study. Marimo's key technology is static analysis: marimo \"compiles\" blocks of Python code, or \"cells\", to a directed acyclic graph. This graph models how data flows across cells, and is used as an intermediate representation consumed by a runtime that eliminates hidden state while also powering interactive computing, scripts, and web apps.</p>\n<p>By using notebooks and marimo's internals as a case study, we'll examine a question that is broadly applicable to developer tools in many domains: What does it take to compile Python code to a flexible intermediate representation that preserves the original program's semantics? We'll discuss design decisions and tradeoffs along the way, such as the pros and cons of static analysis versus runtime tracing.</p>",
      "authors": [
        "Akshay Agrawal"
      ],
      "speakers": [
        {
          "id": 20,
          "name": "Akshay Agrawal",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/20.png.256x256_q85.jpg",
          "bio": "<p>Akshay builds open source software designed to make machine learning and data science actionable and accessible. He works full-time on the open-source marimo notebook.</p>\n<p>He is both a researcher, focusing on machine learning and optimization, and an engineer, having contributed to several open source projects (including TensorFlow and CVXPY). He has a PhD from Stanford University, and BS/MS in computer science from Stanford.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/18/",
      "cancelled": false
    },
    {
      "room": "Hall A",
      "rooms": [
        "Hall A"
      ],
      "start": "2025-05-17T12:30:00-04:00",
      "end": "2025-05-17T13:45:00-04:00",
      "duration": 75,
      "kind": "break",
      "section": "talks",
      "conf_key": 173,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Lunch",
      "description": "<p>Lunch</p>"
    },
    {
      "room": "Hall C",
      "rooms": [
        "Hall C"
      ],
      "start": "2025-05-16T12:30:00-04:00",
      "end": "2025-05-16T13:15:00-04:00",
      "duration": 45,
      "kind": "talk",
      "section": "talks",
      "conf_key": 61,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Unraveling Community Support For Free-Threaded Python",
      "description": "<p>Shipping the <a href=\"https://py-free-threading.github.io\">free-threaded build</a> of Python 3.13 was just the first step towards unlocking scalable multithreaded parallelism in Python. To unlock improved performance for real-world compute tasks, the universe of community-maintained open source packages also needed to be updated. This is the story of the first year of that effort.</p>\n<p>We will share tools, techniques, and guidance gained from porting Cython, NumPy, SciPy, PyO3, and many other packages with C, Cython, C++, Fortran, and Rust native extensions to support free-threaded Python, illustrated by anecdotes from our experiences.</p>\n<p>Attendees will learn about tools and techniques to discover and fix thread safety issues and multithreaded scaling bottlenecks in packages with native extensions or dependencies. If you are unsure about how to support free-threaded Python in a package you maintain, we hope that this talk will give you a plan and the toolbox necessary to accomplish the task.</p>\n<p>This talk is targeted at developers and maintainers of Python packages that include native dependencies as well as people who are interested in contributing to community packages that include native code. We assume some prior knowledge with native Python extensions written in C, C++, Rust, or Cython.</p>",
      "authors": [
        "Lysandros Nikolaou",
        "Nathan Goldbaum"
      ],
      "speakers": [
        {
          "id": 44,
          "name": "Lysandros Nikolaou",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/44.jpg.256x256_q85.jpg",
          "bio": "<p>Lysandros works as a Senior Software Engineer at Quansight Labs, where he spends most of his time on CPython and the PyData ecosystem. He is a CPython core developer, specializing in the parser, the tokenizer and the REPL. He recently worked on supercharging f-strings in Python 3.12, the new REPL for Python 3.13 and introducing fast string ufuncs in NumPy 2.0. Currently, he's mostly dealing with improving support for free-threaded Python in the PyData ecosystem.</p>"
        },
        {
          "id": 45,
          "name": "Nathan Goldbaum",
          "photo": null,
          "bio": "<p>-</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/42/",
      "cancelled": false
    },
    {
      "room": "Ballroom A",
      "rooms": [
        "Ballroom A"
      ],
      "start": "2025-05-15T12:30:00-04:00",
      "end": "2025-05-15T13:30:00-04:00",
      "duration": 60,
      "kind": "break",
      "section": "tutorials",
      "conf_key": 20,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Lunch",
      "description": "<p>Lunch</p>"
    },
    {
      "room": "Room 310/311",
      "rooms": [
        "Room 310/311"
      ],
      "start": "2025-05-16T12:30:00-04:00",
      "end": "2025-05-16T13:00:00-04:00",
      "duration": 30,
      "kind": "charla",
      "section": "talks",
      "conf_key": 65,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Cambiando el guión: No estamos solas - DataSoul Podcast",
      "description": "<p>¡Hola! Somos Valen y Laura creadoras y hosts de DataSoul Podcast, un espacio seguro para compartir experiencias trabajando en la industria tech, así como hablar de temas de los que poco se habla pero que todos enfrentamos en algún momento. Este podcast quiere ser parte de Pycon US con la presentación de un episodio en vivo donde hablaremos de retos, miedos y la importancia de la  comunidad, al momento de hacer un cambio de carrera hacia el mundo de los datos.</p>",
      "authors": [
        "Laura López",
        "Valentina Ariza"
      ],
      "speakers": [
        {
          "id": 23,
          "name": "Laura López",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/23.jpeg.256x256_q85.jpg",
          "bio": "<p>Soy científica de datos, WomenTechMaker Ambassador, y Co-host de DataSoul Podcast. Interesada en el entendimiento y aplicación de machine learning y análisis de datos para obtener resultados y soluciones de valor. Me gusta la fotografía, los libros y los datos.</p>"
        },
        {
          "id": 24,
          "name": "Valentina Ariza",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/24.png.256x256_q85.png",
          "bio": "<p>Soy Senior Data Engineer,  embajadora de google women techmaker, Co-Lider de la comunidad Pyladies Medellin y Co-host del podcast DataSoul. Con +4 años de experiencia trabajando en el mundo de los datos, he desarrollados diversas soluciones usando herramientas cloud, esto incluye datalakes, datawarehouses y lakehouses con gobierno de datos que garantizan la calidad, seguridad y disponibilidad de la información para la toma de decisiones estratégicas.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/21/",
      "cancelled": false
    },
    {
      "room": "Room 301-305",
      "rooms": [
        "Room 301-305"
      ],
      "start": "2025-05-16T12:30:00-04:00",
      "end": "2025-05-16T13:00:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 64,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Make Python Talk, Make Python Listen",
      "description": "<p>Third-party packages for Python allow your programs to perform text-to-speech and speech recognition with only a few lines of code. You don't need to understand advanced machine learning algorithms to take advantage of these sophisticated features: even beginners can use these packages. In this talk, you'll learn the PyTTSx3 and gTTS packages to make your programs talk using your operating system's speech engine. You'll also learn how to use the free, offline Whisper package to convert audio files into text strings. The straightforward configuration for these packages mean you can start making immediate use of them in your Python applications. Finally, we cover the yt-dlp package for downloading video and audio files from the web for transcription purposes, and how all of this is being used by the PyVideo.org website.</p>",
      "authors": [
        "Al Sweigart"
      ],
      "speakers": [
        {
          "id": 129,
          "name": "Al Sweigart",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/129.jpg.256x256_q85.jpg",
          "bio": "<p>Al Sweigart is a software developer, author, artist, and Fellow of the Python Software Foundation. He has written several programming books for beginners, including Automate the Boring Stuff with Python, The Big Book of Small Python Projects, and The Recursive Book of Recursion. He is the creator of PyAutoGUI, pyperclip, and several other open source projects. He lives in Brooklyn, New York.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/114/",
      "cancelled": false
    },
    {
      "room": "Ballroom A",
      "rooms": [
        "Ballroom A"
      ],
      "start": "2025-05-15T12:30:00-04:00",
      "end": "2025-05-15T13:30:00-04:00",
      "duration": 60,
      "kind": "break",
      "section": "sponsor-presentations",
      "conf_key": 36,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Lunch",
      "description": "<p>Lunch</p>"
    },
    {
      "room": "Ballroom A",
      "rooms": [
        "Ballroom A"
      ],
      "start": "2025-05-16T12:30:00-04:00",
      "end": "2025-05-16T13:00:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 62,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Processing Large Geospatial Datasets with Dask & Xarray",
      "description": "<p>Geospatial datasets are growing in size, often exceeding 100TB and reaching into Petabyte scale. Many of these datasets are publicly available, providing a great resource for analysis, but working with them requires increasingly large computational resources and a diverse set of tools.</p>\n<p>We will start by briefly introducing Dask and Xarray, which form the backbone of the geospatial stack in Python. Using the ERA5 dataset as a case study, we will demonstrate how Xarray can be used to explore large-scale climate data effectively from your local laptop.</p>\n<p>Building on this foundation, we will delve into recent advancements in Dask Array. Originally designed as a parallel NumPy API, Dask Array was used to handle much larger datasets over the last few years. We’ll explore the latest developments in Dask and Xarray that continue to expand the scalability and capabilities of these tools to catch up with the scale requirements of modern datasets.</p>\n<p>This discussion will highlight improvements in ease of use, scalability, and performance. Additionally, we’ll present the first-ever set of geospatial benchmarks, collected earlier in 2024 from the community. These benchmarks provide a clear illustration of the scale at which Xarray and Dask are required to operate.</p>\n<p>Finally, we’ll offer a peak behind the scenes of an ongoing project aimed at building the first ever query optimizer for large scale array computations.</p>",
      "authors": [
        "Patrick Hoefler"
      ],
      "speakers": [
        {
          "id": 98,
          "name": "Patrick Hoefler",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/98.jpeg.256x256_q85.jpg",
          "bio": "<p>Patrick Hoefler is a member of the pandas core team and a Dask maintainer. He is currently working at Coiled where he focuses on Dask development and the integration of a logical query planning layer into Dask. He holds a Msc degree in Mathematics and works towards a Msc in Software engineering at the University of Oxford.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/86/",
      "cancelled": false
    },
    {
      "room": "Ballroom BC",
      "rooms": [
        "Ballroom BC"
      ],
      "start": "2025-05-18T13:00:00-04:00",
      "end": "2025-05-18T13:30:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 158,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Reinventing the Wheel:  A Community-Driven Roadmap for Python Packaging",
      "description": "<h2>Abstract</h2>\n<p>The Python ecosystem thrives on innovation, adaptability, versatility and a thriving open-source community. Python’s reach continues to evolve, fueled today by custom silicon, variations within CPU architecture families, AI accelerators, and diverse use cases.  The Wheel format and packaging tools should adapt and evolve to better support the Python community.</p>\n<p>We’ll review the most potent challenges in the Python packaging ecosystem, and present our roadmap for adapting the Wheel format to enable native support for specialized hardware, the use of non-default Python package indexes, and managing diverse compute backends, all while maintaining the accessibility and simplicity Python is known for.  We'll issue a call to action from the open source community, supported by important libraries such as PyTorch, JAX, Scikit-learn, etc.  This is a unified roadmap for the future of Python packaging, and present published and draft PEPs.</p>\n<h1>Description</h1>\n<p>Managing software stacks in complex compute environments is difficult.  Often the standard wheel tags aren’t sufficient to describe your exact compute environment.  These are common problems for many users, are often difficult to remedy, and even more difficult to make reproducible, easy to use, and composable.</p>\n<p>We propose to “Re-Invent the Wheel” and have founded the “Wheel Next” interest group as an open source collaboration among different users, companies, packages, and maintainers that are working together on solutions to these difficult problems.  We are actively publishing PEPs that extend the Wheel format, metadata, packaging tooling, and PyPI standards, and contribute to projects that help with various aspects of the problem space, including installers and indexes.</p>\n<p>In addition, we’ll give a call to action for everyone interested in joining the initiative and helping us evolve and build the packaging ecosystem the Python world needs today and in the future.</p>",
      "authors": [
        "Jonathan Dekhtiar",
        "Barry Warsaw"
      ],
      "speakers": [
        {
          "id": 114,
          "name": "Jonathan Dekhtiar",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/114.jpeg.256x256_q85.jpg",
          "bio": "<p>Jonathan Dekhtiar has been contributing to many Deep Learning libraries, compilers and frameworks since 2019. At NVIDIA, he played a key role in designing Python software and libraries release mechanisms and solving packaging challenges for GPU-accelerated Python code. As a driving and founding force behind the Wheel-Next initiative, Jonathan has dedicated significant energy to advance this open-source effort with the community and is actively working on proof of concepts, demos and on the writing of PEPs. </p>\n<p>Previous Talk and Conferences:\n- CVPR 2020 - Workshop Chair - https://workshop-edlcv.github.io/\n- ICML 2019 - Workshop Chair - https://icml.cc/virtual/2019/workshop/3520\n- ICML 2019 - Automatic Mixed Precision Training &amp; Inference: https://slideslive.com/38917378/mixed-precision-training-inference</p>"
        },
        {
          "id": 115,
          "name": "Barry Warsaw",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/115.jpg.256x256_q85.jpg",
          "bio": "<p>Barry Warsaw has been a core Python developer since 1994, and is currently employed as a Principle System Software Engineer at NVIDIA where he works on Wheel-Next and other Python-focused initiatives, both inside the company and in the Open Source community.  He has served as Release Manager and Python Steering Council member in 2019, 2020, 2021, 2024, and 2025.  He’s both organized and participated in the annual Python Language Summit at PyCon US.  He was the GNU Mailman and Jython/JPython project leader at various times, and in the early days of Python served as postmaster, webmaster, and more.</p>\n<p>Barry has spoken at Pycon many times in the past:</p>\n<ul>\n<li>2012 - <a href=\"https://pyvideo.org/pycon-us-2012/mailman-3.html\">GNU Mailman 3</a>  </li>\n<li>2016 - <a href=\"https://pyvideo.org/kiwi-pycon-2016/tai-chi-principles-for-mindful-programmers.html\">Kiwi PyCon Keynote - Tai Chi Principles for Mindful Programmers</a>  </li>\n<li>2017 - <a href=\"https://us.pycon.org/2017/schedule/presentation/147/\">aiosmtpd - A better asyncio based SMTP server</a>  </li>\n<li>2018 - <a href=\"https://www.youtube.com/watch?v=ZsGFU2qh73Eyour%20resources%20faster,%20with%20importlib.resources\">Get your resources faster, with importlib.resources</a>  </li>\n<li>Various Steering Council Keynote sessions</li>\n</ul>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/100/",
      "cancelled": false
    },
    {
      "room": "Room 301-305",
      "rooms": [
        "Room 301-305"
      ],
      "start": "2025-05-18T13:00:00-04:00",
      "end": "2025-05-18T13:30:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 159,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Going faster in all directions at once: How two teams are working together to make Python better for all",
      "description": "<p>Two separate, but related, projects to make CPython faster are currently happening at the same time.  The first, funded by Microsoft, aims to improve the single-threaded performance of CPython (PEP 659, PEP 744).  The second, funded by Meta, aims to remove the global interpreter lock so multiple threads can make better use of all processor cores (PEP 703).  There are technical challenges to achieving both of these goals simultaneously.  We will describe how we collaborate to nonetheless make both projects a success.  This includes (a) regular and open lines of communication, (b) sharing the same code for benchmarking, (c) leaving space for each of these projects to develop on their own, and (d) allocating time to directly tackle the intersection of the two problems.</p>\n<p>This talk is intended for a general audience. It will cover technical topics related to language runtimes at a high level, and also include people-management topics related to open source communities.</p>",
      "authors": [
        "Michael Droettboom",
        "Dino Viehland"
      ],
      "speakers": [
        {
          "id": 86,
          "name": "Michael Droettboom",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/86.jpg.256x256_q85.jpg",
          "bio": "<p>Michael Droettboom is a Principal Software Engineering Manager at Microsoft, leading the CPython Performance Engineering team.  He is also a former lead maintainer of matplotlib, and creator of airspeed velocity (asv) and Pyodide (CPython on WebAssembly).</p>"
        },
        {
          "id": 87,
          "name": "Dino Viehland",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/87.jpg.256x256_q85.jpg",
          "bio": "<p>I'm a software engineer at Meta working on Cinder, our performance focused fork of CPython that runs Instagram and AI workloads. Previously I've worked on Python Tools for Visual Studio and IronPython and have been a core CPython developer since 2010.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/75/",
      "cancelled": false
    },
    {
      "room": "Ballroom A",
      "rooms": [
        "Ballroom A"
      ],
      "start": "2025-05-18T13:00:00-04:00",
      "end": "2025-05-18T13:30:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 157,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Processing large JSON files without running out of memory",
      "description": "<p>If you need to process a large JSON file in Python, it’s very easy to run out of memory while loading the data, leading to a super-slow run time or out-of-memory crashes. If you're running in the cloud, you can get a machine with more memory, but that means higher costs. How can you process these large files without running out of memory?</p>\n<p>In this talk you'll learn:</p>\n<ul>\n<li>How to measure memory usage.</li>\n<li>Some of the reasons why loading JSON uses so much memory.</li>\n</ul>\n<p>Then, you'll learn some of the solutions to this problem:</p>\n<ul>\n<li>Using a more efficient in-memory representation.</li>\n<li>Only loading the subset of the data you need.</li>\n<li>Streaming parsing, which can parse arbitrarily-large files with a fixed amount of memory.</li>\n<li>Using a different file format, like JSON Lines.</li>\n</ul>",
      "authors": [
        "Itamar Turner-Trauring"
      ],
      "speakers": [
        {
          "id": 142,
          "name": "Itamar Turner-Trauring",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/142.jpg.256x256_q85.jpg",
          "bio": "<p>-</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/125/",
      "cancelled": false
    },
    {
      "room": "Hall C",
      "rooms": [
        "Hall C"
      ],
      "start": "2025-05-18T13:00:00-04:00",
      "end": "2025-05-18T13:30:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 156,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Bridging IoT and Machine Learning with Python for Sustainable Agriculture",
      "description": "<p>Food Insecurity is a major challenge that is ravaging the entire world especially Africa where Agriculture faces critical challenges in productivity, sustainability, and environmental deprivation. This is due to so many factors ranging from climate change to socio-economic factors. To combat this menace, there is need for a robust and scalable system like IoT for weather monitoring and informed decision making for both the policy makers and the farmers to be able to mitigate these challenges. Python, with its rich ecosystem, serves as a bridge between the IoT devices and machine learning, assisting in resolving these challenges and improving decision making in agriculture.\nThis talk explores the use of Python in delivering sustainable agriculture practices. We will look at how data is collected using Python from such IoT devices as soil, weather, and crop sensors. With the help of the Pandas and NumPy and SciPy libraries, we will also show how the collected information is cleaned up and analyzed for further decision making.\nThe session also emphasizes connecting machine learning solutions via TensorFlow, PyTorch, and scikit-learn toward enhancing agriculture. Such examples include estimating when and how much irrigation to apply, potential pest control measures needed, and when and how much pest control measures will be accomplished.\nAttendees will learn the mechanics of building complete pipelines beginning from IoT data collection to final deployment of machine learning models in cloud or edge devices. Other concerns which we will tackle include the quality of data, compatibility of devices, policies on expansion, and the solutions to these problems.\nThis talk is ideal for researchers, developers, and practitioners interested in leveraging Python to transform agriculture. By the end, attendees will understand how Python can drive innovation, sustainability, and resilience in this critical sector.</p>",
      "authors": [
        "Iyinoluwa Moyosola Oyelade"
      ],
      "speakers": [
        {
          "id": 53,
          "name": "Iyinoluwa Moyosola Oyelade",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/53.jpg.256x256_q85.jpg",
          "bio": "<p>Iyinoluwa Oyelade is an academic and researcher specializing in Machine Learning, Data Science, and IoT applications, with a strong focus on sustainable solutions and innovative technologies. With extensive experience in developing AI-driven systems, Iyinoluwa leverages expertise in Python programming to create scalable, impactful solutions that address real-world challenges.\nA passionate advocate for technology-driven transformation, Iyinoluwa has worked on IoT-based farmland security and AI-powered animal intrusion detection systems, showcasing proficiency in integrating Python with cutting-edge tools such as TensorFlow, PyTorch, and scikit-learn. As a lecturer, she mentors the next generation of data scientists, emphasizing hands-on learning and fostering open collaboration.\nHaving participated in pivotal discussions like the AfricaConnect Meeting on IoT-Based Acquisition of Research Data for Scientific Computing and the workshop on \"Investing in Africa’s Climate Future,\" Iyinoluwa is committed to bridging data accessibility and sustainable development, particularly in underserved regions.\nAdept at deploying Python for data analysis, visualization, and machine learning, Iyinoluwa blends technical expertise with a deep understanding of global challenges. Enthusiastic about using Python as a tool for innovation, she continually seeks to empower communities and inspire collaborative solutions to pressing issues</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/47/",
      "cancelled": false
    },
    {
      "room": "Hall A",
      "rooms": [
        "Hall A"
      ],
      "start": "2025-05-16T13:00:00-04:00",
      "end": "2025-05-16T14:00:00-04:00",
      "duration": 60,
      "kind": "break",
      "section": "talks",
      "conf_key": 172,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Lunch",
      "description": "<p>Lunch</p>"
    },
    {
      "room": "Room 317",
      "rooms": [
        "Room 317"
      ],
      "start": "2025-05-15T13:30:00-04:00",
      "end": "2025-05-15T17:00:00-04:00",
      "duration": 210,
      "kind": "tutorial",
      "section": "tutorials",
      "conf_key": 22,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "(Pre-)Commit to Better Code",
      "description": "<p>Maintaining code quality can be challenging, no matter the size of your project or number of contributors. Different team members may have different opinions on code styling and preferences for code structure, while solo contributors might find themselves spending a considerable amount of time making sure the code conforms to accepted conventions. However, manually inspecting and fixing issues in files is both tedious and error-prone. As such, computers are much more suited to this task than humans. Pre-commit hooks are a great way to have a computer handle this for you.</p>\n<p>Pre-commit hooks are code checks that run whenever you attempt to commit your changes with Git. They can detect and, in some cases, automatically correct code-quality issues <em>before</em> they make it to your codebase. In this tutorial, you will learn how to install and configure pre-commit hooks for your repository to ensure that only code that passes your checks makes it into your code base. We will also explore how to build custom pre-commit hooks for novel use cases.</p>",
      "authors": [
        "Stefanie Molin"
      ],
      "speakers": [
        {
          "id": 71,
          "name": "Stefanie Molin",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/71.jpeg.256x256_q85.jpg",
          "bio": "<p><a href=\"https://stefaniemolin.com\">Stefanie Molin</a> is a software engineer at Bloomberg in New York City, where she tackles tough problems in information security, particularly those revolving around data wrangling/visualization, building tools for gathering data, and knowledge sharing. She is also a core developer of <a href=\"https://github.com/numpy/numpydoc\">numpydoc</a> and the author of “<a href=\"https://www.amazon.com/Hands-Data-Analysis-Pandas-visualization/dp/1800563450\">Hands-On Data Analysis with Pandas: A Python data science handbook for data collection, wrangling, analysis, and visualization</a>,” which is currently in its second edition and has been translated into Korean and Chinese. She holds a bachelor’s of science degree in operations research from Columbia University's Fu Foundation School of Engineering and Applied Science, as well as a master’s degree in computer science, with a specialization in machine learning, from Georgia Tech. In her free time, she enjoys traveling the world, inventing new recipes, and learning new languages spoken among both people and computers.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/61/",
      "cancelled": false
    },
    {
      "room": "Room 318",
      "rooms": [
        "Room 318"
      ],
      "start": "2025-05-14T13:30:00-04:00",
      "end": "2025-05-14T17:00:00-04:00",
      "duration": 210,
      "kind": "tutorial",
      "section": "tutorials",
      "conf_key": 10,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Building software on top of Large Language Models",
      "description": "<p>Large Language Models such as GPT-4o, Claude and Google Gemini provide APIs that can be used to develop features that were almost impossibly difficult to build in the past, spanning areas that include human language understanding, image recognition and structured data extraction.</p>\n<p>Building software that uses these APIs reliably and responsibly is a topic with a great deal of depth and a <em>lot</em> of hidden traps.</p>\n<p>In this workshop we'll explore a range of proven techniques for building useful software on top of this wildly powerful but unreliable substrate.</p>\n<p>Topics we will cover include:</p>\n<ul>\n<li>A review of the best currently available models</li>\n<li>Using multi-modal LLMs to analyze images, audio and video</li>\n<li>Use-cases that LLMs can be effectively applied to</li>\n<li>How to access the most capable models via their various APIs</li>\n<li>Prompt engineering</li>\n<li>Retrieval Augmented Generation (RAG)</li>\n<li>LLM tool usage</li>\n<li>Automated evaluations for LLM applications</li>\n<li>The latest options for running local models.</li>\n</ul>\n<p>Participants will obtain hands-on experience of building applications on LLMs. Necessary API keys will be provided.</p>",
      "authors": [
        "Simon Willison"
      ],
      "speakers": [
        {
          "id": 26,
          "name": "Simon Willison",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/26.jpg.256x256_q85.jpg",
          "bio": "<p>Simon Willison is the creator of <a href=\"https://datasette.io/\">Datasette</a>, an open source tool for exploring and publishing data, and <a href=\"https://llm.datasette.io/\">LLM</a>, a command-line tool and Python library for interacting with Large Language Models. He currently works full-time developing open source tools for data journalism, built around Datasette and SQLite.</p>\n<p>Simon has spent the last three years deeply immersed in the world of Large Language Models, trying to solve the fascinating problems of how to responsibly use the technology in the two fields he knows best: journalism and software engineering.</p>\n<p>Prior to becoming an independent open source developer, Simon was an engineering director at Eventbrite. Simon joined Eventbrite through their acquisition of Lanyrd, a Y Combinator funded company he co-founded in 2010.</p>\n<p>He is a board member of the Python Software Foundation and a co-creator of the Django Web Framework, and has been blogging about web development and programming since 2002 at https://simonwillison.net/</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/25/",
      "cancelled": false
    },
    {
      "room": "Room 319",
      "rooms": [
        "Room 319"
      ],
      "start": "2025-05-14T13:30:00-04:00",
      "end": "2025-05-14T17:00:00-04:00",
      "duration": 210,
      "kind": "tutorial",
      "section": "tutorials",
      "conf_key": 11,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Codyssey: A playful control system workshop",
      "description": "<p>Control systems are pervasive in our world and play a crucial role in many aspects of our lives, from keeping satellites in the right altitude and heading to monitoring patients and making medication adjustments to keep them healthy. Sometimes, tricky problems can be simplified by applying a control system lens; but the programming model for a digital control system is not immediately obvious.</p>\n<p><strong>Codyssey</strong> is a 3-hour workshop where you’ll learn about the control system programming model and implement simple systems in Python to autonomously play various games. You’ll observe the behavior of your system in a visual environment, and compete with other participants to solve as many games as you can. Along the way, you’ll have to think creatively and practice translating your intuition into code.</p>\n<p>During the workshop I’ll mentor individual participants / pairs; in-between those mentoring sessions I’ll live-code solutions for chosen challenges while demonstrating how to apply the control system programming model.</p>\n<p><strong>Target audience</strong>: only basic Python knowledge is required - variables, operators, conditions, loops, functions and lists. The workshop can be challenging for experienced programmers as well as fun and instructive for juniors.</p>\n<p>Each challenge will have you implementing a function that runs dozens of times a second, deciding which action to take. <em>The challenges you’ll face include</em>:\n* Navigating a ship through a winding strait\n* Helping Sisyphus finally get that rock to the top, saving him from his eternal punishment\n* Saving Icarus from his hubris-induced watery fate\n* And more</p>\n<p>Come hone your Python skills, adapt to a new way of thinking, and tackle some epic challenges!</p>",
      "authors": [
        "Daniel Anderson"
      ],
      "speakers": [
        {
          "id": 40,
          "name": "Daniel Anderson",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/40.png.256x256_q85.png",
          "bio": "<p>Hi! I'm Daniel, a machine learning research engineer from Israel.</p>\n<p>I started my career as a programmer, and had the opportunity to take on a range of roles: FS developer, team lead, and course instructor.<br />\nI then got into the world of data science / ML, in a nutrition startup that was later acquired by Medtronic.</p>\n<p>After that I ventured out on my own as a freelance machine learning practitioner; now I work with several startups on ML / vision problems. I also work with an Israeli non-profit, helping to create and improve tech-ed programs for youth.</p>\n<p>Bachelor's degree in computer science from the Open University, Master's degree in machine learning &amp; data science from Reichman University.</p>\n<p>Partial list of things I'm excited about:\n* Algorithms and optimizations\n* Translating experts’ domain knowledge and intuition into concrete methods and metrics\n* Designing ad-hoc models that make the most of little data (mostly because that involves designing custom metrics and coming up with creative ways of optimizing them)\n* Finding patterns in behavior\n* Creating interactive visualizations to explore complex data and interactions</p>\n<p>Also, I have a <a href=\"(https://andersource.dev)\">blog</a>!</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/38/",
      "cancelled": false
    },
    {
      "room": "Room 319",
      "rooms": [
        "Room 319"
      ],
      "start": "2025-05-15T13:30:00-04:00",
      "end": "2025-05-15T17:00:00-04:00",
      "duration": 210,
      "kind": "tutorial",
      "section": "tutorials",
      "conf_key": 24,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Handcrafting Your Own Language Processor: The Art of Writing Recursive Descent Parsers",
      "description": "<p>In this tutorial, you will learn the fundamental principles of creating a language processor by hand, focusing specifically on <em>recursive descent parsers</em>. A recursive descent parser is a program used for analyzing the structure of some input language through a series of functions that represent its grammatical rules.</p>\n<p>Knowing how to write a parser from scratch is incredibly useful for anyone interested in understanding how programming languages work under the hood. It also provides valuable insights into compiler design, interpreters, and any form of automatic text analysis. By mastering this skill, you can create your own mini-languages, customize existing ones, or simply satisfy your curiosity about the inner workings of language processors.</p>\n<p>Throughout this tutorial, you will:</p>\n<ul>\n<li>Gain a clear understanding of what a recursive descent parser is and how it operates.</li>\n<li>Learn the step-by-step process of building in Python your own language processor from the ground up.</li>\n<li>Improve your problem-solving skills by designing and implementing parsing algorithms.</li>\n<li>Explore practical examples and hands-on exercises to solidify your understanding.</li>\n</ul>\n<p>By the end of the tutorial, you will have the knowledge and confidence to craft your own language processor and appreciate the elegance and power of recursive descent parsing.</p>",
      "authors": [
        "Ariel Ortiz"
      ],
      "speakers": [
        {
          "id": 76,
          "name": "Ariel Ortiz",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/76.jpg.256x256_q85.jpg",
          "bio": "<p>Ariel Ortiz is a programming languages enthusiast. Since 1994, he has been a full-time faculty member at the Tecnológico de Monterrey in Mexico, where he primarily teaches undergraduate computer science courses. His first encounter with Python was in 2001, and since then, he has integrated it into several of his classes, including Advanced Algorithms and Compiler Design. He is an active member of ACM’s Special Interest Group on Computer Science Education (SIGCSE) and has been a speaker at PyCon US, PyCon Latam, Python Brasil, and EuroPython conferences. Additionally, he is the main author of the Spanish-language websites <a href=\"https://edupython.blogspot.com/\">EduPython</a> and <a href=\"https://arielortiz.info/rip3/\">RIP3</a>.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/65/",
      "cancelled": false
    },
    {
      "room": "Room 318",
      "rooms": [
        "Room 318"
      ],
      "start": "2025-05-15T13:30:00-04:00",
      "end": "2025-05-15T17:00:00-04:00",
      "duration": 210,
      "kind": "tutorial",
      "section": "tutorials",
      "conf_key": 23,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Analyzing Survey Data with Pandas and StatsModels",
      "description": "<p>Whether you are working with customer data or tracking election polls, Pandas and StatsModels provide powerful tools for getting insights from survey data. In this tutorial, we'll start with the basics and work up to age-period-cohort analysis and logistic regression. As examples, we'll use data from the General Social Survey to see how political beliefs have changed over the last 50 years in the United States. We'll follow the essential steps of a data science project, from loading and validating data, exploring and visualizing, modeling and predicting, and communicating results.</p>",
      "authors": [
        "Allen  Downey"
      ],
      "speakers": [
        {
          "id": 61,
          "name": "Allen  Downey",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/61.jpg.256x256_q85.jpg",
          "bio": "<p>Allen Downey is a professor emeritus at Olin College and Principal Data Scientist at PyMC Labs. He is the author of several books -- including <em>Think Python</em>, <em>Think Stats</em>, and <em>Probably Overthinking It</em> -- and a blog about programming and data science. He is a consultant and instructor specializing in Bayesian statistics. He received a Ph.D. in computer science from the University of California, Berkeley, and Bachelor's and Masters degrees from MIT.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/53/",
      "cancelled": false
    },
    {
      "room": "Room 316",
      "rooms": [
        "Room 316"
      ],
      "start": "2025-05-15T13:30:00-04:00",
      "end": "2025-05-15T14:30:00-04:00",
      "duration": 60,
      "kind": "sponsor-workshop",
      "section": "sponsor-presentations",
      "conf_key": 40,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "DataComPy - Dataframe Comparisons made Explicit (Sponsor: Capital One)",
      "description": "<p>DataComPy is a widely used validation tool with over 1.1 million monthly installations, written to quickly and comprehensively compare a pair of dataframes. Designed to help make differences between schemas and data clear and explicit, DataComPy generates a comprehensive report at the completion of all comparisons, providing useful metrics such as match percentages, maximal differences, and sample mismatches between comparable columns. In addition, it supports various forms of input data types for both native (Pandas, Polars, Spark, Snowpark) and indirect (Dask, Ray) comparisons. It also supports comparison of certain types of database tables, including Snowflake and DuckDB. Over the course of the presentation, we'll be delving further into how DataComPy works, what features it provides, and what types of practical use cases it is designed to help address.</p>",
      "authors": [
        "Akshay Gupta",
        "Raymond Haffar"
      ],
      "speakers": [
        {
          "id": 83,
          "name": "Akshay Gupta",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/83.jpg.256x256_q85.jpg",
          "bio": "<p>-</p>"
        },
        {
          "id": 84,
          "name": "Raymond Haffar",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/84.jpg.256x256_q85.jpg",
          "bio": "<p>UWaterloo Comp Eng undergrad, data science @ Capital One. Interested in building practical and resilient solutions for data tooling!</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/73/",
      "cancelled": false
    },
    {
      "room": "Room 315",
      "rooms": [
        "Room 315"
      ],
      "start": "2025-05-15T13:30:00-04:00",
      "end": "2025-05-15T14:30:00-04:00",
      "duration": 60,
      "kind": "sponsor-workshop",
      "section": "sponsor-presentations",
      "conf_key": 39,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "High-Performance Python: Faster Type Checking and Free Threaded Execution (Sponsor: Meta)",
      "description": "<p><em>Meta's Commitment to the Python Community: Empowering Innovation and Collaboration</em></p>\n<p>At Meta, we're dedicated to advancing the Python ecosystem through open-source contributions and community engagement. Our mission is to improve the tooling and runtime, making the language more efficient, scalable, and accessible for developers worldwide.</p>\n<p><em>Introducing Pyrefly: A Scalable Type Checker for a Unified IDE Experience</em></p>\n<p>We're excited to introduce Pyrefly, a new type checker designed with scalability in mind. Built from the ground up using Rust, Pyrefly provides a faster and more efficient type checking experience, enabling developers to write better code with confidence. With Pyrefly, we aim to deliver a unified IDE experience power type hints and code navigation on a new type checking engine.</p>\n<p><em>Unlocking Better Performance with Free-Threaded Python</em></p>\n<p>In collaboration with the Python community, we've been working on making free-threaded Python (No-GIL) available in Python 3.13. This significant milestone allows developers to take full advantage of modern multi-core processors directly from Python. More recently, our efforts have focused on improving the single-threaded performance of the free threading build, ensuring that Python remains a top choice for developers seeking high-performance capabilities.</p>",
      "authors": [
        "Sam Gross",
        "Neil Mitchell"
      ],
      "speakers": [
        {
          "id": 133,
          "name": "Sam Gross",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/133.jpeg.256x256_q85.jpg",
          "bio": "<p>-</p>"
        },
        {
          "id": 134,
          "name": "Neil Mitchell",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/134.jpg.256x256_q85.jpg",
          "bio": "<p>Programmer at Meta, working on improving the Python developer experience.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/118/",
      "cancelled": false
    },
    {
      "room": "Room 310/311",
      "rooms": [
        "Room 310/311"
      ],
      "start": "2025-05-14T13:30:00-04:00",
      "end": "2025-05-14T17:00:00-04:00",
      "duration": 210,
      "kind": "tutorial",
      "section": "tutorials",
      "conf_key": 8,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Decorators Demystified",
      "description": "<p>You know that the <code>@</code> symbol applies a decorator to a function, but what does that really <em>mean</em>?</p>\n<p>Let's learn about decorators by writing our own.</p>\n<p>During this tutorial we'll learn:</p>\n<ul>\n<li>The super powers hiding in Python's functions (which power decorators)</li>\n<li>The oddly simple purpose of the decorator syntax</li>\n<li>Common applications of decorators in Python</li>\n<li>When and how to use (and when to avoid) decorators</li>\n</ul>",
      "authors": [
        "Trey Hunner"
      ],
      "speakers": [
        {
          "id": 140,
          "name": "Trey Hunner",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/140.jpg.256x256_q85.jpg",
          "bio": "<p>Trey Hunner helps individuals and teams level-up their Python skills through <a href=\"http://pythonmorsels.com\">Python Morsels</a> courses/exercises and his <a href=\"https://www.pythonmorsels.com/newsletter/\">weekly Python tips newsletter</a>.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/123/",
      "cancelled": false
    },
    {
      "room": "Room 320",
      "rooms": [
        "Room 320"
      ],
      "start": "2025-05-14T13:30:00-04:00",
      "end": "2025-05-14T17:00:00-04:00",
      "duration": 210,
      "kind": "tutorial",
      "section": "tutorials",
      "conf_key": 12,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Practical PyScript",
      "description": "<p><a href=\"https://pyscript.net/\">PyScript</a> is a fast growing and vibrant open source platform for Python in the browser. Thanks to PyScript, <a href=\"https://python.org/\">CPython</a> and <a href=\"https://micropython.org/\">MicroPython</a> run anywhere a browser runs, which is everywhere!</p>\n<p>This tutorial, aimed at all levels of experience and delivered by PyScript core developers, will take you through initial steps needed to get PyScript working (hint: it's a single line added to an HTML <code>&lt;head&gt;</code> element). Afterwards we'll explore the many APIs, modules, libraries, frameworks and tooling that have coalesced around PyScript since its announcement at PyCon three years ago. This will involve a guided tour of the potpourri of PyScript: tooling, idiomatic PyScript, core browser capabilities, writing games with PyGame, data science, artificial intelligence, application frameworks and UI toolkits, and Internet of Things / robotics. We'll finish with an extended opportunity for folks to get their hands dirty with PyScript based explorations and conclude with a friendly and supportive \"show and tell\" session where folks can demo their work and share their experiences.</p>\n<p>By the end of the tutorial you'll be a confident user of PyScript, understand its expanding ecosystem and know where the community signposts and gatherings can be found. But most of all, it's going to be a lot of stimulating supportive fun.</p>\n<p>This tutorial complements and would be excellent prep for Łukasz Langa's advanced, and frankly mind-blowing, PyScript / WebGL tutorial later in the conference.</p>",
      "authors": [
        "Nicholas H.Tollervey",
        "Chris  Laffra"
      ],
      "speakers": [
        {
          "id": 9,
          "name": "Nicholas H.Tollervey",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/9.jpg.256x256_q85.jpg",
          "bio": "<p>Music, philosophy, teaching, writing &amp; computing. Just like this bio: concise, honest and full of useful information. Home is: <a href=\"https://ntoll.org\">ntoll.org</a></p>"
        },
        {
          "id": 10,
          "name": "Chris  Laffra",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/10.jpg.256x256_q85.png",
          "bio": "<p>Chris Laffra is a seasoned professional with extensive experience in leadership, communication, and technology. He is a contributor to PyScript and created the Reactive LTK framework. Having worked at leading tech companies like Google and Uber and major financial institutions such as Bank of America and JP Morgan, Chris has built a career focused on fostering effective communication and leadership within engineering teams.</p>\n<p>Chris is also an accomplished author with books on communication that cater specifically to engineers, aiming to make them more effective, productive, impactful, and happy in their roles. Additionally, Chris has taught numerous day-long masterclasses that delve into these topics, empowering engineers to excel individually and as part of a team.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/8/",
      "cancelled": false
    },
    {
      "room": "Room 320",
      "rooms": [
        "Room 320"
      ],
      "start": "2025-05-15T13:30:00-04:00",
      "end": "2025-05-15T17:00:00-04:00",
      "duration": 210,
      "kind": "tutorial",
      "section": "tutorials",
      "conf_key": 25,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Build a Synthesizer with Python",
      "description": "<p>This tutorial aims to break down the abstractions that make up a synthesizer by building one using Python, its scientific computing libraries, &amp; Librosa. We will discuss how to build the basic components that make up a modern digital synth from scratch! In the process, learn some DSP and audio programming concepts! By the end, you’ll be able to make your own tunes with Python! We will start with theory, then work through Jupyter notebooks both individually and as a group.</p>\n<p>This tutorial will be a lot of fun if you’re a musically inclined Python programmer. As someone interested in music, you will discover the components that make up a synthesizer by literally building &amp; making music with it and as someone interested in Python, you’ll learn a lot about audio programming and signal processing techniques.</p>",
      "authors": [
        "Sangarshanan"
      ],
      "speakers": [
        {
          "id": 21,
          "name": "Sangarshanan",
          "photo": null,
          "bio": "<p>My name is Sangarshanan and I am a Software Engineer from planet Earth. I love making stuff that helps and amuses me in equal measure and standing upside down while holding a banana. When I'm bored you can find me making absurdist memes, yet another spotify playlist or staring straight into the void</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/19/",
      "cancelled": false
    },
    {
      "room": "Room 317",
      "rooms": [
        "Room 317"
      ],
      "start": "2025-05-14T13:30:00-04:00",
      "end": "2025-05-14T17:00:00-04:00",
      "duration": 210,
      "kind": "tutorial",
      "section": "tutorials",
      "conf_key": 9,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Snakes in a Grid: Working with spreadsheets in Python + Python in Excel",
      "description": "<p>Spreadsheets are one of the most common ways to share data, and thankfully Python has lots of tools to help! In this tutorial, we will cover some helpful packages like <a href=\"https://pypi.org/project/openpyxl/\">openpyxl</a> and <a href=\"https://pypi.org/project/pandas/\">pandas</a> that make working with spreadsheets in Python a breeze. We will also approach the task from the other direction and explore how you can use Python directly in a spreadsheet in Excel to analyze and visualize your data. The session will include practical exercises where attendees will learn how to load, manipulate, and export spreadsheet data using Python. </p>\n<p>By the end of this tutorial, participants will be equipped with the skills to efficiently handle spreadsheet tasks in Python as well as leverage Excel to run and share Python code directly in a spreadsheet.</p>",
      "authors": [
        "Sarah Kaiser"
      ],
      "speakers": [
        {
          "id": 39,
          "name": "Sarah Kaiser",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/39.jpg.256x256_q85.jpg",
          "bio": "<p>Sarah has spent most of her career developing technology in the lab, from virtual reality hardware to satellites. She got her PhD in Physics by starting plasma fires with lasers, Python, and Jupyter Notebooks. She has also written tech books for folks of all ages, including ABCs of Engineering and Learn Quantum Computing with Python and Q#. As a Cloud Developer Advocate for Python at Microsoft and a Python Software Foundation Fellow, she finds all kinds of new ways to build and break OSS tools for data science and machine learning. When not at her split ergo keyboard, she loves boating in the Seattle area, laser cutting everything, and playing with her German Shepard, Chewie.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/37/",
      "cancelled": false
    },
    {
      "room": "Room 321",
      "rooms": [
        "Room 321"
      ],
      "start": "2025-05-14T13:30:00-04:00",
      "end": "2025-05-14T17:00:00-04:00",
      "duration": 210,
      "kind": "tutorial",
      "section": "tutorials",
      "conf_key": 13,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "NanoDash: Writing a Web-based Data Visualization Framework from Scratch",
      "description": "<p>This tutorial will demonstrate how interactive web dashboard frameworks like Plotly Dash work, by building a simplified version of Dash itself from scratch using Python, the Flask framework, and just a little bit of vanilla JavaScript. Along the way, we will introduce some key elements of event-driven programming, discuss client-server communication, and demonstrate some ways to make debugging a little less painful.</p>",
      "authors": [
        "Martha Cryan",
        "Emily Kellison-Linn"
      ],
      "speakers": [
        {
          "id": 101,
          "name": "Martha Cryan",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/101.jpg.256x256_q85.jpg",
          "bio": "<p>Martha Cryan is a software engineer at Plotly, where she works on open source libraries (including Dash). She is a distinguished contributor to the Jupyter project, dog-mom to Lou, and lives in Austin, TX.</p>"
        },
        {
          "id": 102,
          "name": "Emily Kellison-Linn",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/102.jpeg.256x256_q85.jpg",
          "bio": "<p>Emily is a software engineer at Plotly, where she works on open-source data visualization libraries, including Plotly.js, Plotly.py, and Dash. She has been programming in Python for many years, and her interests include design, data visualization, linguistics, and music. She lives in Montréal, Québec.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/89/",
      "cancelled": false
    },
    {
      "room": "Room 310/311",
      "rooms": [
        "Room 310/311"
      ],
      "start": "2025-05-15T13:30:00-04:00",
      "end": "2025-05-15T17:00:00-04:00",
      "duration": 210,
      "kind": "tutorial",
      "section": "tutorials",
      "conf_key": 21,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Reinventing the `itertools` wheel for fun and profit",
      "description": "<p>In this hands-on tutorial we will reinvent the wheel and implement the module <code>itertools</code> in plain Python.</p>\n<p>We'll do that because that will teach us a lot about Python:</p>\n<ul>\n<li>how generators and lazy iteration work;</li>\n<li>the difference between iterables and iterators;</li>\n<li>what the built-ins <code>iter</code> and <code>next</code> do;</li>\n<li>how Python handles iteration and <code>for</code> loops under the hood;</li>\n<li>what the iterator protocol is;</li>\n<li>how the dunder methods <code>__iter__</code> and <code>__next__</code> play a part in all this; and</li>\n<li>we'll also learn about the functions inside <code>itertools</code>, a module with plenty of useful tools for your day-to-day iterations.</li>\n</ul>\n<p>And most importantly, we'll do it because it's genuinely fun!</p>",
      "authors": [
        "Rodrigo Girão Serrão"
      ],
      "speakers": [
        {
          "id": 106,
          "name": "Rodrigo Girão Serrão",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/106.jpg.256x256_q85.jpg",
          "bio": "<p>Rodrigo Girão Serrão is the author of <a href=\"https://mathspp.com/books\">multiple independently published books</a> on Python, programming, and mathematics, and <a href=\"https://mathspp.com/blog\">frequently blogs</a> about those same topics.\nRodrigo has also <a href=\"https://mathspp.com/talks\">presented talks and tutorials at some of the largest Python conferences in the world</a>, including PyCon US, EuroPython, and multiple European PyCons.</p>\n<p>As a fun fact, Rodrigo also <a href=\"https://mathspp.com/blog/teaching-the-worlds-largest-programming-lesson\">taught “the largest programming lesson in the world”</a>, a Guinness World Record established in late 2024.</p>\n<p>When he is not working or writing, Rodrigo can be found playing board games, walking his dog, or exercising at the gym.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/93/",
      "cancelled": false
    },
    {
      "room": "Room 301-305",
      "rooms": [
        "Room 301-305"
      ],
      "start": "2025-05-17T13:30:00-04:00",
      "end": "2025-05-17T14:15:00-04:00",
      "duration": 45,
      "kind": "talk",
      "section": "talks",
      "conf_key": 126,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "The Zen of Polymorphism: Choosing between isinstance(), methods, and @singledispatch",
      "description": "<p>Python is a multi-paradigm language that embraces both functional programming and object-oriented programming (OOP) approaches to writing code. OOP is especially popular, in large part due to how it enables polymorphism (for example, calling <code>speak()</code> on a Dog object returns \"woof\", while a Cat object's method returns \"meow\".) However, OOP has many downsides that are often not understood until it's too late in the lifecycle of building a program. Fortunately, Python also enables developers to achieve similar behavior to polymorphism while using simple functions and plain data objects instead of classes.</p>\n<p>This talk will detail three different approaches provided by Python to achieve polymorphism behavior in a realistic program. It will compare and contrast their relative strengths and weaknesses. It will show how the most naive approach, which relies on <code>isinstance()</code> checks, leads to severe code duplication. It will show how OOP method polymorphism leads to code being organized along the wrong axis, which hurts understandability, debugging, and maintainability in practice. It will also demonstrate a less commonly known part of the built-in <code>functools</code> library called <code>@singledispatch</code> that strikes a perfect balance between functional and OOP programming styles.</p>\n<p>Finally, you'll learn how <code>@singledispatch</code> works under the covers, and how to build or integrate similar functionality into your own programs so you can realize the benefits of polymorphism while avoiding the pitfalls.</p>",
      "authors": [
        "Brett Slatkin"
      ],
      "speakers": [
        {
          "id": 113,
          "name": "Brett Slatkin",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/113.jpg.256x256_q85.jpg",
          "bio": "<p>Brett Slatkin is the author of the book <a href=\"https://effectivepython.com\">Effective Python</a> and has been writing Python code professionally for the past 19 years. He works as a principal software engineer in the Office of the CTO at Google developing technology strategies and rapid prototypes. His experience includes: founding Google Surveys, a platform for collecting machine learning and market research datasets; launching Google App Engine, the company's first cloud computing product; scaling Google's A/B experimentation products to billions of users; and co-creating PubSubHubbub, the W3C standard for real-time RSS feeds. He earned his B.S. in Computer Engineering from Columbia University in the City of New York.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/99/",
      "cancelled": false
    },
    {
      "room": "Ballroom A",
      "rooms": [
        "Ballroom A"
      ],
      "start": "2025-05-17T13:30:00-04:00",
      "end": "2025-05-17T14:15:00-04:00",
      "duration": 45,
      "kind": "talk",
      "section": "talks",
      "conf_key": 124,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Looking At Audio",
      "description": "<p>There's a few popular ways in which we can \"see\" sound. But what do you actually see on those visualizations?</p>\n<p>In this talk, we'll be building short PyScript programs utilizing WebGL for attractive visualization display. We'll cover two fundamental methods (amplitude measurement and frequency spectrum display) and the many fun ways in which those two can be used. We'll start by looking at simple sounds with offline batch processing to represent the audio graphically. We'll finish with realtime audio visualization.</p>",
      "authors": [
        "Łukasz Langa"
      ],
      "speakers": [
        {
          "id": 27,
          "name": "Łukasz Langa",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/27.jpg.256x256_q85.jpg",
          "bio": "<p>Failed comedian. CPython Developer in Residence. Wannabe musician. Python 3.8 &amp; 3.9 release manager. Co-host of the core.py podcast. Original creator of Black. Dad.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/103/",
      "cancelled": false
    },
    {
      "room": "Room 321",
      "rooms": [
        "Room 321"
      ],
      "start": "2025-05-15T13:30:00-04:00",
      "end": "2025-05-15T17:00:00-04:00",
      "duration": 210,
      "kind": "tutorial",
      "section": "tutorials",
      "conf_key": 26,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Slot",
      "description": ""
    },
    {
      "room": "Room 308",
      "rooms": [
        "Room 308"
      ],
      "start": "2025-05-15T13:30:00-04:00",
      "end": "2025-05-15T14:30:00-04:00",
      "duration": 60,
      "kind": "sponsor-workshop",
      "section": "sponsor-presentations",
      "conf_key": 37,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Slot",
      "description": ""
    },
    {
      "room": "Room 309",
      "rooms": [
        "Room 309"
      ],
      "start": "2025-05-15T13:30:00-04:00",
      "end": "2025-05-15T14:30:00-04:00",
      "duration": 60,
      "kind": "sponsor-workshop",
      "section": "sponsor-presentations",
      "conf_key": 38,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Slot",
      "description": ""
    },
    {
      "room": "Room 301-305",
      "rooms": [
        "Room 301-305"
      ],
      "start": "2025-05-18T13:45:00-04:00",
      "end": "2025-05-18T14:15:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 163,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Cheese Must Stand: Defending the Python Library Ecosystem in 2025",
      "description": "<p>Supply chain attacks on Python package infrastructure increased in frequency and sophistication in2024. As PyPI comes under threat, how can we continue to secure our beloved cheese shop through 2025?</p>\n<p>The 600k packages in PyPI power sensitive infrastructure in almost every critical industry, and it's no surprise that the Python library ecosystem is a target. In 2024 alone, the Ultralytics token compromise and the NP6 combined typosquatting and DLL sideloading attack show the sophistication of these supply chain attacks.</p>\n<p>In the first part of this talk (12 minutes), we'll look back at these 2024 attacks and also consider examples such as the \"revival hijack\" attack vector and the 2022 dependency confusion attack on PyTorch. In the second portion (12 minutes), we'll dig into some critical developments in this area that have helped to mitigate recent attacks, such as:</p>\n<ul>\n<li>Provenance transparency logs using <a href=\"https://www.sigstore.dev/\">Sigstore</a>  </li>\n<li>Progressive supply chain security levels with <a href=\"https://slsa.dev/\">SLSA</a>  </li>\n<li>Software Bills of Materials (sbomS)  </li>\n<li>Artifact scanners such as Grype and Trivy</li>\n</ul>\n<p>We will also briefly discuss specific insights from developing Chainguard’s Guarded Ecosystems for Python, an ambitious alternative package index that rebuilds included packages from scratch. The final takeaway: while mitigations exist for these threats, they're not equally distributed, and we'll point out low hanging fruit for securing projects and infrastructure (3 minutes).</p>\n<p>This talk will be an accessible introduction to an intermediate topic (software supply chain security). Expect some cheesy puns and memes as we deal with this muenster problem—all in excellent taste, of course.</p>\n<p>Patrick recently received <a href=\"https://www.linkedin.com/feed/update/urn:li:activity:7240177515992944640/\">best speaker at SwampUP 2024</a>. Srishti and Patrick recently <a href=\"https://edu.chainguard.dev/chainguard/chainguard-images/videos/beyond_zero_pytorch_2024/\">teamed up for PyTorch 2024</a>.</p>",
      "authors": [
        "Patrick Smyth",
        "Srishti Hegde"
      ],
      "speakers": [
        {
          "id": 111,
          "name": "Patrick Smyth",
          "photo": null,
          "bio": "<p>-</p>"
        },
        {
          "id": 112,
          "name": "Srishti Hegde",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/112.jpg.256x256_q85.jpg",
          "bio": "<p>Srishti is a software engineer at Chainguard with expertise in distributed systems and machine learning libraries. She has extensive experience in building minimal, secure containers for Python projects. As an open-source enthusiast, she is passionate about the deployment and optimization of AI/ML workloads.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/98/",
      "cancelled": false
    },
    {
      "room": "Room 301-305",
      "rooms": [
        "Room 301-305"
      ],
      "start": "2025-05-16T13:45:00-04:00",
      "end": "2025-05-16T14:30:00-04:00",
      "duration": 45,
      "kind": "talk",
      "section": "talks",
      "conf_key": 74,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "This Talk Has Been Disabled",
      "description": "<p>Depending on who you ask, 15-20% of the world's population has some form of disability. Despite this, the vast majority of software isn't fully accessible. Building truly accessible systems starts with asking questions. What does it mean to be disabled? How do we know whether people can use our website? And what if our users have access issues that we don't know about?</p>\n<p>Many of these core concepts are covered by the Web Content Accessibility Guidelines, which are the governing standard for web accessibility. However, some scenarios require us to dig a little deeper. We'll look at situations where you might need to think beyond the guidelines, and some of the resources and tools that you can use to help you do so.</p>\n<p>Finally, we'll learn how to meet a variety of different accessibility requirements by breaking down a series of real-world case studies. We'll take a magnifying glass to a household name's user interfaces, travel back in time to the GeoCities era, apply some concepts from government press conferences to online content delivery, hack a life-saving medical device, and attempt to navigate technical events (and stairs). By the end of the talk, you should understand why it's important to evaluate the accessibility of your software, what goes wrong when assessments don't happen, and how to apply these lessons to design systems that work for everyone.</p>",
      "authors": [
        "Dawn Cooper"
      ],
      "speakers": [
        {
          "id": 147,
          "name": "Dawn Cooper",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/147.jpeg.256x256_q85.jpg",
          "bio": "<p>Dawn likes to tinker with cloud infrastructure and security, and regularly goes down rabbit holes in a futile search for ways to develop systems that are both reliable and impenetrable. As well as accidental accessibility advocacy, Dawn can regularly be found sharing knowledge within various tech communities.</p>\n<p>Outside work, Dawn is an occasional author, kitchen alchemist, and raging sportsball fan.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/130/",
      "cancelled": false
    },
    {
      "room": "Ballroom BC",
      "rooms": [
        "Ballroom BC"
      ],
      "start": "2025-05-17T13:45:00-04:00",
      "end": "2025-05-17T14:15:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 125,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Cython in Practice: A Deep Dive into Legacy C Integration and Debugging",
      "description": "<p>In Cython in Practice, we'll go over the benefits and challenges of utilizing Cython as a way to utilize legacy C/C++ programs and libraries within Python applications. Cython's capabilities permit users to use Python-like syntax to integrate with existing C code and build their own library and program interfaces accessible from both C and Python. This talk will cover essential tools and workflows for building with Cython and what the interface looks like for integrating with legacy C code, and how to build and package a Cython extension with Poetry and uv.</p>\n<p>However, utilizing the full powers of Cython is not without its own set of challenges. The presentation will also provide practical insights into common errors encountered during build and runtime phases while developing in Cython. Attendees will learn how to navigate these issues, using a detailed account of the specific obstacles faced when wrapping a legacy C library for Python via Cython. We will discuss different memory management and debugging tools, with a focus on Valgrind, and how to utilize these tools during development in Cython.</p>",
      "authors": [
        "Maryanne Wachter"
      ],
      "speakers": [
        {
          "id": 66,
          "name": "Maryanne Wachter",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/66.png.256x256_q85.jpg",
          "bio": "<p>Maryanne Wachter is a software developer and professional engineer. As a structural engineer, she's worked on landmark transit projects, long-span bridges, and various educational/cultural centers in the U.S. and Europe. Passionate about open source software and software transparency, she leverages her extensive engineering expertise to develop software solutions that drive sustainable practices in the built environment.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/56/",
      "cancelled": false
    },
    {
      "room": "Ballroom A",
      "rooms": [
        "Ballroom A"
      ],
      "start": "2025-05-16T13:45:00-04:00",
      "end": "2025-05-16T14:30:00-04:00",
      "duration": 45,
      "kind": "talk",
      "section": "talks",
      "conf_key": 72,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Intuition vs. Reality: Surprising Truths in Python Performance",
      "description": "<p>How often do we trust our instincts when optimizing code? In Python, performance frequently defies intuition, leading us to make changes that might slow things down instead of speeding them up. This talk explores surprising truths about Python performance and showcases why measurement tools are essential for finding the real bottlenecks in our code.</p>\n<p>Consider this: is it faster to count even numbers in a list using <code>len([x for x in arr if x % 2 == 0])</code> or <code>sum(1 for x in arr if x % 2 == 0)</code>? While one might seem more Pythonic or efficient at first glance, the performance results might surprise you. </p>\n<p>Through an interactive format, we’ll quiz you on performance scenarios using real-world examples. From counting even numbers to rewriting Python code in Rust, each case study will challenge assumptions about what makes code faster.</p>\n<p><strong>Plan:</strong></p>\n<ol>\n<li><strong>Introduction:</strong> Why intuition often fails in software performance</li>\n<li><strong>Interactive performance case studies:</strong> Real-world examples that will surprise you<ul>\n<li>Counting even numbers</li>\n<li>String concatenation</li>\n<li>Pathfinding optimization</li>\n<li>etc.</li>\n</ul>\n</li>\n<li><strong>Conclusion:</strong> How do we become consistent about optimizations?</li>\n</ol>\n<p>By the end, you’ll understand why performance measurements matter and leave with practical insights and tools to improve Python performance systematically.</p>",
      "authors": [
        "Arthur Pastel",
        "Adrien Cacciaguerra"
      ],
      "speakers": [
        {
          "id": 64,
          "name": "Arthur Pastel",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/64.jpg.256x256_q85.jpg",
          "bio": "<p>Hi, I'm Arthur, a software engineer based in Paris 🇫🇷🥖</p>\n<p>I worked as an engineer in a few tech companies over the past years, mostly building software with Python, but I'm also passionate about (too ??) many other software fields.</p>\n<p>I'm an open-source enthusiast and love to contribute when possible. Three years ago, I built ODMantic, an ODM for MongoDB and Python. It's a kind of ORM built on top of Pydantic to provide a seamless model definition and integration with FastAPI.</p>\n<p>2 years ago, I founded CodSpeed, a Continuous Performance Analysis solution helping tech companies and Open-Source projects prevent performance issues directly in their CI pipelines.</p>"
        },
        {
          "id": 65,
          "name": "Adrien Cacciaguerra",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/65.jpg.256x256_q85.jpg",
          "bio": "<p>Hey, I am Adrien, a French Software Enfineer for 7 years.</p>\n<p>I am a co-creator CodSpeed, a Continuous Performance Analysis solution that helps tech companies and Open-Source projects prevent performance issues directly in their CI pipelines.</p>\n<p>I am passionate about Developer Experience, Performance, Open-Source, Python, TypeScript, and Rust. These passions led me to co-author Swarmion, an open-source set of tools to develop Serverless micro-services.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/55/",
      "cancelled": false
    },
    {
      "room": "Hall C",
      "rooms": [
        "Hall C"
      ],
      "start": "2025-05-18T13:45:00-04:00",
      "end": "2025-05-18T14:15:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 160,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Dependency Injection in Python with Pydantic and Hydra",
      "description": "<h2>Abstract</h2>\n<p>Dependency Injection (DI) is a technique that allows for the flexible construction of nested object hierarchies through configuration, with the goal of reducing coupling between objects and enabling more run-time flexibility in applications. </p>\n<p>This talk aims to illustrate how the popular open source packages Pydantic and Hydra can be combined (with a little extra work) to provide a powerful dependency injection framework for python. This session will provide an introduction to these tools, illustrate their integration, and highlight their benefits in managing configurations and dependencies. Attendees will gain insights into building flexible and extensible Python applications by leveraging the ability to register and reuse Pydantic models from Hydra based configurations.</p>\n<h2>Target Audience</h2>\n<p>This talk is designed for Python developers, software engineers, and architects interested in improving their application architecture through dependency injection. Attendees should have a basic understanding of Python and software design principles.</p>\n<h2>Prerequisites</h2>\n<p>No prior experience with Pydantic or Hydra is required.</p>",
      "authors": [
        "Pascal Tomecek"
      ],
      "speakers": [
        {
          "id": 145,
          "name": "Pascal Tomecek",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/145.jpeg.256x256_q85.jpg",
          "bio": "<p>Head of Research Technology for Cubist Systematic Strategies</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/128/",
      "cancelled": false
    },
    {
      "room": "Ballroom A",
      "rooms": [
        "Ballroom A"
      ],
      "start": "2025-05-18T13:45:00-04:00",
      "end": "2025-05-18T14:15:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 161,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Taming file zoos: Data science with DuckDB database files",
      "description": "<h1>Problem statement</h1>\n<p>Data scientists working in Python often spend the majority of their time cleaning input data, frequently from files. These files have many formats, can be located anywhere, and sometimes have names like ‘data_final_final_v3.csv’. Data scientists often produce similar files! We call these “file zoos”. </p>\n<h1>Taming file zoos with DuckDB</h1>\n<h2>DuckDB fits perfectly with Python</h2>\n<p>The MIT-licensed DuckDB database management system was designed to fit perfectly into data scientists’ workflows. Install DuckDB’s pre-compiled, dependency-free binary from pip. It can read and write dataframes (Pandas, Polars, and Apache Arrow) for interoperability. It also has an advanced persistent file format.</p>\n<h2>Read and write files with confidence</h2>\n<p>DuckDB can read and write to and from csv, parquet, json - even xlsx and Google Sheets. The csv reader in DuckDB is world-class, quickly querying even messy csvs. DuckDB interoperates with object stores across clouds and reads lakehouse formats like Delta and Iceberg. </p>\n<h2>Organize using the DuckDB format</h2>\n<p>Use DuckDB’s highly compressed columnar file format to persist many large tables all in the same file. Store processing logic in views and functions and even update just portions of the file. DuckDB serves as a catalog when files should remain in place.</p>\n<p>Beyond the format itself, DuckDB provides ACID transactional safety and parallel processing, it can be read in 15+ languages, and is guaranteed to be readable for years to come. It unlocks larger-than-memory analyses to solve 2TB problems, not 16GB ones!</p>\n<h2>Extensions</h2>\n<p>Community extensions enable DuckDB to read additional formats and are provided through a pip-like package repository.</p>\n<h2>Takeaways</h2>\n<p>Attendees will learn how to install and use DuckDB locally, how to integrate it seamlessly in their existing Python scripts or Jupyter Notebooks, and how to smoothly manage the deluge of files in their workflow.</p>",
      "authors": [
        "Alex Monahan"
      ],
      "speakers": [
        {
          "id": 127,
          "name": "Alex Monahan",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/127.png.256x256_q85.jpg",
          "bio": "<p>Alex Monahan is a forward deployed software engineer at MotherDuck and writes blogs part time for DuckDB Labs. </p>\n<p>Alex joined MotherDuck 1 1/2 years ago after 9 years at Intel. After starting at Intel as an industrial engineer, Alex later became a technical analyst, and then moved into a data scientist role. </p>\n<p>Back in 2020 Alex discovered DuckDB while building an internal self-service analytics platform. Alex then became one of DuckDB's biggest Twitter fans! He has been diving deeper into duck-themed databases ever since.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/112/",
      "cancelled": false
    },
    {
      "room": "Room 310/311",
      "rooms": [
        "Room 310/311"
      ],
      "start": "2025-05-17T13:45:00-04:00",
      "end": "2025-05-17T14:15:00-04:00",
      "duration": 30,
      "kind": "charla",
      "section": "talks",
      "conf_key": 127,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Pruebas E2E automatizadas con Playwright y Python",
      "description": "<p>En un mundo donde necesitamos garantizar la calidad de nuestro producto, automatizar pruebas para poder seguir flujos de trabajo en ambientes ágiles es fundamental.</p>\n<p>En esta charla de 30 minutos, te invito a conocer el universo de Playwright combinado con el poder de Python, la cual es una herramienta con mucha proyección en el mercado.</p>\n<p>Comenzaremos explorando los fundamentos de Playwright, desvelando por qué lo hace tan único, cómo podemos instalarlo y automatizar de manera sencilla un caso de prueba de la mano con PyTest.</p>\n<p>Exploraremos juntos las opciones que nos da Playwright para la posibilidad de ejecutar nuestras pruebas en múltiples navegadores, tomar capturas de pantalla, video y emular vistas móviles para probar diseños responsivos.</p>\n<p>Pero no terminaremos ahí, exploraremos cómo potenciar tus scripts de prueba con el patrón de diseño \"Page Object Model\", una práctica que mejora la mantenibilidad del código y facilita la colaboración en los equipos de desarrollo. Además, cómo podemos consumir información por medio de los \"fixtures\" facilitados por PyTest.</p>\n<p>Ya seas un ingeniero de QA o un desarrollador buscando mejorar la calidad de tus proyectos, esta charla te proporcionará herramientas prácticas y conocimientos esenciales para agregar pruebas E2E eficientes en tu flujo de desarrollo.</p>",
      "authors": [
        "Joan Alejandro Esquivel Montero"
      ],
      "speakers": [
        {
          "id": 107,
          "name": "Joan Alejandro Esquivel Montero",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/107.png.256x256_q85.png",
          "bio": "<p>I have been working in Software Quality Assurance for the last 7+ years experiencing different projects &amp; tools during my professional trip. I also create testing &amp; automation free content in my Youtube Channel \"JoanMedia\".</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/94/",
      "cancelled": false
    },
    {
      "room": "Hall C",
      "rooms": [
        "Hall C"
      ],
      "start": "2025-05-17T13:45:00-04:00",
      "end": "2025-05-17T14:15:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 123,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Type Hints in Real-World Projects: Practical Steps for Continuous Maintenance and Improvement",
      "description": "<p>Many Python developers have added type hints and run mypy checks, but still rely on <code>typing.Any</code> too often, keep old <code>typing.List</code>/<code>typing.Dict</code> hints, or use <code># type: ignore</code> comments everywhere. In that case, typing may feel like just another task, not a tool that truly improves quality.</p>\n<p>But like unittest, typing can reduce hidden issues and make you confident about changes, even though it does not add new features directly. If we maintain and improve our type hints over time, typing can become a reliable foundation for your project, making refactoring safer and Python upgrades smoother.</p>\n<p>This talk is not just another basic intro. We’ll show practical steps with before-and-after code examples:\n- Use ideas from newer features (like <code>typing.TypeIs</code> in Python 3.13) and <code>typing_extensions</code> to apply similar concepts on older versions.<br />\n- Run <code>pyupgrade</code> (via <code>ruff</code>) to automatically update old hints, reducing manual edits and creating a consistent style.<br />\n- Apply partial ignores instead of full <code># type: ignore</code>, and integrate <code>pre-commit</code> and CI checks to catch issues early, making typing checks feel natural.<br />\n- Add types to example code to detect subtle incompatibilities, similar to how tests find hidden bugs.</p>\n<p>We’ll also propose a gradual approach so your team won’t be overwhelmed. After this talk, you should see typing as a stable base that reduces bugs, helps with refactoring, and supports long-term growth.</p>\n<p><strong>Who should attend this talk?</strong><br />\nThis talk is for intermediate Python developers who already use basic type hints but feel they are not getting enough value out of them yet. If you want to go beyond minimal checks and keep your typing strong as your project grows, this session will show you practical steps you can take.</p>",
      "authors": [
        "Koudai Aono"
      ],
      "speakers": [
        {
          "id": 15,
          "name": "Koudai Aono",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/15.jpg.256x256_q85.jpg",
          "bio": "<p>I am a software developer based in Tokyo, with a strong focus on Python. I enjoy contributing to Open Source Software (OSS) with a goal to make the development environment friendlier.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/13/",
      "cancelled": false
    },
    {
      "room": "Ballroom BC",
      "rooms": [
        "Ballroom BC"
      ],
      "start": "2025-05-18T13:45:00-04:00",
      "end": "2025-05-18T14:15:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 162,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Phantom Dependencies: is your requirements.txt haunted?",
      "description": "<p>Did you know there’s more than Python code included in Python packages? This might be a surprise, especially if you’ve inspected your list of dependencies and only found exactly what you've pip-installed. There's something else lurking in the dark corners of your virtual environments.</p>\n<p>Modern software systems are complex, graph-like, and difficult to measure by both humans and our tools. Luckily there’s an answer: Software Bill-of-Materials (SBOMs). SBOMs can describe any amalgamation of Python, C, C++, Rust, and JavaScript in your Python application which enables static code analysis, license compliance, vulnerability management, and complying with new security regulations.</p>\n<p>By the end of this talk you'll know what Software Bill-of-Materials documents are, why they are useful, and what you need to do when someone asks for one!</p>",
      "authors": [
        "Seth Michael Larson"
      ],
      "speakers": [
        {
          "id": 16,
          "name": "Seth Michael Larson",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/16.jpeg.256x256_q85.jpg",
          "bio": "<p>Security Developer-in-Residence and Fellow of the Python Software Foundation, Minnesoootan</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/14/",
      "cancelled": false
    },
    {
      "room": "Ballroom BC",
      "rooms": [
        "Ballroom BC"
      ],
      "start": "2025-05-16T14:00:00-04:00",
      "end": "2025-05-16T14:30:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 73,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "A11y Need Is Love (But Accessible Docs Help Too)",
      "description": "<p>The Beatles told us that ‘all you need is love’ and while that is a lovely sentiment, love alone won’t fix low contrast colours, missing focus states or inaccessible navigation. These barriers impact countless users with disabilities, reducing the usefulness and reach of valuable documentation. So, while love is great, accessible docs are <em>essential</em>.</p>\n<p>In this talk, we will use the <a href=\"https://pydata-sphinx-theme.readthedocs.io/en/stable/\">PyData Sphinx Theme</a> as a case study to explore common accessibility problems in documentation websites and how to tackle them. We will discuss the accessibility changes we made to the theme, how those changes affected users, and what we learnt along the way. Additionally, we will also conduct a short accessibility audit on a website suggested by the audience. This demo will provide a practical understanding of how to improve accessibility.</p>\n<p>Whether you’re a documentation maintainer, a curious developer or simply someone who cares about accessibility, this beginner-friendly talk will help you learn more about accessibility in documentation and how to get started. Love might be a universal language, but your code appreciates accessible documentation.</p>",
      "authors": [
        "Smera Goel"
      ],
      "speakers": [
        {
          "id": 152,
          "name": "Smera Goel",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/152.jpg.256x256_q85.jpg",
          "bio": "<p>By day (and sometimes by night), Smera Goel is a UX/UI designer at <a href=\"https://labs.quansight.org/\">Quansight Labs</a>, where she focuses on making open-source projects more accessible and user-friendly. </p>\n<p>Beyond design, Smera also contributes to community-driven projects like the <a href=\"https://fedoraproject.org/\">Fedora Project</a> and mentors aspiring designers through <a href=\"https://www.outreachy.org/\">Outreachy</a>. Talk to her about design, accessibility, mentorship or her ever-growing collection of instant noodles (she's always looking for recommendations).</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/135/",
      "cancelled": false
    },
    {
      "room": "Hall C",
      "rooms": [
        "Hall C"
      ],
      "start": "2025-05-16T14:00:00-04:00",
      "end": "2025-05-16T14:30:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 71,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Safeguard your precious API endpoints built on FastAPI using OAuth 2.0",
      "description": "<p>Audience Level: Beginners, Pythonistas who build on FastAPI who are not security experts but still need to deploy secure APIs.</p>\n<p>Is implementing authorization to your API endpoints an afterthought? Who should have access to your API endpoints? This talk covers using OAuth 2.0 to secure API endpoints (including ML endpoints) built on FastAPI following industry-recognized best practices. Come on a journey with me from taking your API endpoints to being not just functional but also secure. When you follow secure identity standards, you’ll be equipped with a deeper understanding of the critical need for authorization.</p>",
      "authors": [
        "Semona Igama"
      ],
      "speakers": [
        {
          "id": 100,
          "name": "Semona Igama",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/100.jpg.256x256_q85.jpg",
          "bio": "<p>Semona is a Developer Advocate at Okta. She enjoys chatting about OpenID Connect, OAuth 2.0, and web security, but most of all, learning how developers learn best. Outside work, Semona is a Pythonista, loves kombucha, and plays board/role-playing games and Ultimate!</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/88/",
      "cancelled": false
    },
    {
      "room": "Room 310/311",
      "rooms": [
        "Room 310/311"
      ],
      "start": "2025-05-16T14:00:00-04:00",
      "end": "2025-05-16T14:30:00-04:00",
      "duration": 30,
      "kind": "charla",
      "section": "talks",
      "conf_key": 75,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Cómo llevar tus presentaciones técnicas al siguiente nivel con Python + Quarto",
      "description": "<p>Da lo mismo si trabajas como dev o haciendo ciencia de datos: crear buenas presentaciones es un aspecto clave para dar a conocer lo que haces. Una buena presentación nos permite mostrar la relevancia de nuestro trabajo de una forma clara y convincente, y destacar el valor de nuestras contribuciones técnicas. En este contexto, un elemento fundamental de cualquier presentación es un set de slides que se destaque. \nEn esta charla presentaremos 10 simples reglas para crear slides en formato HTML usando Python y Quarto, un sistema de publicación técnico y científico de código abierto. La audiencia se llevará sugerencias concretas sobre cómo mejorar sus próximo set de slides y el código para implementarlas. </p>\n<p>¿Por qué Quarto?\nQuarto es una excelente herramienta para crear slides sobre contenido técnico porque permite integrar código, datos y texto en un solo archivo. A lo largo de la presentación nos enfocaremos en la creación de slides en formato HTML, ya que este tiene características que lo hacen particularmente útil para presentar contenido técnico. Por ejemplo, ofrece opciones flexibles para mostrar y ocultar código y para ajustar la cantidad de información mostrada, lo que nos permite crear \"capas\" de contenido. Así, es posible presentar ideas claves para una audiencia no técnica y al mismo tiempo incluir código que se muestra solo si es necesario. Incluso, gracias al poder de WebAssembly + pyodide, es posible hacer que aparezca un intérprete de Python directamente en nuestra presentación, para poder hacer una demostración de algo en el momento, si es necesario. \nTodas estas opciones nos permiten crear presentaciones adaptables a públicos con distintos niveles de experiencia o conocimiento técnico.</p>",
      "authors": [
        "Riva Quiroga"
      ],
      "speakers": [
        {
          "id": 72,
          "name": "Riva Quiroga",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/72.png.256x256_q85.png",
          "bio": "<p>Hi! My name is Riva, and I'm a Data Scientist / Research Software Engineer based in Valparaíso, Chile. I am a Software Sustainability Institute Fellow, a Women Techmakers Ambassador, and a serial volunteer: I co-organize PyLadies Valparaíso, serve on the Leadership Team of R-Ladies, and am an editor at Programming Historian, among other community-led projects.</p>\n<ul>\n<li>info: https://rivaquiroga.cl/now</li>\n</ul>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/62/",
      "cancelled": false
    },
    {
      "room": "Hall C",
      "rooms": [
        "Hall C"
      ],
      "start": "2025-05-17T14:30:00-04:00",
      "end": "2025-05-17T15:00:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 128,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Supercharge your Python library using AST parsing",
      "description": "<p>The primary goal of developers using the Python/C API is to increase the performance of their Python code. Often, this is done by executing a C function which has been compiled into machine code to bypass the Python interpreter. However, <em>between</em> a user’s Python code and the invocation of the C function, we can squeeze out even more performance. How, you ask? </p>\n<p>We can leverage AST parsing with Python’s standard library “ast” module to modify the syntax of the code. In this talk, we show some tricks to transform the Python AST for optimized runtime performance using the C API. These aren’t just theoretical, either! Each example is taken from CSP, an open-source computation graph library which heavily uses the Python/C API. </p>\n<p>This talk is meant for an advanced audience which has familiarity with the Python “ast” module as well as the Python/C API.</p>",
      "authors": [
        "Adam Glustein"
      ],
      "speakers": [
        {
          "id": 146,
          "name": "Adam Glustein",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/146.png.256x256_q85.jpg",
          "bio": "<p>Adam Glustein is a Quantitative Developer at Point72 Asset Management in New York, USA. He is a contributor to CSP, a reactive stream processing library for both realtime and historical data.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/129/",
      "cancelled": false
    },
    {
      "room": "Ballroom BC",
      "rooms": [
        "Ballroom BC"
      ],
      "start": "2025-05-17T14:30:00-04:00",
      "end": "2025-05-17T15:00:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 130,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Zoom, Enhance: Asyncio's New Introspection Powers",
      "description": "<p>asyncio in Python 3.14 introduces a new powerful feature: introspecting a running asyncio program from another OS process. This changes everything—now you can debug and profile your asyncio code in production with no performance penalty. Join us for a fun ride as we show how this magic works under the hood and how you can use it. Learn about technical design decisions, performance considerations, security implications, and trade-offs made. Along the way, you’ll gain both beautiful and horrible insights into how asyncio and operating systems interact, and we’ll wrap up with a flawless live demo!</p>",
      "authors": [
        "Yury Selivanov"
      ],
      "speakers": [
        {
          "id": 131,
          "name": "Yury Selivanov",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/131.jpg.256x256_q85.jpg",
          "bio": "<ul>\n<li>\n<p>Python core developer since 2013. </p>\n</li>\n<li>\n<p>Author of a numerous PEPs, such as: adding async/await syntax, asynchronous generators, exception groups, context variables, etc. Contributed to many other areas of CPython.</p>\n</li>\n<li>\n<p>Creator of uvloop -- the de-facto library of running asyncio applications in production.</p>\n</li>\n<li>\n<p>Co-founder and CEO of EdgeDB Inc., with the mission of advancing SQL and PostgreSQL to the new heights, enabling high-performance, and enhancing developer experience.</p>\n</li>\n</ul>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/116/",
      "cancelled": false
    },
    {
      "room": "Room 310/311",
      "rooms": [
        "Room 310/311"
      ],
      "start": "2025-05-17T14:30:00-04:00",
      "end": "2025-05-17T15:00:00-04:00",
      "duration": 30,
      "kind": "charla",
      "section": "talks",
      "conf_key": 132,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Rust + Python = Poder Ilimitado: Introducción a PyO3",
      "description": "<h1><strong>Creando Bibliotecas de Python con Rust: Introducción a PyO3</strong></h1>\n<p>¿Te imaginas combinar la <strong>velocidad y seguridad</strong> de Rust con la <strong>flexibilidad y facilidad</strong> de Python? En esta charla, exploraremos cómo lograrlo utilizando <strong>PyO3</strong>, una herramienta que permite construir bibliotecas de Rust que se integran perfectamente en aplicaciones Python.  </p>\n<p>Presentaré un extracto de un <strong>proyecto personal en desarrollo</strong>, donde utilizo Rust para optimizar tareas críticas de desempeño y las expongo como módulos accesibles desde Python. Compartiré mi experiencia sobre los retos y ventajas de unir estos dos mundos tecnológicos.  </p>\n<h3><strong>Estructura de la Charla</strong></h3>\n<ol>\n<li><strong>Introducción:</strong>  </li>\n<li>\n<p>Qué es PyO3 y por qué combinar Rust y Python puede transformar tus proyectos.  </p>\n</li>\n<li>\n<p><strong>Fundamentos y Configuración:</strong>  </p>\n</li>\n<li>\n<p>Cómo iniciar un proyecto con PyO3 y preparar un entorno de desarrollo eficiente.  </p>\n</li>\n<li>\n<p><strong>Demostración Práctica:</strong>  </p>\n</li>\n<li>Creación paso a paso de una biblioteca simple en Rust, expuesta a Python.  </li>\n<li>Demostración de proyecto personal</li>\n</ol>\n<h3><strong>Conclusión</strong></h3>\n<p>Se hará un análisis de resultados, haciendo una reflexión sobre el impacto del proyecto y las lecciones obtenidas, para pasar a las dudas de la audiencia.</p>",
      "authors": [
        "Daniel Hernández Méndez"
      ],
      "speakers": [
        {
          "id": 123,
          "name": "Daniel Hernández Méndez",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/123.jpg.256x256_q85.jpg",
          "bio": "<p>Apasionado por los datos y amante del nuevo conocimiento, actualmente me desempeño como <strong>Data Steward en Scotiabank</strong>, donde trabajo en la gestión y gobernanza de la información para apoyar procesos clave.  </p>\n<p>Soy un miembro activo de <strong>Python Chile</strong>, una comunidad dedicada a la difusión y crecimiento del lenguaje Python en el país. Mi contribución abarca tanto el lado organizativo, participando en la planificación de eventos como <strong>meetups, PyCon y PyDay</strong>, como el lado expositivo, compartiendo mi conocimiento en charlas dirigidas a desarrolladores y entusiastas de la tecnología.  </p>\n<p>Creo firmemente en el poder del <strong>aprendizaje colectivo</strong> y la <strong>colaboración</strong> para impulsar el desarrollo personal y profesional, lo que me motiva a seguir aportando a la comunidad tecnológica en cada oportunidad que se presenta.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/109/",
      "cancelled": false
    },
    {
      "room": "Room 301-305",
      "rooms": [
        "Room 301-305"
      ],
      "start": "2025-05-18T14:30:00-04:00",
      "end": "2025-05-18T15:00:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 167,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "One Year In: Insights and Inspiration from my PSF Journey",
      "description": "<p>Reflecting on a year at the Python Software Foundation (PSF), I’ll share insights into how the CPython project and its surrounding efforts, as well as the PSF, operate. Learn how anyone can get involved in areas like code, documentation, or PSF projects, and uncover some lesser-known aspects of the PSF’s inner workings. Discover how you can contribute to—from code to documentation—and help shape Python’s future.</p>",
      "authors": [
        "Jacob Coffee"
      ],
      "speakers": [
        {
          "id": 143,
          "name": "Jacob Coffee",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/143.jpeg.256x256_q85.jpg",
          "bio": "<p>Jacob Coffee is an Infrastructure Engineer at the Python Software Foundation and a newly invited CPython triager. He supports key Python services such as PyPI.org and Python.org while also contributing to the maintenance of the Litestar ecosystem which boasts libraries such as Litestar, Advanced Alchemy, Polyfactory, and more. He is passionate about open source development, funding, the mission of the PSF, and enhancing the tools that empower developers worldwide.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/126/",
      "cancelled": false
    },
    {
      "room": "Ballroom A",
      "rooms": [
        "Ballroom A"
      ],
      "start": "2025-05-17T14:30:00-04:00",
      "end": "2025-05-17T15:00:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 129,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "You can and Should Build XKCD's \"Sky Alarm\" for Cool Space Things",
      "description": "<p>XKCD is a webcomic by Randall Munroe, and in one of his comics there is a \"<a href=\"https://xkcd.com/2979/\">Sky Alarm</a>\". It features a small box with a light on top of it, and it goes \"weeee ooooo\" when a \"Cool Space Thing [is] Happening!\". </p>\n<p>If you want one, I've got great news: you can build one and it can run on Python! </p>\n<p>Circuit Python let's us extend the Python we know and love into the world around us, and we can use that extension to build alarms when \"Cool Space Things\" happen. Or by adding a sensor or two, we can have it respond to things in our environment. </p>\n<p>This talk walks through a basic build of a \"Sky Alarm\" using Circuit Python. We'll highlight fetching data, selecting a micro controller, making it respond to data on a local server, and adding sensors, and logging data from those sensors for plotting, displays, or more complex functions and analysis. Focusing on a solder free build, this will give you the tools you need to bring Python into the physical spaces around you without needing to be an expert when it comes to electronics and electrical engineering.</p>",
      "authors": [
        "Keith Murray"
      ],
      "speakers": [
        {
          "id": 18,
          "name": "Keith Murray",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/18.png.256x256_q85.jpg",
          "bio": "<p>I've been using Python since 2012 and focus on bioinformatics. With Circuit Python I have enjoyed bring Python into my home, creating a 'somewhat smart' home, and more than that, I've enjoyed recording and analyzing data that I can actively change and impact so I can more rapidly understand a complex algorithm as it impacts values I have an intuitive sensor for. </p>\n<p>Being active in online communities, and PyOhio, I enjoy seeing others build amazing things with Python, and as Python become more browser based, mobile deployed, and embedded, I'm really excited to see what people build.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/16/",
      "cancelled": false
    },
    {
      "room": "Ballroom A",
      "rooms": [
        "Ballroom A"
      ],
      "start": "2025-05-18T14:30:00-04:00",
      "end": "2025-05-18T15:00:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 165,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "The past, present, and future of virtual environments",
      "description": "<p>Virtual environments have become an essential part of the Python developer experience, but recent tools provide workflows where virtual environments are no longer the center of user interactions.</p>\n<p>This talk explores the evolution of virtual environments, from their originating motivations and the role they serve today to a vision for the future, with a particular focus on how virtual environments are becoming automated, hidden, and disposable.</p>\n<p>Virtual environments were introduced in 2004. We’ll briefly discuss the history of the tools built to manage virtual environments. We’ll talk about the differences between imperative and declarative environment management. Then, we’ll dive into the user experiences powered by automating management of environments, using uv as a primary example.</p>\n<p>Finally, we’ll discuss limitations of the existing tooling and how they may be overcome in the future, such as, improving the IDE experience for scripts with inline metadata, locking build requirements, and using declarative interfaces for global environments.</p>\n<p>Some prior knowledge of virtual environments and Python packaging will be necessary to reason about the broader questions posed, but the talk will attempt to give the necessary background — deep Python knowledge will not be needed. The talk will be focused on user experience and abstractions rather than implementation details.</p>",
      "authors": [
        "Zanie Blue"
      ],
      "speakers": [
        {
          "id": 34,
          "name": "Zanie Blue",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/34.jpg.256x256_q85.jpg",
          "bio": "<p>Zanie is passionate about empowering developers and scientists through powerful, friendly tooling. They have a background in computational neuroscience and bioinformatics, but now they build open source tools for Python in Rust at Astral. They have too many hobbies and a very cute dog named Basho.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/32/",
      "cancelled": false
    },
    {
      "room": "Ballroom BC",
      "rooms": [
        "Ballroom BC"
      ],
      "start": "2025-05-18T14:30:00-04:00",
      "end": "2025-05-18T15:00:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 166,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Slot",
      "description": ""
    },
    {
      "room": "Hall C",
      "rooms": [
        "Hall C"
      ],
      "start": "2025-05-18T14:30:00-04:00",
      "end": "2025-05-18T15:00:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 164,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Keeping up with Python: what makes upgrades hard, and what can we do about it",
      "description": "<p>cPython upgrades can be very challenging.  Changes in python version usually mean changes all over the place and managing that can be taxing.  Like first party code using deprecated api or Third-party code changing API required to change python versions.  Lets go over some bad code examples and ways to improve the experience for everyone.  So that maybe in the future upgrades are not so hard.</p>",
      "authors": [
        "Jason Fried"
      ],
      "speakers": [
        {
          "id": 33,
          "name": "Jason Fried",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/33.png.256x256_q85.jpg",
          "bio": "<p>Jason has been writing Python for over 13 years, with most of that time spent at Meta working on cPython version upgrades. He has given talks at PyConUS, PyConAU, and PyOhio, and contributes to various Python open source projects and cPython itself. Recently, he became a cPython triager. In addition to his work in tech, Jason is also an avid goat farmer on his ranch in California.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/31/",
      "cancelled": false
    },
    {
      "room": "Room 301-305",
      "rooms": [
        "Room 301-305"
      ],
      "start": "2025-05-17T14:30:00-04:00",
      "end": "2025-05-17T15:00:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 131,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Elastic Generics: Flexible Static Typing with TypeVarTuple and Unpack",
      "description": "<p>Since Python 3.5, generic tuples can be parameterized as either orderings of component types (e.g. <code>tuple[int, str]</code>) or unbound sequences of a single type (e.g. <code>tuple[float, ...]</code>). Yet sometimes we need both: for example, a <code>tuple</code> that starts with an <code>int</code> and a <code>str</code> and follows with zero or more <code>float</code>s might describe a row in a dataset that starts with identifiers and follows with a variable number of observations. While we might want to define a generic <code>Record</code> class that can be elastically parameterized in this manner, doing so was not practical until the introduction of <code>TypeVarTuple</code> and <code>Unpack</code> in Python 3.11.</p>\n<p>With <code>TypeVarTuple</code>, a generic <code>Record</code> class can be made concrete as <code>Record[int, str]</code>, <code>Record[int, str, float]</code>, or even <code>Record[int, str, *tuple[float, ...]]</code>: the same class can be parameterized as requiring two types, three types, or required <code>int</code> and <code>str</code> types followed by zero or more <code>float</code> types (as given with the <code>Unpack</code> notation <code>*tuple[float, ...]</code>).</p>\n<p>This presentation will introduce <code>TypeVarTuple</code> and <code>Unpack</code>. Starting with annotated <code>tuple</code> types, the flexible, expressive range of mixture between fixed and unbound types will be demonstrated with <code>mypy</code> validation. Next, a variadic generic class, <code>Record</code>, will demonstrate the benefits of such elastic typing.</p>\n<p>Finally, a compelling application of <code>TypeVarTuple</code> will be demonstrated. While DataFrames are widely used, only the StaticFrame library, leveraging <code>TypeVarTuple</code>, offers a comprehensively generic DataFrame. DataFrames have variable numbers of columns, each sometimes a different type; further, while DataFrames might have tens or hundreds of columns, it is common for such datasets to have a fixed number of heterogeneously typed columns followed by a variable number of uniformly typed columns. With <code>TypeVarTuple</code>, this type of flexible DataFrame typing is now possible.</p>",
      "authors": [
        "Christopher Ariza"
      ],
      "speakers": [
        {
          "id": 95,
          "name": "Christopher Ariza",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/95.png.256x256_q85.jpg",
          "bio": "<p>Christopher Ariza (www.flexatone.net) is Partner and Chief Technology Officer at Research Affiliates, a global leader in investment strategies and research. He is the creator and lead developer of StaticFrame, an alternative DataFrame library that offers immutable and statically-typeable DataFrames with runtime type and data validation.</p>\n<p>Having worked in Python for over 20 years, he has developed tools in a variety of domains, including algorithmic music composition and computer-aided musicology, and has spoken at numerous conferences, including PyCon USA, SciPy, PyData Global, PyData Los Angeles, and numerous other venues.</p>\n<p>Prior to joining Research Affiliates, he was Visiting Assistant Professor of Music at MIT, Assistant Editor at the Computer Music Journal, and Assistant Professor of Recording Arts and Music Technology at Towson University. He has a PhD and MA in music theory and composition from New York University, and a BA in music from Harvard University.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/83/",
      "cancelled": false
    },
    {
      "room": "Ballroom A",
      "rooms": [
        "Ballroom A"
      ],
      "start": "2025-05-16T14:45:00-04:00",
      "end": "2025-05-16T15:15:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 77,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Design Pressure: The Invisible Hand That Shapes Your Code",
      "description": "<p>Ever had this weird gut feeling that something is off in your code, but couldn't put the finger on <em>why</em>? Are you starting your projects with the best intentions, following all best practices, <em>and</em> still feel like your architecture turns weird eventually?</p>\n<p><strong>Maybe, it's not your fault</strong>! Maybe, the tools or methodology you're using are applying <strong>design pressure</strong> that you're not cognizant of, but that influences the shape of your code.</p>\n<p>The best way to prevent that is becoming aware of the forces at play. So, let's look at what design pressure is, look at the most prominent examples of good and bad, and explore how to leverage the former and quell the latter. Because you can only deal with something you know exists.</p>",
      "authors": [
        "Hynek Schlawack"
      ],
      "speakers": [
        {
          "id": 93,
          "name": "Hynek Schlawack",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/93.jpg.256x256_q85.jpg",
          "bio": "<p>Hynek Schlawack is a lead infrastructure and software engineer from Berlin/Germany, PSF fellow, blogger, YouTuber, and maintainer of <em>way</em> too many open source projects.</p>\n<p>His main areas of interest are networks, security, and robust software.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/81/",
      "cancelled": false
    },
    {
      "room": "Room 301-305",
      "rooms": [
        "Room 301-305"
      ],
      "start": "2025-05-16T14:45:00-04:00",
      "end": "2025-05-16T15:15:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 79,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Programming for Yourself",
      "description": "<p>The career benefits of learning programming have become increasingly obvious over time, but few people talk about another great super-power you get from learning to program: the ability to make things that solve <em>your own problems</em>.</p>\n<p>In this talk, I'll go through a few case studies from my own life wherein knowing how to program not only allowed me to solve problems for myself, but also allowed me to recognize that the problem I was having had a solution at all.</p>\n<p>Additionally, I'll talk about ways the approach to engineering changes (and doesn't change!) when programming bespoke applications for a small audience.</p>",
      "authors": [
        "Paul Ganssle"
      ],
      "speakers": [
        {
          "id": 91,
          "name": "Paul Ganssle",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/91.png.256x256_q85.jpg",
          "bio": "<p>Paul Ganssle is a software developer at Google and contributor to various open source projects. Among other projects, he is a core developer of the Python language and created the zoneinfo module.</p>\n<p>He lives in Somerville, MA with his wife and two children, where he spends most of his time training for a spot on a potential future Catfish Noodling Olympic team.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/79/",
      "cancelled": false
    },
    {
      "room": "Room 310/311",
      "rooms": [
        "Room 310/311"
      ],
      "start": "2025-05-16T14:45:00-04:00",
      "end": "2025-05-16T15:15:00-04:00",
      "duration": 30,
      "kind": "charla",
      "section": "talks",
      "conf_key": 80,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Construyendo un Buscador Multimodal: Combinando Texto e Imágenes para una Búsqueda Inteligente.",
      "description": "<p>En el mundo actual basado en datos, procesar y analizar eficientemente grandes volúmenes de datos es crucial para muchas aplicaciones. Exploremos juntos cómo crear y administrar embeddings de texto e imágenes para búsqueda de similitudes en una base de datos PostgreSQL. Nos sumergiremos en un ejemplo práctico utilizando Python para demostrar cómo pueden crear buscadores que empleen  lenguaje natural.</p>",
      "authors": [
        "Elizabeth Fuentes"
      ],
      "speakers": [
        {
          "id": 37,
          "name": "Elizabeth Fuentes",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/37.jpg.256x256_q85.jpg",
          "bio": "<p>As a Data Analytics and Machine Learning/Artificial Intelligence (ML/AI) Specialist, my mission is to break down complex concepts into easily understandable terms. I strive to develop innovative solutions that tackle real-world challenges effectively. By sharing my knowledge and experience through conferences and educational resources, I aim to empower developers in expanding their skill sets and achieving their professional goals.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/35/",
      "cancelled": false
    },
    {
      "room": "Hall C",
      "rooms": [
        "Hall C"
      ],
      "start": "2025-05-16T14:45:00-04:00",
      "end": "2025-05-16T15:15:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 76,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Tips and Tricks for JSON Web Tokens (JWTs)",
      "description": "<p>JSON Web Tokens (JWTs) are a neat tool useful in many contexts from simple demos to complicated multi-server architectures. The goal of the talk is to give developers a basic understanding of what JWTs are, why they are useful, and how to get started using them in python. JWTs can be as lightweight as a JWT library and a few decorators or as thorough as a full-fledged authentication architecture.</p>\n<p>When using public key encryption/signatures, validating the JWT does not need require maintaining state, secrets, passwords, or user databases. This makes JWTs a robust, efficient, and flexible tool for serverless applications, horizontal scaling (e.g., load balancing), microservices, and APIs.</p>\n<p>In this talk, I will provide an introduction to JWTs and provide a simple example of how they can be combined with decorators for easy and flexible authentication. The goal is to give developers unfamiliar with JWTs ideas on how and when to include them in their own applications.</p>",
      "authors": [
        "Emin Martinian"
      ],
      "speakers": [
        {
          "id": 104,
          "name": "Emin Martinian",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/104.jpg.256x256_q85.jpg",
          "bio": "<p>Emin Martinian has over 25 years of experience in technical research and development. He enjoys finding creative solutions to complex problems in software engineering, machine learning, data compression, prediction, optimization, health, and finance.</p>\n<p>He has over 10 patents granted and 30 peer reviewed publications based on research with Mitsubishi Electric Research Labs and MIT (where he earned a PhD in EE/CS). On the development side, Emin has built software and led teams at small start-ups such as OPC Technologies (acquired by MentorGraphics), ViveBenefits and others as well as larger companies such as Bain Capital and DCG.</p>\n<p>He is available for consulting through his company <a href=\"https://www.aocks.com/\">AOCKS LLC</a>.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/91/",
      "cancelled": false
    },
    {
      "room": "Ballroom BC",
      "rooms": [
        "Ballroom BC"
      ],
      "start": "2025-05-16T14:45:00-04:00",
      "end": "2025-05-16T15:15:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 78,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Inclusive Data for 1.3 Billion: Designing Accessible Visualizations",
      "description": "<p>According to the World Health Organization (WHO), an estimated 1.3 billion people (1 in 6 individuals) experience a disability, and nearly 2.2 billion people (1 in 5 individuals) have vision impairment. Improving the accessibility of visualizations will enable more people to participate in and engage with our data analyses.</p>\n<p>In this talk, we’ll discuss some principles and best practices for creating more accessible data visualizations. It will include tips for individuals who create visualizations, as well as guidelines for the developers of visualization software to help ensure your tools can help downstream designers and developers create more accessible visualizations.</p>\n<p>Specifically, we will cover:</p>\n<ul>\n<li>What makes data visualizations inaccessible? We will cover accessibility fundamentals like color contrast, alternative text descriptions, keyboard navigation support, screen reader compatibility, and more, with specific examples and demonstrations.</li>\n<li>Are Python data visualization tools accessible? We will teach how to analyze the visualization landscape and discuss how tool developers can begin and prioritize improvements. </li>\n<li>How accessible is my visualization? We will demonstrate how to conduct accessibility audits for data visualization tools by performing and documenting two accessibility evaluation tests live.</li>\n</ul>\n<p>This talk will use examples from our ongoing work to improve the accessibility of <a href=\"https://bokeh.org/\">Bokeh</a>, a Python library for creating interactive data visualizations for web browsers. We hope this talk enables you to take the first few steps in making your next data visualization and your visualization tools, more accessible.</p>",
      "authors": [
        "Pavithra Eswaramoorthy",
        "Frank Elavsky"
      ],
      "speakers": [
        {
          "id": 46,
          "name": "Pavithra Eswaramoorthy",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/46.jpg.256x256_q85.png",
          "bio": "<p>Pavithra Eswaramoorthy is a Developer Advocate at Quansight, where she works to improve the developer experience and community engagement for several open source projects in the PyData community. Currently, she maintains the Bokeh visualization library, and contributes to the Nebari (adjacent to the Jupyter community), and conda-store (part of the conda ecosystem).</p>\n<p>Pavithra has been involved in the open source community for over 5 years, notable as an emeritus contributor to the Dask library and Wikimedia Foundation projects. In her spare time, she enjoys a good book and hot coffee. :)</p>"
        },
        {
          "id": 47,
          "name": "Frank Elavsky",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/47.png.256x256_q85.png",
          "bio": "<p>Frank is a PhD student and researcher at the Human-Computer Interaction Institute at Carnegie Mellon University and a consultant whose past collaborations include Apple's Human-Centered Machine Learning research group, Adobe, Microsoft, Visa, Highcharts, and others. Frank's work lies at the intersection of interactive data visualization and accessibility, making analytical work more accessible for and alongside people with disabilities. His projects include Chartability, a framework for helping practitioners evaluate inaccessible visualizations and Data Navigator, a tool that helps creators make interactive visualizations more accessible for users of assistive technologies. He also advises the Accessible, Rich, Internet Applications (ARIA) standards working group as an invited expert in data visualization.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/43/",
      "cancelled": false
    },
    {
      "room": "Room 301-305",
      "rooms": [
        "Room 301-305"
      ],
      "start": "2025-05-17T15:15:00-04:00",
      "end": "2025-05-17T15:45:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 136,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Notes, Groups and Stars: exceptional new features of Python 3.11!",
      "description": "<p>Notes, Groups, and Stars aren't just for concerts - they're also <em>exception</em>-ally useful features for error handling, new in Python 3.11!</p>\n<p>In this talk, we'll explore a neglected corner of Python: exceptions and error handling!  What would we like Python to do for us, when our programs do something we didn't expect?  How can we help other programmers understand failures in our code?  </p>\n<p>We'll take a broad view, starting from fundamentals like exceptions vs return values, before zooming through a history of tracebacks and chaining, and arriving at the glorious present with <code>.add_note()</code>, <code>ExceptionGroup</code>, and <code>except*</code>.  You'll leave not just educated but enthused and excited - but perhaps even a ten-<code>ex</code> except-star developer!</p>",
      "authors": [
        "Zac Hatfield-Dodds"
      ],
      "speakers": [
        {
          "id": 109,
          "name": "Zac Hatfield-Dodds",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/109.jpg.256x256_q85.jpg",
          "bio": "<p>I'm a member of technical staff at Anthropic; and in my spare time I maintain OSS libraries, read books, hike, and enjoy dark chocolate!  You can read more about me at https://zhd.dev/.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/96/",
      "cancelled": false
    },
    {
      "room": "Room 310/311",
      "rooms": [
        "Room 310/311"
      ],
      "start": "2025-05-17T15:15:00-04:00",
      "end": "2025-05-17T15:45:00-04:00",
      "duration": 30,
      "kind": "charla",
      "section": "talks",
      "conf_key": 137,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Transformando Gafas en Asistentes Inteligentes: Open Source Vision Language Models",
      "description": "<p>En esta charla, aprenderemos cómo transformar unas gafas comunes en un Asistente Inteligente por menos de 30 dólares, utilizando hardware accesible y modelos Open Source. Aprovecharemos los Vision Language Models (VLM), una tecnología que integra visión por computadora y procesamiento del lenguaje natural para crear inteligencia artificial multimodal, capaz de analizar imágenes y texto simultáneamente y generar respuestas en lenguaje natural.</p>\n<p>Exploraremos el origen y desarrollo de los Open VLMs, analizando su impacto, evolución y el enorme potencial que representan. Profundizaremos en su arquitectura, componentes esenciales y aplicaciones prácticas. Los asistentes aprenderán a crear sus propias gafas inteligentes, conociendo los requisitos técnicos necesarios, y podrán interactuar con varios prototipos funcionales disponibles durante la charla. Esto les permitirá probar las gafas en tiempo real y experimentar de primera mano como estos modelos responden y se adaptan a diversos escenarios. Además, se ofrecerá una guía práctica para configurar los modelos, realizar inferencias en sus computadoras y optimizarlos para funcionar con menos de 3 GB de memoria, haciendo esta tecnología más accesible y replicable para todos.</p>\n<p>Finalmente, exploraremos los desafíos actuales en la implementación de estos sistemas, incluyendo la optimización del uso de memoria y el desarrollo de técnicas de cuantización más eficientes. A partir de este análisis, reflexionaremos sobre el futuro de estas tecnologías en aplicaciones de inteligencia artificial, subrayando el papel clave de la colaboración en la comunidad Open Source. Concluiremos destacando el potencial transformador de estos dispositivos y su capacidad para redefinir nuestra interacción con el entorno en la vida cotidiana.</p>",
      "authors": [
        "Alejandro Núñez Arroyo"
      ],
      "speakers": [
        {
          "id": 13,
          "name": "Alejandro Núñez Arroyo",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/13.jpg.256x256_q85.jpg",
          "bio": "<p>Alejandro Núñez Arroyo es Ingeniero Mecatrónico con más de tres años de experiencia en la ejecución de proyectos basados en inteligencia artificial. Actualmente, se desempeña como Investigador en Inteligencia Artificial en Fogsphere, una empresa con sede en el Reino Unido, donde se especializa en modelos multimodales.</p>\n<p>Su trayectoria incluye proyectos en visión por computadora y modelos de lenguaje. Como líder activo en la comunidad tecnológica, Alejandro es organizador del Google Developers Group Sucre, donde coordina eventos enfocados en inteligencia artificial. </p>\n<p>Participó en la primera hackathon de inteligencia artificial en Latinoamérica organizada por OpenAI en Chile, así como en varias ediciones de la hackathon de LLAMA de Facebook. Apasionado por la robótica, ha representado a Bolivia en prestigiosas competencias internacionales como el FIRST Global Challenge en Washington, D.C. y Atenas, y el NASA Human Exploration Rover Challenge en Huntsville.</p>\n<p>Actualmente, comparte su conocimiento en inteligencia artificial a través de blogs en Medium, videos educativos en YouTube, y mediante charlas y talleres en comunidades locales e internacionales en Bolivia, Perú, Guatemala y Colombia. Su trabajo refleja un compromiso constante con la difusión tecnológica y la formación de nuevos talentos en el campo de la inteligencia artificial.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/11/",
      "cancelled": false
    },
    {
      "room": "Ballroom A",
      "rooms": [
        "Ballroom A"
      ],
      "start": "2025-05-17T15:15:00-04:00",
      "end": "2025-05-17T15:45:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 134,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Attestations: new generation of signatures on PyPI",
      "description": "<p>End-to-end signing and verification is one of the hardest technical and social challenges in open source packaging: it rests at the fault lines of error- and misuse-prone cryptography, long-term secret management, and identity/trust bootstrapping. These challenges have stymied past attempts to do large-scale end-user signing in the Python ecosystem, including PyPI's former (now disabled) support for PGP signature uploads.</p>\n<p>Over the past year, PyPI has designed, developed, and deployed a new approach to package signing, one that aims to break the iron triangle of end-user signing: digital attestations, as standardized in PEP 740.</p>\n<p>This talk will cover the architectural details of attestations, how attestations were implemented on PyPI and on the client (uploading side), their security properties (including transparency) and advantages, as well as how PyPI was able to enable <strong>signing by default</strong> for a large swath of the ecosystem without requiring maintainers to change anything about their packaging processes. The talk will also cover the <em>future</em> of attestations, including pieces of the puzzle that are currently missing (like large-scale <em>verification</em> of attestations by parties other than PyPI itself).</p>\n<p>The audience is expected to have an intermediate familiarity with Python packaging, including PyPI. No specific familiarity with cryptography is required. Audience members will leave the talk with an improved understanding of the challenges latent in end-user signing, how PEP 740's design and PyPI's implementation overcome those challenges, and how they can both produce and consume attestations today.</p>",
      "authors": [
        "William Woodruff"
      ],
      "speakers": [
        {
          "id": 88,
          "name": "William Woodruff",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/88.jpg.256x256_q85.jpg",
          "bio": "<p>William Woodruff is an Engineering Director at Trail of Bits, a NYC-based consultancy. He splits his time between OSS engineering and running the Ecosystem Security group, which is responsible for contributing security and usability improvements to a wide range of OSS tools and services (PyPI, Homebrew, pip-audit, Sigstore, LLVM, PyCA Cryptography, etc.). Outside of work, William is a member of Homebrew and contributes to a variety of OSS projects. He blogs at <a href=\"https://blog.yossarian.net\">https://blog.yossarian.net</a>.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/76/",
      "cancelled": false
    },
    {
      "room": "Hall B",
      "rooms": [
        "Hall B"
      ],
      "start": "2025-05-18T15:15:00-04:00",
      "end": "2025-05-18T16:00:00-04:00",
      "duration": 45,
      "kind": "plenary",
      "section": "talks",
      "conf_key": 168,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Keynote - Dr. Kali L. Jordan",
      "description": "<p><a href=\"/2025/about/keynote-speakers#dr-kari-l-jordan\">Dr. Kali L. Jordan</a>\n<br><span style=\"font-size: smaller; font-weight: normal;\">Keynote</span></p>"
    },
    {
      "room": "Ballroom BC",
      "rooms": [
        "Ballroom BC"
      ],
      "start": "2025-05-17T15:15:00-04:00",
      "end": "2025-05-17T15:45:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 135,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Why `len('😶‍🌫️') == 4` and other weird things you should know about strings in Python",
      "description": "<p>Strings in Python behave in all sorts of unexpected ways: <code>len('😶‍🌫️') == 4</code>, <code>'ñ' != 'ñ'</code>, <code>'‮dlrow olleh‬'‬.split()[1] == 'olleh‬'</code>! How is this possible? And importantly, why should you care?</p>\n<p>In this presentation, we’ll give a brief introduction to text encoding, the different Unicode standards and how Python encodes strings before we dive deep into Unicode oddities. We’ll cover how one code point can represent multiple characters, why converting between upper-case and lower-case characters should be locale-dependent and how emoji’s work. Finally, we will discuss some best practices for handling unicode input in Python.</p>\n<p>After this talk, you'll have a better understanding of strings in Python, the Unicode character encoding and you’ll be aware of some common pitfalls and how to avoid them.</p>",
      "authors": [
        "Marie Roald",
        "Yngve Mardal Moe"
      ],
      "speakers": [
        {
          "id": 29,
          "name": "Marie Roald",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/29.png.256x256_q85.jpg",
          "bio": "<p>Marie Roald is a researcher, data scientist and educator. For the past years, she has developed and taught programming courses with the goal of empowering teachers to apply programming in their classrooms and has taught courses both digitally and physically at major cities all across Norway. Marie also has experience with academic conferences and science communication.</p>"
        },
        {
          "id": 30,
          "name": "Yngve Mardal Moe",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/30.jpg.256x256_q85.jpg",
          "bio": "<p>Yngve is an experienced Python educator, Python developer open source enthusiast. He is a co-creator of TurtleThread and has taught Python to professionals, university students and academics. He is currently tech lead working on safely automating the Norwegian power grid. While working at the Norwegian University of Life Sciences, Yngve headed a project transforming introduction to Python into a tutorial-based course focusing on active learning.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/27/",
      "cancelled": false
    },
    {
      "room": "Hall C",
      "rooms": [
        "Hall C"
      ],
      "start": "2025-05-17T15:15:00-04:00",
      "end": "2025-05-17T15:45:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 133,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "A new safe external debugger interface for CPython",
      "description": "<p>Have you ever needed to debug a Python application in production without stopping it? While tools like GDB make this straightforward for C/C++, Python developers face unique challenges when attaching debuggers to live processes. This talk introduces PEP 768, a new proposal for Python 3.14 that adds a safe, zero-overhead debugging interface to CPython.</p>\n<p>We'll explore how the current landscape forces debugging tools to use unsafe methods that can crash interpreters and corrupt memory. Then, we'll detail how PEP 768 solves these problems by introducing a cooperative debugging protocol that works with the interpreter rather than against it.</p>\n<p>You'll learn why attaching debuggers to Python processes is uniquely challenging, how PEP 768 enables safe debugging through interpreter cooperation, the technical details of the zero-overhead implementation, real-world applications, including live process attachment for pdb and all about the security considerations and safeguards.</p>\n<p>This talk will be particularly valuable for tool developers, system administrators, and anyone interested in Python internals or debugging techniques. You'll walk away understanding the challenges of live process debugging and how PEP 768 elegantly solves them.</p>",
      "authors": [
        "Pablo Galindo Salgado"
      ],
      "speakers": [
        {
          "id": 151,
          "name": "Pablo Galindo Salgado",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/151.jpg.256x256_q85.jpg",
          "bio": "<p>-</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/134/",
      "cancelled": false
    },
    {
      "room": "Room 315",
      "rooms": [
        "Room 315"
      ],
      "start": "2025-05-15T15:30:00-04:00",
      "end": "2025-05-15T16:30:00-04:00",
      "duration": 60,
      "kind": "sponsor-workshop",
      "section": "sponsor-presentations",
      "conf_key": 43,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Building Scalable AI Tool Servers with Model Context Protocol (MCP) and Heroku (Sponsor: Heroku)",
      "description": "<p>Large Language Models (LLMs) become vastly more powerful when given the ability to call external tools to gather information and take real-world actions - such as querying APIs, modifying databases, or kicking off workflows. This talk explores how to build and scale these tool servers using Python and the Model Context Protocol (MCP).</p>\n<p>MCP is an open-source protocol that provides a standardized request format and response structure for LLMs interacting with external tools, ensuring consistency while allowing flexible execution under the hood. We’ll walk through implementing an MCP-compliant tool server in Python, covering topics like transport types, the connection lifecycle, and best practices.</p>\n<p>LLM tool servers must handle increasing traffic efficiently, requiring strategies for load balancing, container orchestration, and cloud deployment. We’ll discuss scaling Python services horizontally using load balancing and container orchestration. This includes practical considerations for deploying on 12-Factor App platforms like Heroku.</p>\n<p>Through live coding, we’ll implement, deploy, and scale an MCP-compliant tool server using Python. We’ll also demonstrate how an LLM can interact with MCP tool servers, enabling you to build powerful, API-driven AI agents.</p>\n<p>Attendees will gain hands-on knowledge of building, deploying, and scaling Python-based MCP tool servers and AI agents, made simple with Heroku’s streamlined deployment process.</p>",
      "authors": [
        "Ken Alger"
      ],
      "speakers": [
        {
          "id": 3,
          "name": "Ken Alger",
          "photo": null,
          "bio": "<p>-</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/3/",
      "cancelled": false
    },
    {
      "room": "Room 310/311",
      "rooms": [
        "Room 310/311"
      ],
      "start": "2025-05-16T15:30:00-04:00",
      "end": "2025-05-16T16:00:00-04:00",
      "duration": 30,
      "kind": "charla",
      "section": "talks",
      "conf_key": 85,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Descifrando emociones desde arte a memes: un sistema multimodal de imágenes y textos",
      "description": "<p>El mundo que nos rodea está lleno de información de muchos tipos, y aunque muchas personas nos comunicamos de manera verbal para transmitir información muchas veces perdemos información del contexto o la intención si no va acompañado de imágenes. Lo mismo ocurre con los modelos cuando intentamos solucionar problemas muy complejos con modelos que solo pueden contener información de un tipo específico. </p>\n<p>Por ese motivo es necesario soluciones que puedan integrar diferentes tipos de datos, como imágenes, texto, video o audio: los modelos multimodales. Estos sistemas combinan múltiples entradas de tipos de datos y hacen los sistemas más robustos, ayudando en áreas de la salud, seguridad, criminología, comercial, etc.</p>\n<p>El objetivo de esta charla es mostrar cómo crear un sistema que sea capaz de identificar emociones de diverso tipo de imágenes, y en paralelo extraer emociones de textos con ese resultado (con diferentes modelos) y asociar textos a las imágenes con los textos extraídos.</p>\n<p>En esta charla, los asistentes aprenderán paso a paso cómo implementar un sistema multimodal que incluya imágenes y texto, con datos de libre acceso, y entender cómo los multimodales son una buena opción para solventar problemas complejos. Además, se compartirá el rol de Python del proceso, la aplicación de módulos externos para tener una implementación simple, para facilitar el realizar el proceso de multimodal.</p>",
      "authors": [
        "Maria Jose Molina Contreras"
      ],
      "speakers": [
        {
          "id": 43,
          "name": "Maria Jose Molina Contreras",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/43.jpg.256x256_q85.jpg",
          "bio": "<p>TBD</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/41/",
      "cancelled": false
    },
    {
      "room": "Room 308",
      "rooms": [
        "Room 308"
      ],
      "start": "2025-05-15T15:30:00-04:00",
      "end": "2025-05-15T16:30:00-04:00",
      "duration": 60,
      "kind": "sponsor-workshop",
      "section": "sponsor-presentations",
      "conf_key": 41,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Slot",
      "description": ""
    },
    {
      "room": "Room 316",
      "rooms": [
        "Room 316"
      ],
      "start": "2025-05-15T15:30:00-04:00",
      "end": "2025-05-15T16:30:00-04:00",
      "duration": 60,
      "kind": "sponsor-workshop",
      "section": "sponsor-presentations",
      "conf_key": 44,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Slot",
      "description": ""
    },
    {
      "room": "Ballroom A",
      "rooms": [
        "Ballroom A"
      ],
      "start": "2025-05-16T15:30:00-04:00",
      "end": "2025-05-16T16:00:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 82,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Python: The Architect's Secret Weapon",
      "description": "<p>The built environment is undergoing a digital revolution, and Python is at the forefront. This talk will explore how Python, combined with open-source tools like Blender, OpenUSD, and Dynamo, is transforming the way we design, analyze, and construct buildings.</p>\n<p>We'll delve into practical applications, from generating 3D models to performing energy simulations and creating stunning visualizations. You'll learn how to harness the power of Python to address pressing challenges in the construction industry, such as climate change, resource scarcity, and urban development.</p>\n<p>So if you're interested in how Python can shape the built environment then come and see for yourself!</p>\n<p>Key Takeaways:</p>\n<ul>\n<li>Understand the role of Python in the Architecture and Construction industry.</li>\n<li>Learn how professionals use Python to automate design and analysis tasks.</li>\n<li>Explore the potential of open-source tools like Blender, OpenUSD, and Dynamo.</li>\n<li>Discover how Python is used to create stunning visualizations and simulations of buildings.</li>\n<li>Gain insights into the future of digital design and construction.</li>\n</ul>",
      "authors": [
        "Tadeh Hakopian"
      ],
      "speakers": [
        {
          "id": 99,
          "name": "Tadeh Hakopian",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/99.jpg.256x256_q85.jpg",
          "bio": "<p>With a background in Architecture and Development Tadeh has supported building large scale projects with diverse teams for over 10 years. By promoting open dialogue, systems thinking, and long term planning he has improved operational efficiencies in all his endeavors. He is a course author, trainer, and open source contributor as well as a speaker at national conferences in technology, architecture, design. He loves to talk about the new possibilities with technology and innovation at everyone’s disposal while building communities along the way.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/87/",
      "cancelled": false
    },
    {
      "room": "Room 309",
      "rooms": [
        "Room 309"
      ],
      "start": "2025-05-15T15:30:00-04:00",
      "end": "2025-05-15T16:30:00-04:00",
      "duration": 60,
      "kind": "sponsor-workshop",
      "section": "sponsor-presentations",
      "conf_key": 42,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Slot",
      "description": ""
    },
    {
      "room": "Ballroom BC",
      "rooms": [
        "Ballroom BC"
      ],
      "start": "2025-05-16T15:30:00-04:00",
      "end": "2025-05-16T16:00:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 83,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Beautiful and Balanced: Using Color Theory in Data Visualization",
      "description": "<p>You have just made the most aesthetically pleasing pie chart in the history of data viz - but has your color palette inadvertently introduced a bias to the data you're presenting? </p>\n<p>Our brains interpret color contextually: proximity to other colors changes the way we perceive a particular color, making it appear darker or lighter, more prominent or more demure. When presenting data visually,  it's important to choose color palettes which do not skew the viewer's perception of the data relationships you're illustrating. </p>\n<p>In this talk, we'll take a peek at some basic color theory based on the work of Josef Albers, look at what color weight is, and how you can use it to evaluate your palette choices. We'll learn why those gorgeous palettes created by graphic designers may not be the best choices for your data visualizations, and present some strategies for choosing color palettes that keep your data presentation both unbiased and visually pleasing.</p>\n<p>This is a tool-agnostic talk: you can apply these techniques with any data visualization package or tool which allows you to specify a color palette.</p>",
      "authors": [
        "Laura Fisher"
      ],
      "speakers": [
        {
          "id": 54,
          "name": "Laura Fisher",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/54.jpeg.256x256_q85.jpg",
          "bio": "<p>I'm an artist and designer, living and working in downtown Los Angeles. I create work in traditional media like oil paint, and in modern media like code. I am learning data visualization as a fun way to use both these skill sets simultaneously.</p>\n<p>Computational artwork: https://gitlab.com/mitten-la/py5-sketches\nTraditional artwork: https://laurafisher.art</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/71/",
      "cancelled": false
    },
    {
      "room": "Hall C",
      "rooms": [
        "Hall C"
      ],
      "start": "2025-05-16T15:30:00-04:00",
      "end": "2025-05-16T16:00:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 81,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "From Desktop to Browser: Crafting Browser-Native Game Engine with Webassembly",
      "description": "<p>Have you ever wondered how to turn your Python games into lightning-fast web experiences without compromising speed? In this session, overcome the browser barrier and learn how to create powerful game engines that smoothly connect desktop and web platforms using Pygame, pygbag, and WebAssembly.</p>\n<p>Starting with familiar Pygame foundations, discover how pygbag transforms Python games into browser-ready experiences. Learn techniques for managing state, particle effects, and physics computations with near-native performance. Through live demonstrations, explore practical strategies for optimizing rendering and maintaining smooth gameplay across different environments.</p>\n<p>By the end of the talk, learn how to create WebAssembly-powered games that function flawlessly on any platform without sacrificing user experience, and understand the architectural patterns that enable high-performance browser-based game engines.</p>",
      "authors": [
        "Neeraj Pandey"
      ],
      "speakers": [
        {
          "id": 11,
          "name": "Neeraj Pandey",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/11.JPG.256x256_q85.jpg",
          "bio": "<p>Neeraj is a polyglot developer passionate about bridging different technologies. Over the years, he has worked on a variety of full-stack software and data-science applications, computational arts, and quantitative finance projects, embracing the challenge of creating innovative tools and applications. As an active Python community member, he has shared his expertise through talks and workshops at numerous conferences and meet-ups.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/29/",
      "cancelled": false
    },
    {
      "room": "Room 301-305",
      "rooms": [
        "Room 301-305"
      ],
      "start": "2025-05-16T15:30:00-04:00",
      "end": "2025-05-16T16:00:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 84,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Python for IoT: Bridging the Physical and Digital Worlds",
      "description": "<p>The Internet of Things (IoT) is revolutionizing technology, enabling everyday objects to connect, communicate, and become “smart.” From wearable devices and smart homes to industrial automation and smart cities, IoT is reshaping how we live, work, and interact with our environment.\nIn the session,I will explore the pivotal role of Python in driving the IoT revolution. With its simplicity, versatility, and powerful library ecosystem, Python is a go-to language for developers building IoT solutions.\n Modules to cover include:\n1.Why Python for IoT?\n2.Applications of Python in IoT:\n3.Key Libraries and Frameworks:\n4.Building a Python IoT Ecosystem:</p>",
      "authors": [
        "job mbugua"
      ],
      "speakers": [
        {
          "id": 120,
          "name": "job mbugua",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/120.JPG.256x256_q85.jpg",
          "bio": "<p>I am an IoT Research Engineer and Technical Lead at the African Advanced Level Telecommunications Institute (AFRALTI), where I specialize in implementing and researching IoT solutions to address real-world challenges. My work spans designing smart systems, integrating LoRaWAN networks, and building end-to-end IoT ecosystems using Python and open-source technologies.</p>\n<p>I am passionate about leveraging technology to create impactful solutions in agriculture, energy, and smart cities. My background includes extensive experience with Python, embedded systems, and cloud integration. Beyond my professional role, I actively mentor and collaborate with others to drive innovation in IoT, focusing on creating accessible and scalable solutions for a better-connected world.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/105/",
      "cancelled": false
    },
    {
      "room": "Hall C, Ballroom A, Ballroom BC, Room 301-305, Room 310/311",
      "rooms": [
        "Hall C",
        "Ballroom A",
        "Ballroom BC",
        "Room 301-305",
        "Room 310/311"
      ],
      "start": "2025-05-17T15:45:00-04:00",
      "end": "2025-05-17T16:15:00-04:00",
      "duration": 30,
      "kind": "break",
      "section": "talks",
      "conf_key": 138,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Break",
      "description": "<p>Break</p>"
    },
    {
      "room": "Hall B",
      "rooms": [
        "Hall B"
      ],
      "start": "2025-05-18T16:00:00-04:00",
      "end": "2025-05-18T16:35:00-04:00",
      "duration": 35,
      "kind": "plenary",
      "section": "talks",
      "conf_key": 169,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "[Steering Council Panel](/2025/about/keynote-speakers#python-steering-council)",
      "description": "<p><a href=\"/2025/about/keynote-speakers#python-steering-council\">Steering Council Panel</a></p>"
    },
    {
      "room": "Hall C, Ballroom A, Ballroom BC, Room 301-305, Room 310/311",
      "rooms": [
        "Hall C",
        "Ballroom A",
        "Ballroom BC",
        "Room 301-305",
        "Room 310/311"
      ],
      "start": "2025-05-16T16:00:00-04:00",
      "end": "2025-05-16T16:30:00-04:00",
      "duration": 30,
      "kind": "break",
      "section": "talks",
      "conf_key": 86,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Break",
      "description": "<p>Break</p>"
    },
    {
      "room": "Ballroom BC",
      "rooms": [
        "Ballroom BC"
      ],
      "start": "2025-05-17T16:15:00-04:00",
      "end": "2025-05-17T16:45:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 141,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "AI-Powered Python Testing: Building Multi-Agent Systems for Smarter Automation",
      "description": "<p>Dive into the future of software testing with AI-driven QA systems using Multi-Agent Retrieval-Augmented Generation (RAG). This session will demonstrate how to design and implement multi-agent systems that collaborate to automate UI testing, identify bugs, and adapt dynamically to application updates.</p>\n<p>We’ll explore step-by-step methods for:</p>\n<p>1)Integrating RAG techniques to retrieve and utilize relevant data for adaptive testing.\n2)Building Python-based pipelines using libraries like PyTest, Selenium, and LangChain for seamless automation.\n3)Automating bug detection with enhanced accuracy using machine learning models.\n4)Optimizing test coverage with agents that learn and adapt to application changes.</p>\n<p>This presentation is perfect for Python developers, QA testers, and engineers seeking practical approaches to enhance their testing workflows, reduce manual intervention, and ensure robust application performance in evolving software environments.</p>",
      "authors": [
        "Sneha Mavuri"
      ],
      "speakers": [
        {
          "id": 60,
          "name": "Sneha Mavuri",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/60.jpg.256x256_q85.jpg",
          "bio": "<p>My name is Sneha and I am a software engineer at CloudDefense.AI, a company specializing in AI-powered solutions for cloud security. With over 2 years of experience in software engineering, I have worked on projects involving real-time threat detection, automation of remediation, and deep visibility across multi-cloud environments. Previously, I  worked at Morgan Stanley , where I contributed to building robust testing frameworks and developing both web and mobile applications.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/52/",
      "cancelled": false
    },
    {
      "room": "Ballroom A",
      "rooms": [
        "Ballroom A"
      ],
      "start": "2025-05-17T16:15:00-04:00",
      "end": "2025-05-17T16:45:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 140,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Living In A Passwordless World",
      "description": "<p>Since the era of the 4G internet, we witness a <strong>rapid growth</strong> in the digital world. Putting billions of peopleSince the rise of 4G internet, billions of people have joined the digital space. It's changing the way we connect, work, and live. But as the online world grows The risks also increase. Passwords, which are now standard security It will <strong>no longer be enough to keep our data safe</strong> from ever-evolving threats.  </p>\n<p>We are moving towards a <strong>future</strong> where passwords will be a thing of the past. Together we will explore exciting options such as magic links via email, fingerprints, facial recognition, biometric scanning, passkeys... Behavioral biometrics And smarter systems like <strong>FIDO2</strong> technology can also imagine logging in using brainwave patterns—a vision of the future of secure login.  </p>\n<p>Together let's reveal how these <strong>modern methods</strong> not only <strong>enhance safety</strong>, but also enhance security. But how to create a smoother and more convenient user experience? Developers, security experts And tech enthusiasts can use these tools to design a safer, smarter digital space. </p>\n<p>Switching to <strong>passwordless authentication</strong> isn't just a matter of convenience. It is a necessary leap forward in a rapidly evolving digital world. Let's step into this future together and explore how we can create a safer and easier online experience for everyone.</p>",
      "authors": [
        "Steve Yonkeu"
      ],
      "speakers": [
        {
          "id": 110,
          "name": "Steve Yonkeu",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/110.jpg.256x256_q85.jpg",
          "bio": "<p><strong>Steve Yonkeu</strong> is a backend software engineer dedicated to delivering excellence in architecture, performance, and security. For over 7 years he has been leading teams and projects and open source communities worldwide. Steve is also the founder of Django Cameroon and Python Cameroon communities and today.  He is also an organizer at PyCon Africa and active member of the Django Software Foundation and a lead at the Black Python Devs.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/97/",
      "cancelled": false
    },
    {
      "room": "Hall C",
      "rooms": [
        "Hall C"
      ],
      "start": "2025-05-17T16:15:00-04:00",
      "end": "2025-05-17T16:45:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 139,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "The chaotic locals() and how we fixed it",
      "description": "<p>Historically, Python stored local variables in a dict, which was convenient and consistent. Users can use locals() to get the same dict Python is using for the local variables. As Python evolves, local variables were moved to the frame stack to improve performance, which made it invisible from Python code. However, locals() was kept because we still need a way to access some or all of the local variables in a frame.</p>\n<p>This became chaotic when we try to change the local variables through the dict - which is a common requirement for something like a debugger. What could possibly go wrong? Is the update remembered? Could it work with <code>exec()</code>? Will a random read in your code bites you? How can we reliably update the value of a local variable in a debugger?</p>\n<p>Well the short answer is - we can't, not until PEP 667.</p>\n<p>This talk will be about how we fixed the chaos in PEP 667 and what's the modern way to deal with local variables in a debugger.</p>",
      "authors": [
        "Tian Gao"
      ],
      "speakers": [
        {
          "id": 67,
          "name": "Tian Gao",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/67.jpg.256x256_q85.jpg",
          "bio": "<p>Senior Software Engineer at Microsoft AI Frameworks team\nPython Core Dev, maintainer of pdb</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/57/",
      "cancelled": false
    },
    {
      "room": "Room 301-305",
      "rooms": [
        "Room 301-305"
      ],
      "start": "2025-05-17T16:15:00-04:00",
      "end": "2025-05-17T16:45:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 142,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "What they don't tell you about building a JIT compiler for CPython",
      "description": "<p>Despite their reputation, just-in-time compilers are not magic “go faster” machines. Developing and maintaining any sort of optimizing compiler for even a single platform, let alone all of Python’s most popular supported platforms, is an incredibly complicated, expensive task.</p>\n<p>However, <a href=\"https://www.youtube.com/watch?v=kMO3Ju0QCDo\">figuring out how to compile Python code down to machine code</a> is just the beginning. Most talks and other resources about JITs offer an interesting introduction to the general approaches used, but gloss over the most interesting technical issues that need to be solved in order to actually \"ship\" these performance gains in practice.</p>\n<p>As one of the engineers working on Microsoft's ambitious \"Faster CPython\" project, I'll introduce some of the challenges that we've encountered over the past year in our quest to make <em>your</em> code faster. Along the way, we'll learn how JITs decide what code to compile, how they compile this code in-process in a safe and secure way, and the debugging and profiling requirements that users have come to expect from native code.</p>",
      "authors": [
        "Brandt Bucher"
      ],
      "speakers": [
        {
          "id": 6,
          "name": "Brandt Bucher",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/6.jpg.256x256_q85.jpg",
          "bio": "<p>Brandt is a Python core developer working at Microsoft on a team tasked with improving the speed of the CPython interpreter.</p>\n<p>He has officially been involved in CPython development for over five years now, and has improved its performance, stability, and expressiveness in a variety of ways. In addition to his ongoing contributions as part of the \"Faster CPython\" project in the 3.11-3.14 release cycles, he also helped design and lead the implementation of structural pattern matching, a major new feature of Python 3.10.</p>\n<p>When he’s not pushing new commits on GitHub as <a href=\"https://github.com/brandtbucher\">@brandtbucher</a>, he spends most of his free time at coffee shops, sipping espresso and reading nonfiction.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/5/",
      "cancelled": false
    },
    {
      "room": "Room 310/311",
      "rooms": [
        "Room 310/311"
      ],
      "start": "2025-05-17T16:15:00-04:00",
      "end": "2025-05-17T16:45:00-04:00",
      "duration": 30,
      "kind": "charla",
      "section": "talks",
      "conf_key": 143,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Transformando la atención médica: RPA al servicio de pacientes y médicos.",
      "description": "<p>En el ámbito de la salud, cada minuto cuenta. Cuando llegamos a una consulta o enfrentamos una emergencia médica, lo último que esperamos es ser detenidos por barreras administrativas. Sé lo frustrante que es estar en una situación donde lo único que se desea es atención inmediata, pero en cambio, nos encontramos atrapados en largos procesos administrativos. En esta charla, exploraremos cómo la Automatización Robótica de Procesos (RPA) puede ser la clave para transformar estas experiencias, devolviendo tiempo a los pacientes, reduciendo el estrés y mejorando la calidad de atención en hospitales. \nAl reducir hasta un 80% de las tareas repetitivas y administrativas, médicos y personal de la salud pueden concentrarse en lo realmente importante, la atención al paciente.</p>",
      "authors": [
        "Nadia Ayala Hernández"
      ],
      "speakers": [
        {
          "id": 35,
          "name": "Nadia Ayala Hernández",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/35.png.256x256_q85.png",
          "bio": "<p>Nadia Ayala Hernández es una apasionada de la tecnología especializada en desarrollo de software, Robotic Process Automation (RPA), Optical Character Recognition (OCR) y soluciones en la nube. Colabora estrechamente con equipos multidisciplinarios para implementar soluciones robustas que impulsen la transformación digital.\nSu enfoque va más allá de la tecnología. Nadia cree firmemente en el poder de la tecnología para empoderar a las personas, permitiéndoles dedicar su tiempo a actividades de alto valor estratégico. Este compromiso con la mejora de vida a través de soluciones a la medida se refleja en cada proyecto que lidera, donde prioriza tanto el impacto humano como el organizacional.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/33/",
      "cancelled": false
    },
    {
      "room": "Ballroom A",
      "rooms": [
        "Ballroom A"
      ],
      "start": "2025-05-16T16:30:00-04:00",
      "end": "2025-05-16T17:00:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 88,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Detecting Honeybee Swarms Using the Integration of OpenCV, Pandas, AI, and PyTorch",
      "description": "<p>Honeybees will swarm during times of increased pollen and nectar flow, effectively dividing the hive in half. This can result in the complete loss of both halves of the hive for the beekeeper.  In this talk, I will show how I used a Raspberry Pi, mounted on a hive and powered by solar panels, to take a still image of a hive entrance every 30 seconds and filtered using OpenCV. Each image was sent off in real-time to Marvin.AI for analysis to obtain a count of the number of bees at the hive entrance.  A subsequent refinement has removed the need for AI analysis using an object detection model implemented in PyTorch using large scale datasets from iNaturalist to create a deep learning model which I plan to implement this Spring.  The counts were stored in an offsite database and then aggregated into a Pandas dataset and subjected to a rolling window analysis.  It was postulated that such an analysis would prove necessary to distinguish between swarming and “bearding” which is when many bees exit the hive and congregate at the entrance during very warm periods to ventilate it.  While the bees were “uncooperative” this season and did not swarm, test data show that a beekeeper could be notified of a swarm event within 10 minutes of its occurrence, thus saving both hives.\nAttendees will learn : \n(1) The use of “maker” techniques in setting up and integrating solar power, Raspberry Pi systems and cameras as well as effectively running python on the systems and setting up remote access.\n(2) How to implement the setup and use of PyTorch data object models and how they relate to AI analysis\n(3) How to use NumPy and Pandas for biological system analysis\n(4) And maybe a little apiculture!</p>",
      "authors": [
        "Michael Dahlberg"
      ],
      "speakers": [
        {
          "id": 22,
          "name": "Michael Dahlberg",
          "photo": null,
          "bio": "<p>Mike has been a Linux Systems Administrator for the past 25 years and has written code in some form for that same length of time, however, he has only worked with Python for the past 2-3 years.  He currently works at the Pennsylvania State University.  He has been an avid beekeeper for the past 11 years.  While his work with bees out in the apiary and his projects in Python keep him sane, for some reason, he keeps making the same mistakes year after year!</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/20/",
      "cancelled": false
    },
    {
      "room": "Ballroom BC",
      "rooms": [
        "Ballroom BC"
      ],
      "start": "2025-05-16T16:30:00-04:00",
      "end": "2025-05-16T17:00:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 89,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Who Tests the Testers? Making and Testing Pipelines",
      "description": "<p>You likely have a good pipeline that either runs tests, lints, or deployments for your project.</p>\n<p>But when it comes to changing that pipeline, how sure are you that it works before taking those changes live?</p>\n<hr />\n<p>In this talk, we'll explore why it doesn't have to be the case that \"there's no devops for devops\".</p>\n<p>We'll give a quick run down of what pipelines are, and why they should be used, before we give an example where it can be hard to know whether making changes to a pipeline will fail, and why that can be the case.</p>\n<p>Then, we'll showcase tools and methodologies that can be used for testing, creating, and simulating pipelines, so you too can setup a system to always be sure that your pipeline changes won't cause any water damage.</p>",
      "authors": [
        "Evan Kohilas"
      ],
      "speakers": [
        {
          "id": 31,
          "name": "Evan Kohilas",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/31.jpg.256x256_q85.jpg",
          "bio": "<p>Evan is an Serial International Speaker and Senior Software Engineer whose passions lie in improving the developer experience by enhancing code health, optimising workflows, and working towards nohumanerrors.com</p>\n<p>When he's not thinking about security, informatics, or giving talks about his many projects, you'll find him nomming on Subway cookies, or chasing bunny rabbits.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/28/",
      "cancelled": false
    },
    {
      "room": "Room 310/311",
      "rooms": [
        "Room 310/311"
      ],
      "start": "2025-05-16T16:30:00-04:00",
      "end": "2025-05-16T17:00:00-04:00",
      "duration": 30,
      "kind": "charla",
      "section": "talks",
      "conf_key": 91,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Diseñando y Construyendo Teclados ⌨️ Personalizados con Python",
      "description": "<p>Como programadores, pasamos mucho tiempo tecleando, pero a menudo pasamos por alto cómo el diseño de nuestros teclados afecta nuestra comodidad y productividad. En esta charla, exploraremos los teclados personalizados y cómo Python puede ayudarnos a crear nuestras propias experiencias de typing.</p>\n<p>Comenzaremos analizando la historia del diseño de teclados y las limitaciones de las distribuciones estándar como el QWERTY. Luego, hablaremos de las ventajas de distribuciones alternativas, como diseños ortolineales y split/divididos, que pueden ayudar a reducir la tensión y mejorar la velocidad de escritura.</p>\n<p>A continuación, revisaremos cómo diseñar el PCB (placa de circuito impreso) de un teclado personalizado y aprenderemos a utilizar herramientas de Python como GDSFactory. Aprenderás a colocar las teclas según la forma de tus manos y a crear una distribución que se enfoque en las teclas que más utilizas en tus lenguajes de programación preferidos.</p>\n<p>Una vez que tengamos el diseño del PCB, pasaremos a la construcción de nuestro teclado personalizado. Cubriremos los aspectos básicos del ensamblaje para convertir nuestro diseño en un dispositivo real. Finalmente, hablaremos sobre cómo adaptarnos a nuestra nueva distribución de teclado. Veremos herramientas en línea y scripts de Python para analizar nuestros hábitos de mecanografía, ayudándonos a identificar nuestras teclas más comunes y a monitorear nuestro progreso mientras reentrenamos nuestros dedos.</p>\n<p>No se requiere experiencia previa en construcción de teclados o diseño de PCB; solo trae tu curiosidad y ganas de crear una experiencia de escritura personalizada. Al final de esta charla, sabrás cuestionar el diseño de tu teclado actual y quizá te animes a construir y mejorar tu propio teclado personalizado usando Python.</p>",
      "authors": [
        "Carlos A Aranibar"
      ],
      "speakers": [
        {
          "id": 12,
          "name": "Carlos A Aranibar",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/12.jpg.256x256_q85.jpg",
          "bio": "<p>Carlos Aranibar is a Data Scientist 📊 from Bolivia 🇧🇴 who now lives in Chicago.</p>\n<p>He has a background in Economics and Statistics and holds a Master's in Data Science.\nCarlos is skilled in querying data, process optimization, and automation.\nHe loves to learn and actively participates in multiple Meetups, discussing new developments in tech/software/data. Carlos is also a volunteer for PostgreSQL.</p>\n<p>Fluent in both English and Spanish!</p>\n<p><a href=\"https://www.linkedin.com/in/carlos-aranibar/\">Carlos' LinkedIn</a>, feel free to reach out!</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/10/",
      "cancelled": false
    },
    {
      "room": "Hall C",
      "rooms": [
        "Hall C"
      ],
      "start": "2025-05-16T16:30:00-04:00",
      "end": "2025-05-16T17:00:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 87,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Building Resilient Data Pipelines: The Power of Idempotency",
      "description": "<p><strong>Data pipelines</strong> are vital for moving data from source to destination. They help with use cases like integrating multimodal data, building a data warehouse, improving data quality, and more.</p>\n<p>Over many years, developers have developed many design patterns or best practices for building data pipelines in Python using Pandas, Numpy, and more. However, one crucial criterion for creating a data pipeline is idempotency.</p>\n<p>This talk will open with a brief overview of data pipelines and the importance of idempotency in distributed systems. We’ll look to answer the question: <strong>What does it take to build an idempotent data pipeline in Python with an example?</strong></p>\n<p>Our exploration will begin with the pitfalls of non-idempotent pipelines, then proceed to a methodology for building idempotent data pipelines and the design decisions that accompany them. Along the way, we’ll explore testing strategies using pytest.</p>\n<p>This talk is aimed at those interested in building idempotent data pipelines.</p>",
      "authors": [
        "Mihir Kavatkar"
      ],
      "speakers": [
        {
          "id": 80,
          "name": "Mihir Kavatkar",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/80.JPG.256x256_q85.jpg",
          "bio": "<p>Hi! My name is Mihir Kavatkar and I love architecting distributed systems, building data pipelines and web applications. I am a Lead Software Engineer at Memorial Sloan Kettering Cancer Center. My team and I build software systems for molecular tests conducted at MSK in the Department of Pathology and Lab Medicine.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/68/",
      "cancelled": false
    },
    {
      "room": "Room 301-305",
      "rooms": [
        "Room 301-305"
      ],
      "start": "2025-05-16T16:30:00-04:00",
      "end": "2025-05-16T17:00:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 90,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Unlocking Python's Power: A Practical Guide to Metaprogramming with Decorators, Metaclasses, and Dynamic Code Generation",
      "description": "<p>This presentation delves into advanced Python programming techniques related to metaprogramming, which allow developers to write code that can evaluate, modify, or build upon other code. </p>\n<p>We will explore key metaprogramming constructs—decorators, metaclasses, and dynamic code generation—through practical examples and real-world applications. \nThis session will provide the audience with the tools and insights to take advantage of the most advanced Python programming techniques to help them plan, optimize workflows, or write dynamic applications\nPerfect for intermediate to advanced developers who are ready to take their coding skills to the next level!</p>",
      "authors": [
        "Aditya Mehra"
      ],
      "speakers": [
        {
          "id": 118,
          "name": "Aditya Mehra",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/118.png.256x256_q85.png",
          "bio": "<p>Aditya Mehra is a Senior Software Architect with over 17 years of extensive experience in the IT industry. A Computer Science Engineering graduate, he has delivered numerous talks at Python conferences across the globe.</p>\n<p>An active member of the Python Software Foundation, Aditya is deeply committed to the Python community. He is passionate about mentorship and teaching, conducting free, weekly online Python classes for people across the globe. \nHe has also volunteered at multiple Python events across the globe, consistently contributing to the growth and success of the community.</p>\n<p>Aditya has written several journals on cutting-edge technologies and holds three registered patents and publishes a weekly newsletter on Python and technology and contributes articles to Medium and other public platforms , showcasing his dedication to innovation and advancing the field of technology.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/102/",
      "cancelled": false
    },
    {
      "room": "Hall B",
      "rooms": [
        "Hall B"
      ],
      "start": "2025-05-18T16:35:00-04:00",
      "end": "2025-05-18T17:05:00-04:00",
      "duration": 30,
      "kind": "plenary",
      "section": "talks",
      "conf_key": 170,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Python Software Foundation Update",
      "description": "<p>Python Software Foundation Update</p>"
    },
    {
      "room": "Hall A",
      "rooms": [
        "Hall A"
      ],
      "start": "2025-05-15T17:00:00-04:00",
      "end": "2025-05-15T19:00:00-04:00",
      "duration": 120,
      "kind": "plenary",
      "section": "tutorials",
      "conf_key": 27,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Opening Reception",
      "description": "<p>Opening Reception</p>"
    },
    {
      "room": "Hall C",
      "rooms": [
        "Hall C"
      ],
      "start": "2025-05-17T17:00:00-04:00",
      "end": "2025-05-17T17:30:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 144,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Metaclasses Demystified",
      "description": "<p>Metaclasses are among the deep magic of Python, which most developers will ever need. As Python pushes into more and more spaces, and becomes responsible for increasingly complex software, there's a need for elegant solutions to some specific architectural problems; metaclasses are a part of some of those solutions.</p>\n<p>In this talk, you'll learn all about the enigmatic metaclass, and where this often esoteric part of Python actually can come in handy. Then, we'll wrap up by ensuring you're attacking the right problems before reaching for this oft-alluring piece of arcana.</p>",
      "authors": [
        "Jason C. McDonald"
      ],
      "speakers": [
        {
          "id": 154,
          "name": "Jason C. McDonald",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/154.png.256x256_q85.jpg",
          "bio": "<p>Jason C. McDonald is a principal software engineer and author with a passion for communication and education. He mentors young developers, especially through his open source organization's internship program, and has written many articles on a variety of computer science topics ranging from the technical to the interpersonal. He's the author of \"Dead Simple Python\" (No Starch Press), based on his popular article series of the same name.</p>\n<p>Jason draws from his journey recovering from a traumatic brain injury to help people achieve their full potential. In addition to his programming career, Jason is a fiction author and an independent songwriter with a love of absurdist humor and wordplay.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/137/",
      "cancelled": false
    },
    {
      "room": "Room 310/311",
      "rooms": [
        "Room 310/311"
      ],
      "start": "2025-05-17T17:00:00-04:00",
      "end": "2025-05-17T17:30:00-04:00",
      "duration": 30,
      "kind": "charla",
      "section": "talks",
      "conf_key": 147,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Usando Python y Gemini para visualizar alertas sanitarias en una web accesible",
      "description": "<p>En esta charla se expondrá cómo se usa Flask y Gemini para obtener información de interés desde distintos sitios web no estructurados. Adicionalmente, se discutirán atajos para web-scraping con Python, en un formato legible para Gemini. Esta sesión está dirigida a  personas interesadas en IA y con conocimiento básico de Python, así como para profesionales curiosos, en busca de nuevas aplicaciones de IA. \nLa motivación de este proyecto surge pues en Chile las alertas sanitarias en medicamentos, especialmente en anticonceptivos, han sido un problema grave que impacta con más énfasis a mujeres y sus derechos reproductivos. Por ejemplo, alrededor de 200 mujeres fueron afectadas sólo en el primer fallo documentado de anticonceptivos en el segundo semestre de 2020. La solución del gobierno de la época fue indemnizar a las afectadas que demandaron, con 80.000 pesos Chilenos, (80 USD app). Desafortunadamente no fue el único caso, de hecho la última alerta informada de anticonceptivos defectuosos data de septiembre de 2024. \nEn esta charla se presentará una web app para resolver el problema del acceso a la información sobre las alertas sanitarias de medicamentos defectuosos en Chile, usando IA generativa y frameworks web.</p>",
      "authors": [
        "LÍA DA SILVA ROJAS"
      ],
      "speakers": [
        {
          "id": 28,
          "name": "LÍA DA SILVA ROJAS",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/28.png.256x256_q85.png",
          "bio": "<p>-</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/26/",
      "cancelled": false
    },
    {
      "room": "Ballroom BC",
      "rooms": [
        "Ballroom BC"
      ],
      "start": "2025-05-17T17:00:00-04:00",
      "end": "2025-05-17T17:30:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 145,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "AI with a Conscience: Building Fair and Transparent Systems in Python",
      "description": "<p>With the rise of GPUs and Large Language Models (LLMs), Machine Learning (ML) and Artificial Intelligence (AI) have become household names. Python, known for its simplicity and powerful libraries, has been at the forefront of this AI revolution, offering robust tools for model building, training, and fine-tuning.</p>\n<p>However, as AI systems become more embedded in society, one challenge that has gained increasing attention is \"Fairness in AI\". Fairness is a complex and widely discussed topic with no one-size-fits-all definition. For example, imagine a baker dividing a pie: should the larger slice go to the person who worked harder or the one who is hungrier? Similarly, in AI, fairness is defined by context, but it aims to ensure equitable treatment of all individuals or groups impacted by a model’s predictions.</p>\n<p>ML models learn through data. Unfortunately, more often than not, data is full of historical inequities, imbalanced labels, or skewed representations—that can lead to unfair outcomes. Addressing these biases requires tools that go beyond precision, accuracy and optimization.</p>\n<p>In this talk, we’ll explore these challenges and go over a demonstration of how Python can help address them using the fairlearn library. Through real-world examples, we will learn methods to measure fairness using metrics like demographic parity, equalized odds, equal opportunity etc. We will also learn to mitigate these biases using GridSearch and ThresholdOptimizer. </p>\n<p>Prerequisites: Whether you are a Python newbie or a seasoned Pythoniast, with any level of experience in Machine Learning, you are welcome to join and explore a piece of the pie!</p>",
      "authors": [
        "Sanjana Kandi"
      ],
      "speakers": [
        {
          "id": 85,
          "name": "Sanjana Kandi",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/85.jpg.256x256_q85.jpg",
          "bio": "<p>Sanjana Kandi is a Senior System Software Engineer at NVIDIA, specializing in developing tools for data center compliance. With a background in machine learning from her master’s studies at Carnegie Mellon, Sanjana spends much of her leisure time delving into the fast-evolving world of ML and going hands-on on problem solving. She is a dedicated advocate for women in tech and is deeply committed to advancing diversity and inclusion in the technology sector. Outside her professional life, she enjoys badminton, hiking, and cooking—activities that combine adventure, fitness, and creativity.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/74/",
      "cancelled": false
    },
    {
      "room": "Hall A",
      "rooms": [
        "Hall A"
      ],
      "start": "2025-05-15T17:00:00-04:00",
      "end": "2025-05-15T19:00:00-04:00",
      "duration": 120,
      "kind": "plenary",
      "section": "sponsor-presentations",
      "conf_key": 45,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Opening Reception",
      "description": "<p>Opening Reception</p>"
    },
    {
      "room": "Room 301-305",
      "rooms": [
        "Room 301-305"
      ],
      "start": "2025-05-17T17:00:00-04:00",
      "end": "2025-05-17T17:30:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 146,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Memory Efficient Iteration with Python's itertools- A Deep Dive",
      "description": "<p>In today’s data-driven world, handling large datasets efficiently is crucial for any developer or data scientist. Python's itertools module offers a suite of fast and memory efficient tools to handle extensive data iteration, making it a great solution for managing large datasets without exhausting system resources. This talk will dive into several key functions of itertools comparing them to native Python iterations. Attendees will learn how to streamline their code and reduce memory usage while maintaining high performance.</p>\n<p>While itertools is part of Python’s standard library, it is often overlooked by many developers in favor of more familiar, but less efficient, native methods. This talk will emphasize the importance of understanding and using these memory-efficient tools, particularly when working with large datasets, where performance and resource management are critical. We’ll begin with a discussion of common challenges developers face when handling large-scale data and why default iteration methods can lead to memory exhaustion or slow performance.</p>\n<p>Next, we’ll explore key itertools functions like chain, islice, and cycle, demonstrating how they can drastically reduce memory usage while maintaining high speed. More advanced tools like groupby, product, and permutations will also be covered, showing their relevance in complex data processing scenarios. Real-world examples and benchmarks will clearly illustrate how itertools outperforms native Python approaches in both memory efficiency and speed.</p>\n<p>By the end of this session, attendees will not only understand how to incorporate itertools into their workflows but will also gain actionable strategies to write more efficient and optimized Python code. This knowledge will empower them to tackle large datasets with confidence, leading to faster, more scalable applications in data science, software development, and beyond.</p>",
      "authors": [
        "Kalyan Prasad"
      ],
      "speakers": [
        {
          "id": 132,
          "name": "Kalyan Prasad",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/132.jpg.256x256_q85.jpg",
          "bio": "<p>Kalyan is a Data and AI scientist with a background as a former data science and analytics manager, effectively balancing both academia and industry. He has presented talks at various international PyCon's ,  Data Science,  AI conferences, showcasing his expertise. As a community leader, Kalyan currently serves as the Chair for PyConf Hyderabad 2025 and has held the role of Co-chair for PyConf India 2023 and PyConf Hyderabad from 2022 to 2024. In addition to these leadership positions, he is an active contributor to numerous Python, data science, and scientific communities worldwide.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/117/",
      "cancelled": false
    },
    {
      "room": "Hall B",
      "rooms": [
        "Hall B"
      ],
      "start": "2025-05-18T17:05:00-04:00",
      "end": "2025-05-18T17:20:00-04:00",
      "duration": 15,
      "kind": "plenary",
      "section": "talks",
      "conf_key": 171,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Closing",
      "description": "<p>Closing</p>"
    },
    {
      "room": "Ballroom BC",
      "rooms": [
        "Ballroom BC"
      ],
      "start": "2025-05-16T17:15:00-04:00",
      "end": "2025-05-16T17:45:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 94,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "The Most Bizarre Software Bugs in History",
      "description": "<p>We've all heard that we should test our software, but what happens when we don't? Sometimes, it leads to strange and unexplainable events.</p>\n<p>Is 'testing more' always the right solution? What do these bugs reveal about software and its failures? And how can we use these lessons to build more resilient systems?</p>\n<p>Let's take a look at the most bizarre software bugs in history.</p>",
      "authors": [
        "Mia Bajić"
      ],
      "speakers": [
        {
          "id": 19,
          "name": "Mia Bajić",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/19.JPG.256x256_q85.jpg",
          "bio": "<p>As a software engineer, I design and build backend systems that power data products.</p>\n<p>Beyond my daily work, I serve as Vice Chair of the EuroPython Society, where I help shape one of Europe’s largest Python events. I also co-organize local events in Prague. I believe strongly in the power of education, and through organizing these events, I contribute to building a more open and connected community.</p>\n<p>I write a TIL blog, where I share what I've recently learned: https://clytaemnestra.github.io/tech-blog/</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/17/",
      "cancelled": false
    },
    {
      "room": "Room 301-305",
      "rooms": [
        "Room 301-305"
      ],
      "start": "2025-05-16T17:15:00-04:00",
      "end": "2025-05-16T17:45:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 95,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Or Else! An Exploration of Obscure Control Flow",
      "description": "<p>Everyone knows how an if-else block works, but what about a for-else block? Or try-except-else? What do those do, and how can they help us write cleaner code? What other hidden gems await us in the halls of Python grammar? Come join us for an adventure into depths of the Python world less traveled.</p>\n<p>We'll start with a brief look at the fundamentals of program control flow, and how our choices as developers influence the readability and maintainability of our code. We'll look at some easy ways to use lesser-known syntax elements to make common code patterns more obvious, and compare and contrast them with equivalent alternatives.</p>\n<p>Next, we'll start to pull back the curtains a bit on how Python handles more complex control flow mechanisms, like generators and decorators, and look at ways to leverage those features to build higher order functionality. Lastly, we'll get a bit reckless and look at how Python makes it possible to create our own systems for control flow, and consider committing some light crimes in the name of code readability.</p>\n<p>We might even implement the highly desired \"do-while\" loop while we're at it.</p>",
      "authors": [
        "Amethyst Reese 🌸"
      ],
      "speakers": [
        {
          "id": 97,
          "name": "Amethyst Reese 🌸",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/97.png.256x256_q85.png",
          "bio": "<p>Amethyst is a senior engineer at Meta, working on foundational Python infrastructure and tooling to support thousands of engineers, data scientists, and ML researchers. She is also the maintainer of numerous open source libraries on PyPI, and an experienced speaker from Python conferences and meetups around the world.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/85/",
      "cancelled": false
    },
    {
      "room": "Hall C",
      "rooms": [
        "Hall C"
      ],
      "start": "2025-05-16T17:15:00-04:00",
      "end": "2025-05-16T17:45:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 92,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Schemas: The Key To Data Happiness",
      "description": "<p>Shape shifting data got you down? If you’re a Pythonista who works with data you’ve probably had at least one headache due to unexpected changes in data. In this talk you’ll see how to create, maintain, and leverage schemas to generate test and training data, improve data pipeline reliability, generate code, and some other neat tricks.</p>",
      "authors": [
        "Sev Leonard"
      ],
      "speakers": [
        {
          "id": 50,
          "name": "Sev Leonard",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/50.jpeg.256x256_q85.jpg",
          "bio": "<p>A long time snake person, Sev has been working with data and Python for a bit over a decade. His work spans the data stack from infrastructure to analysis and machine learning, which he's used to improve healthcare and protect small businesses from cyber threats. Sev enjoys teaching and has presented on data pipelines and micropython at PyCon, PyDX, and PyCascades. He is an O'Reilly contributor, including the author of Cost-Effective Data Pipelines and an invited speaker on data &amp; AI. He loves cats, the forest, and baked goods.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/45/",
      "cancelled": false
    },
    {
      "room": "Ballroom A",
      "rooms": [
        "Ballroom A"
      ],
      "start": "2025-05-16T17:15:00-04:00",
      "end": "2025-05-16T17:45:00-04:00",
      "duration": 30,
      "kind": "talk",
      "section": "talks",
      "conf_key": 93,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Working with Audio in Python (feat. Pedalboard)",
      "description": "<p>Digital audio has been around for as long as computers, but working with audio data can still be complicated, especially in Python. In this talk, we'll talk about how digital audio works from the ground up (from sounds, to bytes, to files), how you can use Python to do a bunch of really neat things with audio, and how a Python library - Pedalboard - helps make working with audio much easier.</p>\n<p>Ever used a digital audio workstation (DAW) like GarageBand, Ableton Live, Logic, or Pro Tools? Today's musicians use DAWs as instruments in themselves. But what if you want to combine the power of a DAW with the flexibility of writing your own code?</p>\n<p>Pedalboard was built to fill this niche: to pull the power of a DAW into your Python code. Pedalboard makes it easy to build and apply audio effects, read and write audio files, and load audio plug-ins (\"VSTs\") without any complicated dependencies or frameworks. Just <code>import pedalboard</code> and go!</p>",
      "authors": [
        "Peter Sobot"
      ],
      "speakers": [
        {
          "id": 130,
          "name": "Peter Sobot",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/130.PNG.256x256_q85.png",
          "bio": "<p>Peter is a Staff Machine Learning Engineer at Spotify in New York, where he helps lead their Audio Intelligence Lab - a machine learning research lab dedicated to pushing the state of the art in audio-based machine learning. He also maintains <a href=\"https://github.com/spotify/pedalboard\">Pedalboard</a>, a popular package used for working with audio data in Python. He's secretly Canadian (howdy neighbour!) and when not hacking on audio software, he plays drums and bass in four bands all around New York City.</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/115/",
      "cancelled": false
    },
    {
      "room": "Room 310/311",
      "rooms": [
        "Room 310/311"
      ],
      "start": "2025-05-16T17:15:00-04:00",
      "end": "2025-05-16T17:45:00-04:00",
      "duration": 30,
      "kind": "charla",
      "section": "talks",
      "conf_key": 96,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [
        "redacted"
      ],
      "name": "Django Asíncrono: Desbloqueando el Poder de la Programación Async",
      "description": "<p>Con la llegada de Django 3.1, el framework dio un gran salto hacia el futuro al integrar soporte para asincronismo. Pero, ¿qué significa esto para quienes desarrollamos aplicaciones web? En esta charla, te voy a enseñar cómo usar las herramientas de asincronismo en Django para construir aplicaciones más rápidas y eficientes.</p>\n<p>Empezaremos con una breve introducción a asyncio, la base del asincronismo en Python. ¿Qué son los event loops? ¿Qué hacen async y await? Si nunca has trabajado con código asíncrono, no te preocupes, aquí lo explicaremos de forma simple.</p>\n<p>Después, entraremos directo en el mundo de Django:\n- Escribiremos vistas asíncronas (async def) y exploraremos casos prácticos donde el asincronismo realmente marca la diferencia.\n- Veremos cómo Django adopta la convención de agregar una “a” a métodos asíncronos (aget, apost) para diferenciarlos de las versiones síncronas.\n- Compararemos el rendimiento entre vistas síncronas y asíncronas mediante pruebas reales, mostrando cómo manejar múltiples peticiones a APIs externas de manera eficiente.\n- Discutiremos las limitaciones actuales del ORM de Django (spoiler: sigue siendo síncrono) y cómo manejarlas en proyectos modernos.</p>\n<p>Para cerrar, incluiré una demostración práctica y ejemplos de código reales que puedes llevarte a casa. Esta charla está pensada para desarrolladores de nivel intermedio que quieran llevar sus proyectos Django al siguiente nivel y entender cómo el asincronismo puede transformar la manera en que construimos aplicaciones web.</p>",
      "authors": [
        "Luis Martinez"
      ],
      "speakers": [
        {
          "id": 38,
          "name": "Luis Martinez",
          "photo": "https://pycon-assets.s3.amazonaws.com/2025/media/speaker_photos/38.jpg.256x256_q85.jpg",
          "bio": "<p>I have been working in software development since 2014, I am a technologist in informatics, and web python developer. I also like to learn more about development, I worked remotely at Swapps.com as Full Stack Software Engineer, after that I worked at Platzi.com as a Backend software engineer with Python / Django also I was a Cloud Engineer with AWS.</p>\n<p>I am also the teacher of the Django, Django Rest Framework courses in Platzi.com</p>"
        }
      ],
      "conf_url": "https://us.pycon.org/2025/schedule/presentation/36/",
      "cancelled": false
    },
    {
      "room": "Hall B",
      "rooms": [
        "Hall B"
      ],
      "start": "2025-05-17T17:45:00-04:00",
      "end": "2025-05-17T18:45:00-04:00",
      "duration": 60,
      "kind": "plenary",
      "section": "talks",
      "conf_key": 148,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Lightning Talks",
      "description": "<p>Lightning Talks</p>"
    },
    {
      "room": "Hall B",
      "rooms": [
        "Hall B"
      ],
      "start": "2025-05-16T18:00:00-04:00",
      "end": "2025-05-16T19:00:00-04:00",
      "duration": 60,
      "kind": "plenary",
      "section": "talks",
      "conf_key": 97,
      "list_render": false,
      "license": "CC BY",
      "tags": "",
      "released": true,
      "contact": [],
      "name": "Lightning Talks",
      "description": "<p>Lightning Talks</p>"
    }
  ]
}
