name: ICS Generator

on:
  push:
  schedule:
    - cron: '45 11-23 * * *'
    - cron: '45 0-1 * * *'

permissions:
  contents: write
jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required your-command    # 8 PM–9 PM ET (00–01 UTC next day)'
      #----------------------------------------------
      - name: Install library
        run: poetry install --no-interaction
      - name: execute py script
        run: |  
          source .venv/bin/activate
          cd pycon_us_ics
          python pycon.py
          # Run all the manually parsed stuff to completion even if it fails
          python open_spaces.py || true
          python community_organizers_summit.py || true
          python education_summit.py || true
          python flaskcon.py || true
          python hometown_heroes.py || true
          python language_summit.py || true
          python packaging_summit.py || true
          python maintainers_summit.py || true
          python typing_summit.py || true
      - run: |
          git config user.name gitevents[bot]
          git config user.email ics@gitevents.org
          git add --all
          git diff-index --cached --quiet HEAD || git commit -m "update calendar file" && git push